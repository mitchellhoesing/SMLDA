id,year,text
1,1989,abstract use GOMS model predict error rate mental time translate financial concept equation widely interface representation common spreadsheet package characterize non mnemonic name absolute referencing variable second common nonprocedural command drive software characterize mnemonic name convention relative referencing variable prediction test experiment experience financial analyst interface allow mnemonic relative name call keyword take long overall produce seventy percent few simple error require mental effort give overall cost error financial model conclude interface have keyword representation far superior introduction recur prescription user interface design state interface use term display fit object action user mental representation translate think action take time produce error interface require significant translation user mental representation expect increase mental time error Card Moran Newell analyze skilled user text editing software translate task perform action system similar analysis routine component computer aid circuit design research demonstrate user break task small unit approximately 10330 second show user performance text edit routine component circuit design similar term error frequency command execution time concept different kind interface representation warrant research show interface feature affect performance skilled financial model builder Performance measure term execution time frequency simple conceptual error research execute step 1 Task Analysis task building financial model characterize break essential operation independent give package characterization evident importance describe cell refer formula different type cell type different combination inside common financial formula order represent special time relationship generic financial variable 2 Analysis Interface Representations common interface design ifps Lotus 1 2 3 analyze difference refer cell formula key difference mnemonic constraint cell naming convention cell refer relative absolute location 3 Cognitive Modeling GOMS model build represent step skilled financial model builder likey follow writing model formula cognitive model serve basis make prediction relative frequency error cell type different representation predict explain mental time need translate financial concept formulas 4 Performance Evaluation conduct experiment 31 experience user financial modeling system compare performance prediction financial modelling system eg spreadsheet package business modeling system financial modeler etc second utilize end user software package business word processor claim frequently senior executive analysis cost translate financial TASK analysis basic structure financial modeling system dimensional matrix1 Model builder typically use dimension usually column represent time period row represent financial variable category cost revenue process building model basically package 1 Rows variable column time period label produce grid cell 1some package allow add dimension order include different business unit product sale region etc 2 content cell grid specify cell contain numerical value formula Formulas reference content ofother cell include mathematical andor logical operator numerical constant formula reference cell column formula reside example formula represent relationship show require cell reference column Assetst Current Assetst Fixed Assetst Profit t1 t revenue t1tcost t1 t Notice relationship represent different concept time equation show relationship variable give time t call level variable second show relationship event period time call flow variable financial relationship mix level flow formula represent relationship likely include cell column important distinction financial planner income flow cash flow income flow result accrual basis accounting view revenue recognize transaction relate earning process occur sale service render attempt match expense associate revenue method produce good estimate profitability firm period time provide information cash flow income flow revenue occur receipt cash timing cash flow crucial decision allocation acquisition fund income flow important assess profitability cash flow indispensable perform sound financial planning include financial model confuse beginning analyst present mental burden experience example timing difference income flow cash flow Receipts t1 t 2revenue t3t2 8revenue t2t1 formula represent equation refer cell different column different row respect cell equation reside time time lag income flow cash flow formula include cell different row column difficult think represent basic task financial planning difficult specify current software research show degree difficulty planner referencing cell formula relate kind cell row column different row column refer type type sr type SC type DRC research show cell available planner software package interface add user task difficulty interface representation References content cell cell reference specify represent different cell naming convention main difference cell naming convention financial modeling system Mnemonic name vs non mnemonic name relative reference vs absolute reference Mnemonic cell naming use variable REVENUES COSTS specify row Non mnemonic cell naming use row number absolute reference state position cell overall coordinate relative reference specifie position cell describe location respect cell formula reside cell naming convention result combine cell naming dimension figure 1 show example revenues 1 costs 2 profit 3 4 Year 1 year 2 B J Mnemonic Absolute REVENUES 1 relative PREVIOUS REVENUES Non mnemonic A1 C1R2 Figure 1 cell naming convention refer cell Revenues Year 1 arrow head reside Profit Year 2 arrow foot research investigate name convention widely financial modeling system ifps Interactive Financial Planning System embody relative mnemonic cell naming convention call keyword Lotus 12n3 use absolute non mnemonic cell naming call positional package exhibit difference style interaction eg command language vs direct manipulation user performance respect cell referencing study COGNITIVE MODELS step work involve build GOMS model simulate skilled performance model build observe experienced financial analyst pilot study study participant ask think aloud build typical financial planning model pilot study model building behavior occur general phase acquisition appropriate information translation information formula interface representation skilled financial analyst exhibit type problem solve behavior acquisition information behavior independent interface representation acquisition process occur representation utilize problem acquisition phase refer conceptual error performance evaluation section translation phase mental effort cost translate financial concept formula affect different interface representation GOMS model draw pilot study specify different sequence mental operation representation study example task execute representation show figure 2 fledge GOMS model discuss error cause overload work memory expect correlate peak work memory load call overload error prediction assume peak number work memory resource utilize get close limit likelihood error behavior increase error hypothesis build compare peak work memory load different cell type representation figure 3 show work memory load cell type SC DRC keyword representation execute GOMS model figure 2 GOAL WRITE OPERATOR CELL Keyword Naming GOAL WRITE OPERATOR CEIL GOAL ACQUIRE information ABOUf CEIL SPECIFY information pointer SPECIFY OPERATOR WRITE OPERATOR jf require SPECIFY VARIABLE goal write LAG SPECIFY LAG POINTER SPECIFY KEYWORD WRITE LAG KEYWORD WRITE VARIABLE Jag Positional Naming GOAL WRITE OPERATOR CEIL GOAL ACQUIRE information ABOUf CEIL SPECIFY information pointer SPECIFY OPERATOR WRITE OPERATOR jf require SPECIFY VARIABLE goal write COLUMN Sel GOAL COLUMN specify COLUMN write COLUMN GOAi CALCULATE COLUMN SPECIFY LAG POINTER calculate column write COLUMN SPECIFY ROW NUMBER WRITE ROW number ifno lag Jag Figure 2 GOAL WRTIE OPERATOR CEIL execution GOMS model translate information internal representation financial problem cell type SC DRC Figure 2 show positional representation require step keyword representation model builder perform extra step order translate variable name cell coordinate performance prediction translation process GOMS model 1 mental time execute error free equation estimate simply count number mental operation require cell reference 2 frequency simple Keyword Naming Cell type SC    1    Operetor Pointer Pointer VarName Pointer VerName r Time Cell Type DRC     Kevord Et S Log    Log    Kevrd tl t 1 Operator VorNome VorName VorNome Pointer Pointer Pointer Pointer Pointer VorNemef Figure 3 Working Memory Loads Cell Types SC DRC Keyword Representation horizontal axis chart represent time interval represent length time interval choose represent content work memory change vertical axis show rough estimation number piece information keep work memory translate concept formula symbol goal keep work memory cell type Figure 3 show cell type DRC great demand work memory cell type SC expect high overload error rate DRC SC keyword representation model builder remember translate concept time lag formula writing cell type DRC prediction GOMS model overload error rate show Figure 4 similar prediction error free mental time detail detailed task analysis cell type interface number step require expect correlate time spend perform task Overload Error Rates Predictions Positional Narnini Keyword Namini Type SR Type SC Type SR Type DRC Type SR Type DRC Type SR Type SC Type SR Type DRC Type SC Type DRC representation Positional Type SR Keyword Type SR Positional Type SC Keyword Type SC Positional Type DRC Keyword Type DRC support empirical result Figure 4 Overload Error Rates prediction sum expect subject keyword interface few overload error need mental time subject positional interface additional translation effort require positional representation contrast execution time keyword subject expect long subject require write character similar mental effort estimation find Olson Nilsen study cell reference positional style spreadsheet package show substantially mental effort require pointing cell oppose calculate coordinate research expand essence result make time error prediction base estimation mental effort involve incorporate characteristic task building financial model estimation performance evaluation core comparison performance user keyword base interface versus user positional base interface Keyword subject experience FPS user positional subject experience Lotus 12s3 user subject ask write equation different cell type combination length equation restrict equation contain cell reference subject Thirty experience user firm serve volunteer subject subject work fulltime Fortune 500 financial industrial firm Michigan Ohio participate organization ask individual follow experience year work accounting finance organization b year Lotus 12i3 FPS subject Lotus user positional keyword user FPS Lotus user average experience 73 year accounting finance FPS user 63 subject year experjence respective package ninety percent subject report package twice week remainder recently promote supervisory position Practice Test Problems subject ask solve problem pencil paper eliminate difference interactive style present package subject read description problem aloud instruction booklet give summary datum model skeleton summary datum detail input datum building model model skeleton worksheet label column row row participant write miss equation datum practice problem test problem 24 row Procedure experimental session hour half long consist oral instruction practice problem test problem test write speed questionnaire experimental session videotape test practice problem subject read description problem objective building financial model pick model skeleton summary datum ask write variable time avoid jump row row problem subject give feedback solution write speed test administer control difference subject write speed test subject ask write correct answer test problem copy sheet paper listening transcribing item tape additional experimental control background datum subject collect RESULTS DISCUSSION Errors Errors classify judge category overload error forget cell reference misremember cell conceptual error specify overall formula incorrectly 120 error judge fall category include analysis 115 remammg error 53 overload error 62 conceptual predict interface representation impact overload error rate p01 conceptual error p96 analysis variance logit transformation error rate overload conceptual error result provide support claim conceptual error expect occur translation interface representation start contrast frequency overload error positional subject 45 time great keyword subject 59 vs 13 conceptual error 54 vs 42 Figure 5 show distribution type error cell type interface representation overload error cell type DRC error prone SR SC predict p05 p01 Tukey Kramer test contrary expectation significant difference SR SC cause result discuss misassumption GOMS model effort require reusing piece information early step interaction cell type interface representation p20 mean cell difficult translate representation difficult finally difference error frequency representation cell type highly significant SC p01 slightly significant SR p10 significant DRC predict cognitive model show Figure 4 Percentage Errors Overload Errors ISR 8 DFC Positional 81 Keyword Conceptual Errors Percentage Errors ISR 8 DR rmPositional Keyword Figure 5 Overload Conceptual Error Rates conceptual error cell type SC significantly low error rate type SR DRC p01 task analysis show cell column type SC represent straightforward relationship level flow variable hand cell type DRC require formula represent time lag cell type SR include formula mix level flow formula involve recursion expect conceptual difficulty occur formula include complex financial relationship interface representation affect conceptual process execute translation expect interaction representation cell type conceptual error contrary reasoning low graph figure 5 show strong interaction cell type representation conceptual error interaction explain interface feature package experiment IFPS encourage user think term recursion automatically propagate formula explain frequency conceptual error small positional subject type SR usually recursive formula hand IFPS make difficult write equation cell type DRC encourage recursive thinking conceptually difficult formulate single equation initial steady state condition explain IFPS subject conceptual problem DRC compare Lotus user Times execution time formula reference 7 35 second representation time similar unit task time find card et al study text editing circuit design figure 6 show average time need execute cell reference representation execution time long keyword representation time spend writing write interested total time mental effort involve representation calculate mental time subtract execution time raw writing time estimate separate writing speed test result positional representation force skilled financial analyst spend little 50 time mental operation versus 20 keyword notation Average Time Cell sec Writing Mental Positional 38 39 Keyword 89 22 total 111 Figure 6 Error Free Execution Times General Statistics Mental time formula cell reference 1 10 second keyword representation 3 22 second positional notation mental time spend cell type estimate regress total mental time formula number cell type formula result figure 7 large difference mental effort require cell type representation support hypothesis generate GOMS model Mental Times Regression coefficient standard error Positional Keyword Long SR Short SR SC DRC R2 N 334 38 209 12 925 53 490 96 125 75 116 19 488 72 figure 7 Mental Times important clarify keyword representation method write cell type SR short method user write keyword eg PREVIOUS long method keyword variable specify mental time method indicate GOMS model predict time error variation task accurately represent finally mental time cell reference type representation high correspondence overload error frequencie conceptual error rate explain speculate financial model building long mental time associate increase effort high memory load break produce simple error Figure 8 show overload error rate mental time logarithmic scale IO Mental Time    Overload Error Rate 100 gTime sec 10 0 0 error 01    01 Lotus Lotus Lotus    ifps    ifps    ifps    SR S CFC SR S CFC mental time rate IFPS sr composite short sr long SR comparable mental time overload error rate cell reference Figure 8 Overload Error Rates vs Mental Times conclusion Interface design decision grave consequence effort involve difficult mental woik suppose easy software particular find financial modeling system interface require user calculate cell coordinate impose mental workload produce error increase time attribute mental effort total time enter mnemonic cell reference long time involve hard work take account cost error time correct error intangible cost undetected error keyword representation consider far superior second far reach outcome research demonstration GOMS model formalism useful predict time error performance illustrate potential interface design user interface representation build GOMS model abstraction common property design financial modeling system readily represent decision unbuilt software result experiment confirm cognitive load prediction GOMS model support worth analysis method evaluate design decision difference exist software package finally research paper extend application GOMS model highly complex problem solve task demonstrate apply routine cognitive portion task provide insight user internal problem representation interact external constraint software package acknowledgement research support University Michigan Rackham Grant author like thank Alan G Merten Raymond R Reilly J Frank Yates valuable comment suggestion execution research Special thank financial planner take study purely voluntary basis finally thank Diane L Morrow Lerch help datum recording analysis
2,1987,abstract animation system develop generate animation story write natural language system consist module story understand module stage direct module action generating module story understand module extract action explicitly describe story make scenario stage directing module adapt scenario determine actor position stage set stage actor define 3 dimensional articulated figure component actor primitive motion method achieve complicated action primitive motion combine refer complicated action action generating module produce animate sequence adapt scenario module tightly couple knowledge basis example story Hare Tortoise Aesops Fables write elementary schoolchildren example prove possible produce computer animation directly story write natural language Japanese Key Words computer animation natural language story understand truth maintenance system stage direct motion generating object orient programming constraint propagation 1 introduction recent advance computer graphic technology enable computer animation conventional CAD commercial film movie kind application high level language development language S programming language hard untrained people use encourage widespread use computer animation easy touse computer animation system develop natural language meaning everyday language provide easy touse man machine interface computer novice allow ambiguous description abridgement research currently conduct different area natural language processing eg machine translation general end question answer paraphrasing etc research effort aim understand idea word case produce computer animation story write natural language situation different animation system output consist action sequence necessary understand current action necessarily writer thought reason portray story paper describe Story Driven Animation System sdas generate animation story write natural language distinct conventional computer animation system sdas provide easy touse man machine interface computer novice useful produce animation story write natural language 2 Animation Natural Language produce animation natural language story problem solve 1 Extract description action story 2 Adapt scenario 3 Generate action scenario word related action extract sentence sufficient animation story describe precisely action describe story detail movement hare leg leave right basis concept ridiculous write story essential accurate animation necessary find hidden action word background knowledge common sense order actor stage story adapt animation precisely describe scenario generate action action combination example sequential simultaneous synchronous asynchronous etc impossible provide possible action combination scheduling mechanism require produce desire action 3 System Configuration consider description section describe sdas configuration system consist module show fig1 module extract mean story produce scenario second module direct output story understanding module produce adapt scenario module generate action graphic display record video tape story understanding module implement Prolog Prolog suitable language natural language processing stage directing module use empirical knowledge direction style knowledge representation suitable stage directing implement Prolog action generating module implement flavor object orient Lisp package module sense program generator Lisp capability create new function evaluate dynamically important action consider combination primitive motion object orient programming method suitable action generation 31 Story Understanding conventional technique natural language processing eg machine translation general ends treat input story sentence sentence basis order produce animation discourse analysis essential discourse analysis technique propose Story Story understand Dictionary Stage direct Knowledge base Action generate Action library Animation Fig1 sdas configuration paraphrasing story formalization strongly domain dependent follow restriction input story domain independent discourse analysis technique realize input story restrict children story primary schoolchildren restriction mean 1 ambiguous ie pronoun ellipsis etc seldom see 2 sentence appear time sequence sentence describe situation action story understanding consist inference engine knowledge base store datum human action dictionary contain meaning require understand natural language discourse analysis action perform sentence process ie morpheme syntactic semantic analysis situation change accord time lapse express collection assertion particular time story assertion represent snapshot story collection assertion state include time location fix maintain continuity adjoining collection assertion ascertain consistency collection assertion follow process apply accord situation extant specific time l inheritance let consider follow sentence input tortoise start run Kicking dust tortoise run tortoise hurried walking raise sweat begin tortoise run ordinary manner soon run kick dust run kick dust sweat reason deny assertion tortoise kick dust run assertion inherit succeed collection tortoise run tortoise run tortoise kick dust tortoise run tortoise kick dust tortoise sweat fig2 inheritance example assertion explicit description assertion Fig 2 2 deletion action complete finish mention input sentence explicitly action bring halt inference subsequent sentence example tortoise arrive mountain collection assertion correspond sentence keep assertion tortoise arrive goal tortoise state tortoise stop run tortoise sweat assertion inherit precede collection assertion assertion tortoise kick dust eliminate tortoise stop run state process achieve Truth Maintenance Mechanism base dictionary contain knowledge kick dust contradict state Fig 3 3 Interpolation continuity adjoining collection assertion check affirm new assertion add collection assertion affirm interpolation carry retain continuity collection assertion let consider follow sentence hare run hare lie grass hare state lie grass precede collection assertion show hare run Backward Reasoning interpolate action hare stop force hare state interpolation satisfy precondition action Fig 4 4 assumption base reasoning require information explicitly describe input story assumption example sky exist background input story sky case assumption sky clear new assertion deny assumption find Truth Maintenance Mechanism eliminate assumption kind reasoning produce precisely describe scenario ie action sequence actor story understanding implement combine kind reason knowledge representation 32 Stage Directing Stage directing module produce precisely adapt scenario base output story understanding module story divide scene collection assertion story understanding represent action actor location Collections assertion merge scene accord continuity place actor action continuity time place actor adjoining collection assertion maintain collection assertion belong different scene scene location assign actor simple heuristic rule example people meet come left come right meet center stage stage setting carry time stage setting mean draw sky mountain tree grass Figure 5 show scene story Hare Tortoise scene follow sentence represent hare tortoise meet field stage directing module make stage blue sky green mountain background ground brown meet field tree tortoise run tortoise kick dust tortoise sweat     nte tmtoise miw Ifie tot wise kick tif1 W5 t tortoise sweat tortoise stop fig3 deletion example hare run l Thehar    estop ithe hare lie ground fig4 action interpolation example grass scatter hare leave stage tortoise right walk center stage stop 33 Action Generating Actions generate base scenario story understanding module stage directing module major issue Model Description define 3 dimensional model actor Motion Description define motion actor 1 Model Description model description language implement flavor object orient Lisp package model define object advantage class inheritance relation message pass mechanism flavor provide actor define articulated figure consist bone joint Bones datum contain information shape coupling joint Joints datum contain information coupling bone angle bone connect bone joint produce different figure figure represent tree structure node correspond bone arc correspond joint bone joint define combined form figure fig6 show example model definition define arm fig5 scene story Hare Tortoise definefigure arm upperbone lowerbone handbone hand scale 03 elbowjointl wristjoint2 link elbow vl upper pl link elbow v2 low p2 link wrist vl low pl link wrist v2 hand p2 class super class instance upperclass bone scale 03 instance elbowclass jointl connect joint bone 2 Motion Description motion description language implement flavor hierarchy primitive motion define module combination module complicated motion primitive motion change joint angle cause rotation bone end bone change location rotate bone connected bone location change propagate movement hierarchy realize propagation constraint propagation mechanism employ Constraints set bone end directly connect model definition change joint angle primitive motion complicated motion define hierarchical combination primitive motion combine time relation action set timing relation express predicate describe time relation sequential parallel repetitive predicate set timing constraint action synchronize action constraint propagation mechanism timing relation action give story sufficient define animation indicate qualitative relation event drive scheduling mechanism apply assign concrete value animation clock action dynamically example action start action b complete sequential constraint propagation path set variable action start time action bs terminate time action b complete global clock value set action start time constraint propagation path Fig 7 constraint propagation mechanism set action timing dynamically indirect description time scenario motion description language describe primitive motion combine motion like walk highly complicated motion like walk look talk manner step recording animation video tape time consuming process calculate joint coordinate frame key frame calculate frame interpolate key frame frame record VTR frame frame basis start B I31 start end fig6 model description example fig7 sequential action time chart 4 Conclusion animation system develop produce animation story write natural language system module story understand module stage direct module action generating module Based action story understand accomplished scenario story write natural language stage directing module adapt scenario heuristic actor define 3 dimensional model accord adapt scenario scheduling action perform demonstrate sdas produce animation story write natural language computer animation Hare Tortoise Aesops Fables produce example acknowledgement author like express appreciation continuous encouragement Kunihiko Niwa research start suggestion Kazumoto Iinuma Masako Ichikawa Yumiko Koyama contribute programming References Chacola DG Schrack GG Modeling Animating Dimensional Articulated figure Proceedings Graphics Interface 86 Chamiak E Model Childrens Story Comprehension AI TR 266 AI lab MIT 1972 Clocksin WF Mellish CS Programming Prolog Springer Verlag 1981 Doyle J Glimpse Cognitive Psychology Artificial Intelligence MIT Perspective MIT Press Drewery K Tsotsos J Goal Directed Animation English motion Commands Proceedings Graphics Interface 86 Marino G Morasso P Zaccaria R Motor Knowledge Representation Proceedings AAA I984 Pereira F Warren D Definite Clause Grammar Language Analysis Survey formalism Comparison Augmented Transition Networks Artificial Intelligence 13 1980 Reynolds C Computer Animation Scripts Actors ACM Computer Graphics vol 16 13 Jul 1982 Rumelhart DE Notes Schema Stories D G Bobrow Collins Eds Representation Understanding Studies Cognitive Science Academic Press 1975 Schank r Abelson R Scripts plan Goals understand Inquiry Human Knowledge StructureLawrence Erlbaum Associate 1977 Thalmann n Thalmann D use high level 3 D graphical Types Mira Animation System IEEE Computer Graphics Applications Dec 1983 Zeltzer D Knowledge base Animation Proceedings ACM SIGGRAPHSIGART Workshop Motion 1983
3,1989,abstract experiment conduct people gesture speech manipulate graphic image computer screen human substitute recognition device analysis show people strongly prefer use gesture speech graphic manipulation intuitively use multiple hand multiple finger dimension surprising uniformity simplicity gesture speech analysis result provide strong encouragement future development integrate multimodal interaction system introduction paper present study people intuitively gesture speech communicate computer see explosion capability computer present output bandwidth input channel computer limit Aside keyboard input device available user mouse lightpen touch screen limit equivalent pointing finger exception development 3 dimensional gesture recognition device SensorFrame Rolky Glove Drawing Prism device capable tracking motion multiple finger time multi touch pressure sensitive tablet capable tracking motion multiple finger introduce technology development try explore feasibilityand requirement integrate gesture speech recognition system experiment human instead computer perform require recognition card selected set graphic object manipulation task uted direct commercial advantage acm copyright notice title publication date appear notice give copying permission Association Computing Machinery term gesture study refer hand motion manipulate graphic object refer hand motion complete substitute verbal communication sense American Sign Language term refer body motion include hand mean emphasis conversation research gesture focus gesture substitute speak language preverbal mean communication relevant purpose human computer interaction addition interpersonal communication different communication computer practically empirical research relate manipulate graphic object computer display restrict pointing device keyboard command severe limitation inherent type communication dimensional pointing result largely irrelevant purpose METHOD Thirty subject recruit experiment computer communication speech gesture seat fast high resolution bitmappe monochrome graphic terminal video camera different angle microphone record subject gesture speech figure 1 physical layoutof experiment communication mode subject order communication mode randomize subject communication mode allow gesture word subject tell computer able hear kind gesture acceptable purpose experiment mode Subjects ask perform gesture reasonably close proximity 18 inch screen video camera able observe addition perform basic task gesture mean communication subject ask perform task voice communication channel mode tell computer hear say construe attempt carry instruction manipulate object screen interaction mode utilize gestural verbal communicationwith computer subject free use natural convey computer want figure 1 physical setup experiment communication mode subject perform seven operation screen image 3 inch wire cube show figure 2 operation characterize reference action cube half screen subject tell target cube half screen perform action seven different operation subject ask perform classified basic group rotation translation scale rotation operation cube rotating axis 3 dimension subject attempt target cube perform rotation transposition operation cube move leave right origin position screen subject try transpose cube axis transposition imply slide motion change location cube sealing operation cube grow shrink original size target size subject try rescale figure 2 actual image cube trial target cube size reference cube experimenter madjacent room judge subject complete attempt set target cube motion experimenter cause target cube emulate reference cube control keyboard experimenter room end experimental session subject ask preference communication mode addition subject ask prefer typing mode experiment structure experiment use standard hierarchical ANOVA design communication mode seven operation trial mode carry 36 subject independent variable speed cube motion size cube distance movement hold constant subtask experiment RESULTS Videotapes subject analyze dependent variable different rater reliably analyze videotape datum accord detailed gesture classification scheme develop course project Details gesture classification scheme complete presentation result find Highlights complete analysis present Words Subjects total 2397 word 470 trial speech record speech communication mode average 528 word trial significant difference find trial 13 001I seven operation translation trial average 580 word scale trial require 382 word trial rotation trial consume 588 word Task relate word 2397 word 2007 actually useful task rest represent inadvertent speech act hms ahs filler word okay yeah mispronunciation correction significant difference p 001 find trial translation trial require 520 relevant word scale trial take word 315 relevant word rotation trial see 494 average task relate word trial Lexicon total lexicon consist 223 word include subject say relevant actual vocabulary useful word contain 141 word Syntactic Structure syntactically utterance form imperative 936 percent 29 percent utterance declarative 34 percent unclassifiable eg leave significant difference percentage imperative p 05 transposition operation frequently direction leave right command verb average 87 percent command scale operation average 94 percent rotation average 95 percent imperative Fingers 1773 individual finger show 464 gesture 38 finger gesture single finger 290 percent finger gesture occur frequently 241 percent follow finger gesture 168 percent time finger gesture account 86 percent gesture finger gesture 21 percent finger gesture 6 percent remain 97 percent gesture show hand individual finger time index finger present 971 percent follow thumb 653 percent middle 441 percent ring finger 409 percent little finger show 405 percent time significant difference 13 001 number finger gesture trial scaling trial 575 finger average rotation trial show 281 finger average vs translation trial 315 finger average Hands see 609 hand 464 gesture way number hand gesture mode trial vary significantly p 001 trial translation 11 hand scale trial average 15 hand rotation average 12 hand gesture Alignment Gesture Manipulation Object frequently gesture directly screen object manipulate videotape transcription record gesture shift subject leave right object manipulation object alignment feature determine difference position focus gesture start object suppose manipulate take point distance part finger gesture minimize define center gravity focus gesture gesture focus extremely useful aspect identify classify gesture 252 gesture gesture communication mode 78 percent misalign object screen effect show significant difference p 05 trial translate leave right misalign 717 percent time expand shrink operation misalign 819 percent time rotation misalign 796 percent time depend axis rotation alignmentmisalignment significantly different misalignment 69 percent subject 424 percent 345 percent leftright displace misalign way 523 percent Gesture Types determine relative focus gesture start identify basic group motion rotation slide growingshrinking correspond fairly type operation object rotation translation scale classify 199 gesture rotation 137 translation 128 scale gesture 135 gesture translate object 132 977 percent classify translation gesture accord scheme 125 gesture scale operation match gesture classify scale 984 percent time 204 rotation object operate gesture correspondingly classify 960 percent rotation gesture Preferences Modality post experiment question overwhelmingly 13 01 583 percent subject prefer use speech gesture 194 percent preferred gesture 222 percent like speech good experiment 252 trial choice possible subject speech gesture 178 time compare gesture 34 time speech 40 time significant difference trial speech 13 01 translation operation 12 percent time subject speech scale condition 26 percent scale trial choice possible Speech choose rotation trial 10 percent time ifor reader familiar notation p indicate probability difference occur random chance discussion learn experiment see small number total word word speak time result confirm finding Ford find small vocabulary perfectly adequate limited domain communication furthermore syntactic structure speech provide encourage evidence simple natural language grammar build account linguistic communication finally inexpensive commercially available speech system recognition ability exceed vocabulary necessary task example system speaker dependent accept discrete word ie speaker pause briefly word like significant restriction give average number word speak encouraging evidence speech aspect manageable integrate speech gesture system future large datum collect fingerhand position motion gives rise simple conclusion People normally use finger system restrict user single hand finger motion like mouse inadequate manipulation analyze experiment feel safe generalize manipulation real world application likely complex new question raise result show subject misalign gesture target object gesture input system identification object manipulation utmost importance speculate effect feedback ability user modify misalignment feedback practice experiment subject limited feedback gesture indication computer think user finger position relative objecl useful gesture system provide feedback display find subject gesture dimension follow outline screen depend effect laying achieve move finger hand dimension restrict dimensional input gesture severely limit ability naturally communicate gesture lot evidence argue combination input mode subject preferred speech gesture ideal combination use state preference mode ideal particular speech difficult subject sufficiently specify parameter operation Error check correction conjunction form filling program necessary ensure relevant parameter sufficiently specify plausible presence mode speech gesture reliably identify surprising uniformity way subject communicate gesture speech indicate intuitive common principle gesture communication expert user gesture communication channel equally accessible computer user result present meaningful term statistical significance descriptive indication kind thing people communicate gesture andor speech interpretation result accompany note caution operation experiment represent small subset potential manipulation perform operation investigate include constructingassemble object explore magnitude operation sense large vs small distance motion object speed action perform fast vs slow motion object obviously data point complete picture human computer interaction gesture speech provide insight question manipulation graphic image gesture speech acknowledgement research support National Science Foundation SBIR grant ISI 8660349 like thank Paul McAvinney discussion conception project Sharon Shepard provide valuable support data collection phase project exist
4,1987,abstract paper present overview Alternate Reality Kit ARK animate environment create interactive simulation ARK build physical world metaphor object image position velocity experience force user manipulate object mouse operate hand enable carry throw object press button operate slider interface feature discuss light general user interface tension literalism magic Literal feature define true interface metaphor Literal feature enhance interface learnability Magical feature define capability deliberately violate metaphor order provide enhanced functionality Discussion ARK feature include informal observation early ARK user assessment feature learnability usefulness position magical literal axis ARK include magical feature application level user train minute paper ARK tension literalism magic raise interesting question question present briefly conclusion resume Cette presentation donne une description generale dune aTtrousse outil pour une autre realitet ARK Alternate Reality kit qui consiste en un environement anime pour faire de la simulation interactive ARK est base sur un modele du monde physique les objet y ont une image une position une vitesse et ay sont sou mis des force Les utilisateur manipulent les objet aide dune Tmaint controlee par la souris qui leur permet de porter et lancer des object dappuyer sur des bouton et dajuster des levier Les propriete de interface sont decrite en fonction dun conflit entre realisme et magie Les propriete realiste sont cell es S qui respectent le modele physique sur lequel e base interface et qui facilitent lapprentissage de ce dernier Les propriete magique sont celle qui violent les regle du modele physique pour en accroitre les fonction La discussion portant sur chaque propriete de ARK comprend le resultat dobservation des premier utilisateur une evaluation de la facilite dapprentissage de la propriete en question de son utilite et de sa position le long de laxe magie realisme Bien que ARK comprenne des propriete magique se utilisateur au niveau des application ont pu etre entraine en quelque minute Quoique cette presentation porte sur ARK le conflit entre realisme et magie souleve de son propre chef des question nt certaine sont brievement presentee en cone usion introduction designer system use novice gain great advantage basing interface know metaphor computer behave way analogous system understand user learning time greatly reduce Interface feature true designer metaphor call literal learnability ofliteralism make good thing designer provide user enhance capability price breaking metaphor feature allow user wonderful thing far capability literal feature Capabilities violate metaphor order provide enhance functionality call magical power magic make good thing tradeoff learnability literalism power magic employ tension way present experience design observe user Alternate Reality Kit metaphor base system develop nonexpert computer user Alternate Reality Kit ARK intend allow user play simulate world create new one ARK base strong analogy physical world important capability ARK literal transcription computer physical world behavior system design use inexperienced user ARK certain magical characteristic Observations ARK user suggest novice significantly hamper small magic magical feature require brief explanation AR ks basic functionality teach minute paper Alternate Reality kit brief introduction ARK user interface term magic literalism dimension complete description functionality philosophy ARK reference attempt way general discussion tension magic literalism simply employ tension useful way analyze central feature ark interface ARK serve example magic vs literalism tradeoff believe present user interface firml y ground single metaphor conclusion present question raise magical literal view kind user interface Literalism vs Magic ARK Alternate reality Kil ARK system create interactive animated simulation ARK simulation arc intend enable development intuitive understanding simulalion interaction rule make rule appear accessible physical object call interactor ARK support modification creation new simulation animate ARK environment interface faithful lo physical world metaphor object visual image position velocity experience force object hand user control mouse hand user carry object throw press button operate slider control figure 1 real world thing happen simultaneously pendulum swing number change control box response operation slider intent user conclude quickly screen depict physical world user directly manipulate physical object advantage literalism interface strongly base wellknown metaphor require little explanation user stick completely metaphor cripple system functionality example ARK user wish connect simulate pushbutton ARK device turn device button device depict physical object directly manipulate hand user require connect button drilling hole device cut metaphorical electrical work like require ARK perfectly analogous everyday physical world design ARK consider perfectly literal way connect button lo tedious Instead ARK user connect button simply drop device button message send stamp surface    device understand button message button fall right object figure 2 button message meaningful il stick surface object invisible connection establish automatically button immediately functional Furthermore button create cause nonphysical effect double object size mass cause object vanish feature like call magical enable user powerful thing arc outside possibility metaphor admittedly literalism magic conventional computer science parlance find particularly appropriate discuss ARK Alternate Reality kit suggest real literal ability choose modify reality magic ARK literal system contain certain magical feature arc useful literalism limit Ilut lesson ARK literal aspect interface arc obvious magical capability arc hard learn ARK time explain basic actually measure second lternate ReoJty Ii ii Figure 1 Appearance screen see user Alternate Reality Kit window object contain represent alternate reality mouse operate hand near center cast shadow indicate alternate reality hand user mean interact system pick carry object press button interactor present alternate reality hand label Gravity cause gravitational force field present label Motion cause object change position accord velocity window show considerably small typically ARK Figure 2 manipulation button user prepare pick button surface Vertical Launcher b button carry simulate photograph c button release photograph understand turn button fall th ro u g h     piece add magic relatively expensive require explanation come free doc user realize physical metaphor design ARK face tension limitation impose literalism obscurity magic positive term power magic learnability literalism Overview ARK ARK project development System Concepts Laboratory Xerox Palo Alto Research Center implement Smalltalk 80 programming environment system describe evolve influence user feedback continue kind object mention paper show Table 1 system consist collection physical object manipulate simulate hand rare use keyboard type text hand user sole mean interact system ARK user kind thing hand directly change object position velocity carry throwing send object message press simulate button introduce new object button environment select popup menus user change state query object send message message represent button example button Smalltalk 80 trademark Xerox Corporation paper term Smalltalk refer Smalltalk 80 language message velocity set mass tosome parameter describe special button message menu button cause magical effect attach object press cause object create menu list message object understand Selecting message menu cause corresponding button create attached object ready use button send unparameterized message response call simple button illustrate Table 1 button require parameter represent object reply message call non simple show figure 3 4 warehouse object contain copy kind object system include type underlie Smalltalk environment press appropriate button user cause warehouse display menu list object warehouse contain Selecting menu cause copy name object introduce alternate reality button allow user create new kind object store warehouse Ways combine exist button new kind button explore Types ARK User ARK like visual programming environment intend kind user appicationslevel user typically student carry simulate lab low level simulation builder creator particular application role layer populate individual create tool use simulation builder far observe 50 application level user simulation builder application level user experiment study people reaction violation physical law 12 user create new object new kind object accumulate empirical evidence enlighten certain figure 3 Buttons require parameter set velocity button show small plug specify user reach plug b user grab plug carry parameter object c user drop plug object prepare activate button parameter specify small dot start move path connect plug Gothe button simple button show table 1 experiment user observe GI 1987 portion interface application level user use menus non simple button type illustrate figure 3 4 user come computer expectation encounter sophisticated computer user slightly time learn literal feature interface appear expect magic ARK contain hand extremely naive user young child expect interface literal apparently expect magic ARKs balance literalism magic right computer novice age effect user sophistication great misunderstanding correctable sentence Limitation Magic Literalism Analogy External Factors ARK presentation Alternate Reality kit depict designer violate metaphor order provide enhanced functionality magic designer face factor control input device computer performance limitation constraint cause metaphor violate way necessarily enhance functionality fix requirement call external factor impose tl1e designer external factor arc unimportant    successfully present external factor user absolutely crucial find external factor difficult present literal feature magical enhancement ARK interface ARK external factor typically degrade lcarnability enhance functionality consider feature literal magical example alternate reality contain large number strongly interact object animation rate frame second drop noticeably hard grab throw object jerky motion object make look like 1     figure 4 Buttons elicit response message send large object view rectangle represent result velocity button negate button show receive answer message send answer display text graphic view rectangle answer accessible object living view object view rectangle access button like object negate button attach TwoVector object display velocity button view similarly plug specify parameter set velocity button specify TwoVector object negate button view Buttons capture response somewhat magical especially ability represent object view rectangle button represent response experiment user observe real world thing make hard interact external factor break metaphor way degrade functionality behavior clearly literal outside real world behavior prefer use sense wonder term like magic odd annoying visual phenomenon second example mouse operate hand use indirect input device like mouse break real world metaphor provide enhanced functionality pointing device mouse know small finite time learn Furthermore mouse button hand grab object hand activate simulate button observe user point confuse function mouse learn enable user thing capability physical world hand Observations system user indicate external factor troubling aspect system indicate Figure 5 operation mouse occasionally slow animation rate enhancement functionality aid ark learnability ideal system include external factor fit magical literal spectrum unfortunate constraint believe metaphor base interface usually feature literal magical Selected Interface Aspects section describe great detail aspect interface application level user intend complete list sample important aspect tile interface feature list evaluate magic content discuss tile power vs learnability tradeoff note user experience literal aspect list lbi section summarize Figure 5 Use hand user pick object simulate hand tile grasp object carry cast shadow tile alternate reality beneatll grasp object release fall alternate reality maintain velocity imparted hand motion tlli way tl1e user play gravity simulation depict figure 1 tllrow tile moon orbit planet Magic vs Literalism Literal Power vs Lcarnability hand limited ability enable user change position velocity object establish physical contact relationship object contribute bit tile user understand tile system basic user need tell mouse move hand screen leave mouse button enable grab hold object try throw mouse remainder tllis brief explanation tile use hand user infer follow 0 object screen physical entity 0 physical proximity semantic content subject experienced mouse user ask necessary hand object order pick 0 hand carry object drop new location change position 0 hand change object velocity invite tllrow object user ask throw ask allead guess tllese user guess correctly start hand move release hold object Experienced mouse user ask throw accomplished press special mouse button 0 use shadow indicate object reality moderately successful user additional sentence explanation require shadow indicate object hand hovering object window Activation Simple Buttons user play planetary orbit simulation figure 1 wish suspend gravity temporarily right figure kind controller device label Gravity button surface button message send stamp user activate simulate button positioning hand press middle mouse button simple button show Table 1 application level user button require parameter figure 3 send message represent response Figure 4 ARK experiment Magic vs Literalism Literal Power vs Learnability Buttons moderately useful enable user send message object fairly easy explain user understand immediately button training time spend point user characteristic visual presence button idea object respond button press way suggest stamp button simply assume explicit instruction user adopt model consistent picture button thing send message button build importance physical contact establish relationship object Manipulating button simulate button pick surface object certain object button stick surface object respond message button drop object understand message button fall object fail stick surface button simultaneously attach object button large object rest uncommon object button hanging edge completely cover object rest Magic vs Literalism Moderately Magical Power vs Learnability Buttons easily connect removed enable user communicate object flexible way uncommon generally useful button lay selective stick button prevent certain class semantic error example send text message cube root result error table 1 Hand hand user primary mean interact system activate button carry object leave hand show normal relaxed position right hand show carry button shadow cast indicate hand hold object Meta Reality Simple Buttons User input originate button Buttons pick drop object activate hand button bear message send eg Xerox button make copy non simple button require parameter capture response message depict figure 3 4 Warehouse Warehouse icon contain kind object system include Smalltalk environment ARK implement objectmenu button create list kind object user select select object emit alternate reality warehouse Representatives Smalltalk object appear ARK kind ARK object appear inside representative object representative image text describe object represent Slider Controls Sliders convenient way specify number hand grasp 43 tab center groove lnteractor lnteractor physical manifestation normally intangible rule nature physical manifestation provide place interaction rule tactile presence deny mystical character normally attribute universal law highly magical object central importance ARK strategy enable intuitive understand simulation interaction rule GI 1987 manipulability button useful aspect require sentence explanation fact button stick fall object depend object ability respond button message bit tale uninformed user discover accidentally button pick object slightly startle user wonder button work remove surface object drop drop button surface large nonunderstanding object button disappear actually button lie underneath object having fall Interactors ARK interaction law simulate universe newton law gravity example represent physical object call inleraclor lnteractor form interface user fundamental law simulation Magic vs Literalism Highly Magical Power vs Learnability Interactors physical embodiment normally intangible abstraction important actor story design ARK attempt provide intuition make thing concrete enable user change physical Jaws interactor provide capability fundamentally suggest real world metaphor user trouble accept idea control center gravity example need explicitly introduce idea interactor object represent abstraction occasion user difficulty understand exactly abstraction control user require minute discussion clarify interactor role simulation short time absolute term long require literal feature Multiple Realities computer screen ARK user see possibly overlap rectangular window window represent separate alternate reality alternate reality user simply move hand expose portion window window automatically completely expose move stack overlapping world user carry object alternate reality Magic vs Literalism Highly Magical Power vs Learnability use overlap window bring usual advantage enlarge virtual screen area provision multiple reality enable user organize ARK task example world build new object try example window facilitate comparison separate world speed light example user understand idea readily brief description trial require user comfortable ability reality hop user accidentally bring bury alternate reality startle certain application object drift window disappear edge Users concern amused clear happen object retrieve exist fact coordinate system window world indefinitely large object far allow computer ability allocate new word store grow x y coordinate interactor absolute time teach use overlap world short long time take typical literal interface feature helpful t Manipulating Buttons llnteractorsl MAGICAL impact functionality peration Mouse occasionally Slow Animation rate LITERAL Iuses hand Impact Learning Time helpful    figure 5 aspect ARK interface represent graph easy learn thing right useful thingsare Interface aspect tend lie line magical feature upper left literal feature low right existence void upper right sign fundamental tension literalism magic interface designer provide powerful functionality price violating metaphor break metaphor particularly enable evidence ark occasionally slow animation rate use mouse Menus include rarely user experiment system precede list demonstrate inverse correlation power learnability Interface aspect literal easily understand fact important part literal function simply assume user lbose aspect magical useful require majority training time AR ks limited use magic doc prove confusing novice total teaching time remain short minute explanation novice able use capability outline Conclusions Questions magic literalism tension discuss central feature Alternate Reality kit serve useful way analyze ark design issue user experience particular large portion ARK literalism end spectrum jhe important aspect need explicitly explain Furthermore magical aspect require explanation limit use magic ARK keep total teaching time low User experience indicate application level functionality teach minute feature magical enhancement literal adherent metaphor arc troubling ARK magic vs literalism tradeoff interesting perspective system interface center single metaphor graphical programming environment desktop like window system question raise way view metaphorical user interface designer decide implement capability magically instead literally Literalism carry far interface literal surprise novice user building system literal magical way task enable user smoothly wizard status good minimum set magical capability allow user build magic spell possible find metaphor put external factor literalism magic spectrum question like lead interesting discussion way enable control release magic latent computer acknowledgement follow individual source stimulate discussion thoughtful comment Sara Bly Adele Goldberg George Goodman Laura Gould Jane Laursen Tim OShey Dave Robson Frank Zdybcl
5,1987,Abstract Handmarkings eg handwritten proofeditor mark direct editing command interactive computer system exploratory experiment study potential value handmarking editing text picture result show circle frequently scope mark arrow frequently operator target indicator experimental comparison show handmarking potential fast keyboard mouse edit task ultimate value depend style detail user interface implementation Key Words handmarkings gesture edit user interface technique Introduction Todays technology make possible people write draw tablet directly computer screen computer recognize execute handmarking gesture command Coleman 1969 demonstrate feasibility year ago Handmarkings advantage cite direct manipulation type user interface Shneid    erman 1982 think handmarking form basis improve text editor textedite prolific computer application conventional text editor hard time consume learn Mack Lewis Carroll 1983 learn time consuming use experience user require 20 35 sec perform typical editing operation Allen Scerbo 1983 Gould Alfaro 1984 Gould Lewis Barnes 1985 participant require half time hand modification mark document Gould Alfaro 1984 note summarize series exploratory experiment complete handmarking Gould Salaun 1986 Experiment 1 Editing Text Pictures Handmark    ing Purpose goal observe people leave way thing carry edit operation pencil text material picture material work similar Wolf 1986 motivation collect data influence development handmarking command language appropriate text image picture task second goal compare time edit handmarking find early edit text editor Method volunteer Yorktown Research Laboratory participant participant carry specific editing operation 11 text task 12 picture task task appear separate page panel label figure 1 9 reduction actually task participant read aloud instruction page reading time typically paused carrying instruction Pause time carry instruction execution time say turn page ready begin task turn blank sheet paper expose participant receive different random order 23 task intention study edit operation picture text task insert object room exist insert object room exist insert space object place delete copy replace group select clear GI 1987 operation describe multiple way eg particular operation consider Insert Exchange Landauer Galotti Hartwell 1983 heading Table 1 categorize result example combine Insert object task arbitrary distinction participant instruct write person eg secretary unambiguously understand carry write tell carry work simply speedily possible avoiding use word possible time videotape Afterwords judge unfamiliar experiment interpret handmarking judge instruction task example show figure 1 9 judge aware participant ask Results Examples result show panel bc d figure 1 9 circle number panel indicate number 11 participant write handmarking way priori feel edit operation divide component select scope mark verb operate mark target mark apply analysis scope select mark participant circle albeit non perfect one 49 253 case figure lb example scope mark comer eg box rarely time scope mark eg delete operation figure 4 case scope implicit base oftentime end operate mark eg figure le ld informal inspection videotape show selectionscope object generally prior draw operator far commonly operateverb mark line arrow head 57 case figure 1b le ld example line straight gently curve sharp point inflection double head tail line arrow meaningful common target indicator head arrow Target mark vary widely shape see figure 2 3 redundancy participant mark eg rarely circle object cross participant generally find nonverbal mark sufficient carry task need use word enhance accuracy handmarking participant use conventional proof editing mark eg caret analyze characteristic edit operation separately room report result show Table 1 participant spend average 151 sec task spend 33 sec reading instruction 51 sec pausing think 67 sec actually execute task spend somewhat time text task 169 sec picture task 134 sec Fl10704p05 total time seven different editing operation differ significantly F660526p001 term component total time Read time differ significantly F6602627p001 Pause time differ p10 Execute time differ significantly F660902p001 InsertMove operation Delete operation carry significantly fast slow operation duncan range test p05 judge interpret 86 handmarking correctly ie accordance instruction ask participant Group 100 InsertMove 96 Delete 93 handmarking hardly misinterpret Copy 80 Insert Space 80 handmarking misinterpreted case select 56 Replace 56 handmarking misinterpret half case Discussion People way handmarking Wolf 1986 addition reflect learn habit particular choice affect layout detail material room marking spatial relation relevant part material mark single page Arrows frequently material modify spatially separate ie locate greatly separate place file arrow time edit operation handmark e fast 20 35 second operation find texteditor Allen Scerbo 1983 Gould Alfaro 1984 Gould Lewis Barnes 1985 comparison risky particular revision different study direct comparison material suggest handmarking potential qe fast depend quality system implementation Gould Salaun 1986 Conclusions Circles popular scope mark arrow popular operator target mark Handmarkings potential fast traditional texteditor actual value course depend user interface implement Experiment 2 Editing Computer Tablet experiment study participant exist state art computer tablet stylus edit task edit paper pencil handmarking experiment 1 case modification actually computer effect stylus tablet paper pencil handmarking produce visible marking screen case picture text actually modify computer importance experiment result clarify implementation detail use horizontal tablet stylus vertical display affect potential value handmarking Method participant serve Experiment 1 month early nineteen 23 task experiment 1 state art tablet stylus display system vertically orient CRT display participant table display participant horizontal tablet connect computer task store computer originally create text picture task active work surface area tablet size screen 7 x 412 connected tablet electronic stylus task display screen participant move stylus tablet correspond mark show display paper ie stylus contain ink participant receive different random order 19 task Results participant require 198 sec task tablet stylus compare 159 sec task paper pencil handmarkings 8 participant participate experiment fast handmarking tablet stylus Fl7922p05 read time 31 sec Pause time handmarking Fl18157p10 execution time long handmarking 120 vs 72 sec Fl18504p05 participant speculate spatial displacement tablet display great ease write pencil paper great familiarity pencil paper compare tablet stylus seven editing operation show Table 1 fast paper pencil stylus tablet speed advantage pencil handmarking paper text task 217 17240 sec picture task 176 14531 sec discussion weakness experiment computer carry execute modification participant computer available experiment series Gould Salaun 1986 show 198 sec require use tablet stylus time require use state art computer system mouse actually carry modification participant 211 sec Conclusion implementation detail reduce potential advantage handmarking reduce difference Experiments 1 2 tablet stylus technology probably improve General Conclusions Circles frequently scope mark arrow frequently operator target indicator Handmarkings potential efficient text editing achieve today ultimate value depend quality implementation paper pencil result obtain serve target goal designer acknowledgement thank Clayton Lewis early conversation work Brian Haupt John Checco assist implement experiment Angie Fusca assistance datum analyse manuscript preparation publication Note summary portion long paper intend preempt publication long report consider prior publication
6,1989,ABSTRACT Rapid prototype experimental technique play increasingly important role software development common issue concern adoption identify place system life cycle appropriate select tool use paper present model different problem type suggest fit find nature problem hand feature associate available technique Emphasis place fact commercial tool suitable certain problem type area development highlight implication concern human computer interaction discuss KEYWO RDS Experimental technique Information system development rapid prototype Requirements analysis introduction stage development computer base information system developer face form unpredictable change instance innovative application formal statement objective requirement impossible evolve work progress necessitate strategy encourage experimentation prototype experimental technique emerge approach deal condition paper describe differentinformation systemsproblem type suggest system development cycle experimental technique effective technique briefly reviewedand place context different problem condition paper emphasize excellentprogress software engineering support experimentalprototyping stress need technique support tool assist analysis specification ill definedproblem uted direct commercial advantage acm copyright notice title publication date appear notice give copying permission Association Computing Machinery area furtherdevelopment anticipate consider integration elicitation tool computer aid development environment b development problem formulation assessment support c development High Level Languages paper highlight implication concern human computerinteraction RAPID prototype DIFFERENT PROBLEM TYPES problem type set technical social issue form distinct problem situation computer base solution require Lehman provide classification computer program identify different problem situation classification extend place context sociotechnical system Land call SPEU Specification Practice Evolution Uncertainty S type specification situation find exist complete authoritative view environment situation emphasize transformation process success solution evaluate extent satisfy specification p type practice situation satisfaction specification p type problem obtain complete abstraction environment change condition developer necessarily undertake iterative process reformulation practice emphasis place verifying specification evaluate efficiency solution e type evolution situation characterize need predict effect system environment prediction imperfect design function evolve developer need apply technique simulate operation object system need apply tool enable model accommodatechangerapidly finally u type uncertainty situation characterizedby absence model application presence factor inhibit reliable abstraction environment developer apply tool technique allow exploration object system order resolve uncertainty Emphasis place elieitation specification produce clear view environment determine common feature taxonomy model communication human computer interaction adopt prototype imply intercommunication entity end user system specialist operational simulate computer base experimental model application decision prototype depend problem characteristic involve consider follow point development exercise appropriate party involve b particular tool technique available give problem context use RAPID PROTOTYPING SYSTEMS LIFE cycle Rapid prototype normally regard method fact find place beginning system development cycle common motivation clarify system requirement provide quick feedback enhanced communication user specialist different prototype experimental technique effectively support divergent stage eg test choose design demonstrate new product implement new system figure 1 show problem type context system development life cycle straight line go table indicate stage rapid prototype experimental technique critical example s type condition fall entirely domain specialist problem define understood shape solution leave discretion specialist define select efficient mean deal problem success solution evaluate near implementation stage specialist long control experimental approach form pilot project applicable p type situation involve uncertainty affect domain specialist change condition incomplete specification force developer adopt iterative method modify design test quickly extent result exploratory process fit need application dictate success system second line figure 1 subdivide domain specialist user participation subdivision help indicate problem type suggest great need user involvement particularly pertinent e type u type problem user integral system model uncertain nature problem S Type P Type E type u type specification Speczit LOGICAL DESIGN VEtitr PHYSICAL design J Ji IMPLEMENTATIDN figure 1 system life cycle model problem type force specialist work jointly user define work model application problem type critical activity development process concentrate formulation experimental vehicle yield acceptable specification TECHNIQUES tools commercially available tool developedspecifically purpose rapid design prototype lead example experimental approach system development approach emphasize learn instead design utilize immediate feedback system construction process describe form prototype experirnental technique figure 2 depict life cycle applicable light different problem condition Gameplaying use artificial computer base working environment system user play actual simulated role gain insight determine course action exploratoryprototypingfocuse basic problem communication specialist end user objective use work model catalyst elicit idea promote cooperation involve party System simulation represent system sketch assess characteristic system existence simulation generate operational system approach suggest model interaction resolve problem communication scenario base design detailed form system simulation simulate event user experience system operation provide model input process output screen associate dialogue Experimentalprototyping test hypothesis system analyze Shortcuts take order produce working model rapidly efficiency completeness sacrifice testability modifmbility production prototype scale representation basic design idea employ material final system design Pilot system access constrain version fmal system limitation population serve load handle normally adopt pioneer project S Type P Tgpe e type u Type REQ analysis specification logical DESIGN PHYSICAL design implementation game play exploratory prototype system simulation scenario base design Experimental prototybe production prototype Pilot Studies Figure 2 Experimental technique system life cycle different problem type Land Somogyi argue main area concentration software engineering satisfying need S type problem situation scenario tool support prototype technique design specialist program generator utility debugger optimizer normally integrate form software programming environment tool suitable creation rapid production prototype commercial tool currently develop aim p type characteristic include database query facility fourth generation language widely accept industry promise productivity advantage significant impact end user compute limited applicability efficiency appropriate experimental prototype scenario base design circumstance user normally present system define functioning involvement restrict operation evaluation experimental system e type u type environment need suitable technique tool evident essence support need focus elicitation information need analysis conceptual design physical design code testing promise development computer Aided Software Engineering case case technology demonstrate potential conceptual modeling vehicle communication case tool significant impact prototype analysis ill define problem accommodate facility support end user interaction implication concerning HUMAN COMPUTER interaction SPEU classification see continuum span define problem condition involve considerable uncertainty involve problem represent figure 3 situation S type characteristic specialist user technology normally exhibit enormous tolerance unexpected behavior system main concern development efficient product soon operational prototyping context experiential exercise mean work model real life operation focus developmental exercise successive refinement assembly system component hand condition reflect u type extreme problem owner necessity user technology interest professional user substantial need assistance main concern analysis problem situation carry process focus experimentation search alternative explanation prototype condition primarily conceptual process formulation representation Criteria S Type o    Type Problem type User sartectllogT relation procedural focus Tools ugefocu saglt mode strture o Ill define Specialist o Eer Tolera1e Aistae lead Assemblage Experimentation Pafinement Searoh Prodtion mAlysis Experiential ConceptUal gure3 Different problem condition exhibit significantly different characteristic implication categorization follow prototype S type p type condition entirely different prototype e type u type problem Developers view recognize concerned prototype technique selection appropriate approach depend purpose skill level involve project b developer long concern design human computer interaction application selection use appropriate tool give condition c prototype regard merely experiential exercise appropriate environment problem owner able interact computer experimentally conceptualize model system assess alternative design articulate specification d need development tool technique support u type condition important element inclusion tutoring system intelligent assistant role cover aspect confront inexperienced computer user efficient use system deal problem hand minimum intervention specialist development prototype TECHNOLOGY interest experimental method continue certain technical development increase automation phase computer base system development include project management highlight potential area development help support need conceptual formulation highly pragmatic approach Requirements elicitatlon tool technique introspective technique need assist end user articulate requirement objective elicitation tool assist individual provide version account systematic fashion allow try alternative design base initial conceptualization requirement technique draw Personal Construct Psychology elicitation tool support personal decision make knowledge acquisition key idea inclusion end user operator elicitation tool Interaction program process consolidation learn output conceptual model problem Valusek investigate Concept Mapping technique provide specification builder tool ER diagram semantic net Concept mapping technique provide vehicle communication concept understand useful identify boundary problem space integration elicitation tool software engineering environment need provide sound basis participative system design Problem formulation assessment support information requirement analysis normally associate problem formulation documentation intend behavior system condition generally find e type u type problem requirement formulate discover Objectives constraint identify uncertainty air formal specification determine issue concerned necessary support set early project formal direction control mechanism account description diagnosis wide organizational need suggest use technique tool assist organization documentation direction meeting group technique base game playing prove useful function pre requirement stage explicitly identify role prototype important player direction exercise technique concerned problem formulation assessment Future Analysis assessment change occur expect life system Objectives Analysis procedure assist end user articulate objective abstract level current research use technology group decision make particularly relevant fundamental idea approach emphasis cooperative work participant formulate analyze alternative elaborate available information technology involve use computer kind audiovisual communication collaboration tool Normally group facilitator advise use technology coordinate flow proceeding prototyplng narrow domain High Level Languages design provide degree abstraction conform closely level conceptualization formulation user language normally sacrifice flexibility generality simplicity ease use apply certain application area instance SBAL Small Business Accounting Language provide view account share specialist user order explore variety solution determine build flexibility system high level language prolog formal specification language base specific domain analysis prolog useful context underlie semantic provide high degree abstraction Progress knowledge engineering technique probably result development domain specific application expert system prototype conclusion classification problem condition confront Information Systems developer describe view suggest nature problem vary role user specialist technology different tool technique need problem condition particularly technology assist end user computer interaction support work early stage project paper suggest area development Elicitation tool technique Problem formulation assessment support High Level Languages prototype approach experimental technique discuss attempt system life cycle appropriate implication different situational condition developer determine point development experimental exercise prove effective b assess purpose skill level user select appropriate technique c aware change role paper stress regardless experimental system consider learn vehicle provide precise idea objective target originate development acknowledgement author wish thank George Schiavone useful comment early version paper
7,1986,abstract effect general global documentation detailed step step documentation combine global detailed documentation examine high medium low experienced student 198 student study wordprocesse program complete problem hour session result univariate multivariate analysis indicate general time measure read documentation complete problem student user reaaction documentation program computer system affect type documentation level experience factor introduction common complaint maintenance programmer user computer software documentation highly unsatisfactory unfortunately work recently devote specifically developnent guideline software documentation Boelm Davis fregly 1985 Isa Neal Evey McVey 1982 Norcio 1982 Sheppard Kruesi Curtis 1981 research attenpt apply principle information structure develop application developuent software documentation principle draw work mental model Brooks 1982 Norman 1982 work structure programming Sheppard Curtis Milliman Love 1979 Norman 1982 theorize mental model associate schema understand computer system act appropriately context system intuitively plausible structured documentation help provide necessary structure accurate mental model computer system direct datum measure mental model show inpact computer usage lack Specifically Brooks 1982 theorize progranmer understand computer program topdown process hypothesis generation revision begin global hypothesis end detailed hypothesis program accord Brooks global hypothesis concern global structure program term input output major data structure process sequence global hypothesis successively refine detailed subsidiary hypothesis level detail hypothesis close program text direct conparison Brooks theory programmer start global view program refine detailed view Documentation provide information global detailed level understand program effective aid programmer recent empirical research support notion Isa Neal Evey McVey 1982 find visually structure form documentation command syntax result few required attempt formulate command few failure standard IBM documentation format true programmer nonprogrammer suggest study fundamental process facilitate structured documentation similar programmer nonprogrammer Norcio 1982 find indented documentation clarify control structure program arrange explain function major program segment superior form documentation Computer science student supply correct statement gap program give type structure documentation give structured form documentation Similarly Sheppard Kruesi Curtis 1981 find experienced programmer significantly fast trace forward backward find information program visually emphasize structure control flow program plurality programmer preferred arrangement program element structure arrangement Boehm Davis Fregly 1985 study professional programmer complex program involve concurrent process program high level complexity programmer modify program quickly give resource format enphasize global aspect concurrent process communication process compare PDL Program Design Language documentation emphasize low level detail program study structure consistently make difference understand computer program programmer level structure find appropriate different particular kind programming task apply principle multiple level structure documentation end user program clear level structure documentation require global level documentation emphasize function program second detailed level documentation emphasize detailed function program study design examine combination global documentation detailed documentation fact superior compare global documentation detailed documentation study design determine effect user experience level documentation require good performance specifically interested determine adequacy documentation difference highly experienced user experience user base expectation highly experienced user extent find way computer program inexperienced user need handholde information documentation Method Deaign type documentation construct describe function 1200 line pascal base word processing program student study type documentation page global overview program major element function element b detailed page step step guide command choice available program result occur coomand choice c combine multi level documentation consist global detailed documentation type documentation give user distinct level experience low experience medium experience high experience design 3 x 3 design cross type documentation level user experience Participants George Mason University student divide low medium high experience group report overall computer experience questionnaire question establish level experience general self report question cover form computer use 198 student 29 report experience 32 report slight experience remain 39 report moderate high level experience response question response divide sample distinct group response define experience level student low medium high experience level Materials primary material study consist word processing program documentation word processing program hierarchically organize consisted main menu subsidiary menu concern edit handle entire document file program fully functional menu drive word processor considerably simple common commercial word processor program design record student keypresse work assign problem time keypresse occur menu choice point documentation reflect basic hierarchical structure program different level type documentation develop    global detail global documentation consist overview major functional unit program diagram show interrelated detailed documentation consist step step review choice available point program keypresse require work program result possible keypress term screen display set choice option figure la show overall tree structure program present global documentation text relevant use insert function figure 1 b show detailed documentation function stimulus problem consist modifying print short 12 sentence file order minimize effect type facility necessary modification require 1 2 keypresse figure 2 sample problem procedure student arrived give short biographical questionnaire measure computer background demographic variable randomly assign documentation condition global detailed global detailed documentation editor menu list editing function allow append text insert text delete text workspace single nunber letter correspond choice return previous menu use Esc escape key upper left keyboard ask enter word type string letter press Return key left point arrow keyboard Figure la Infomation relevant insert function present global documentation Insert type INSERT ask number line want insert text type digit number line press return key ask indicate character like text insert Type character occur right place want insert text enter character press return key character occur line program highlight occurrence character give ask correct place type Y fo yes n type N program search occurrence character program find occurrence character end line automatically return editing menu program find occurrence character ask correct place answer Y yes highlight occurrence character material highlight temporarily disappar list choice screen enter text BACKSPACE ESC point able enter text insert keyboard error use backspace key retype material point end insertion press Esc key press Esc key program bring material point insertion add insert material automatically return editing menu figure lb information relevant insert function present detailed documentation figure 1 Portions global detailed documentation erase workspace Read document call letter disk workspace insert word begin second sentence document Append word end sentence document Save revise document disk letter print document margin og 3 blank line figure 2 Example problem student complete word processing program person direct read assign documentation time require read documentation record Subsequently problem present student use word processing program solve problem approximately half hour available complete problem student error instruct continue work problem correctly change notify experimenter time expire student solve problem experimenter continuously observe student oneway mirror control room record occurrence look global detailed documentation duration look documentation cover sheet student lift order refer documentation onset offset refer documentation record stopwatch problem solve experiment student give post session questionnaire measure reaction documentation program experiment general point procedure student uncooperative wish continue participation experimenter instruct end session student complete session represent datum Results data 198 student analyze multivariate analysis variance MANOVA set dependent variable independent variable type documentation global detail b level previous computer experience low medium high experience overall structure group variable analyze section    General Time measure    Post Session Questionnaire measure documentation measure b Program Experiment measure General Time Measures general time measure include time require student read documentation read solve wordprocesse problem Type Documentation multivariate analysis indicate type documentation significantly affect general time measure f approximation Wilks lambda 500 df 4 376 p 01 univariate analysis indicate significant effect type documentation mainly present change time require read documentation F 2189 12133 p 01 student global documentation require average 535 minute read student detailed documentation require 1392 minute student global detailed documentation require 1763 minute summary complex documentation require reading time Level experience multivariate test indicate level experience affect general time measure f approximation Wilks lambda 1337 df 4 376 p 01 Univariate analysis indicate level experience significantly affected time require read documentation time require solve problem word processor F 2m189 863 2312 p 01 time require read documentation highly experienced student require 1090 minute read documentation medium experience student require 1195 minute low experience student require 1453 minute experience seen enable user quickly absorb material documentation problem solve experiment high experience student require 2014 minute solve problem conpare 3109 minute medium experienced student 3572 minute low experienced student Post Session Questionnaire Docmentation Measures post session questionnaire variable measure reaction documentation include perceive learn documentation perceive frequency refer documentation perceive usefulness documentation perceive comprehensibility documentation perceive frequency recall information documentation overall evaluation documentation perceive organization documentation personal like dislike documentation perceive clarity documentation perceive ease recall information documentation perceive applicability documentation problem solve perceive structure documentation Type Documentation multivariate test effect type documentation measure reaction documentation indicate type documentation significantly affected variable F approximation Wilks lambda 164 df 24 224 p 01 Univariate F test indicate perceive learn usefulness conprehensibility organization clarity applicability structure docrnientation goodbad evaluation personal liking documentation significantly affect type documentation 2113 399 679 379 355 364 340 846 756 398 11 OS variable conmm pattern global documentation consider inferior detailed documentation combine global detailed documentation table 1 slight difference detailed documentation combine documentation favor detailed documentation usefulness organization combine documentation edge learn comprehensibility clarity applicability structure goodbad evaluation like documentation Level experience multivariate test indicate level experience signficantly alter reaction documentation F approximation Wilks lambda 206 df 24 224 p 01 univariate test indicate perceive learning frequency reference comprehensibility clarity memorability applicability structure overall goodbad evaluation like documentation significantly affect level experience student F 2113 532 1218 437 445 855 1027 319 310 357 p 05 mean present Table 2 indicate experience level increase student user feel write clear structure applicable problem well overall feel learn documentation understand well recalled information memory like documentation variable decrease experience increase perceive frequency refer documentation direction change consistent increase expertise understanding experience user bring situation intriguing aspect result level experience type documentation affect unique aspect reaction documentation specifically level experience increase ease frequency recall information documentation decrease frequency refer documentation type documentation affect variable conversely different type documentation affect variable experience perceive usefulness information perceive organization documentation distinct effect indicate sane qualitative difference effect type documentation level experience Post Session Questionnaire Program Experiment Measures Type Documentation type documentation affect reaction wordprocesse program experiment general reaction different type documentation discuss carry reaction program general set Level experience Level experience affect reaction program experiment general multivariate test effect significant f approximation Wilks lambda 204 df 32 170 p 01 Univariate F test indicate level experience affect likedislike program perceive ease program understand program frequency difficulty program likelihood purchasing program wordprocessor motivation experiment pleasantnessunpleasantness experimental set ease keyboard computer ease understand visual display monitor F 2100 437 894 1188 930 594 828 670 405 575 p 02 inspection mean effect Table 3 indicate experience facilitated ease program final understanding program ease keyboard ease accinidatuib visual display enable user few difficulty program addition high medium experience group rate situation equally positively compare low experience group medium experience group like program likely want buy program report motivated experiment experience uniformly increase response particular program particular word processing program study appear appeal strongly medium experienced user Discussion combined global detailed documentation seene facilitate learning understand positive evaluation documentation accomplish cost require nore initial reading time documentation global documentation clearly inadequate detailed level documentation add global level perceive understanding comprehension general program significantly increase Level experience affect learn documentation evaluation documentation general reaction program experiment time require read document solve problem surprisingly medium experience group react program positively term behavior increase experience allow user adapt easily computerized environment read documentation quickly solve problem quickly type documentation level experience common unique effect psychological behavioral aspect computer use factor interact significantly analyse study important conclusion study well documentation strongly influence person reaction documentation affect person reaction program computer environment psychological effect change documentation study localize specific documentation Reactions documentation program conputer environment depend level experience important application basic result diagnose particular problem use computer system amenable inprovement documentation system increase training user system type intervention choice intervention base demonstrate connection intervention particular problem computer system intervention apt fail second user react well documentation combine overall structure functional arrangement program detailed step step instruction use program base aspect result documentation carefully design include integrate section give functional overview program work component give detailed information key press obtain desire result section integrate person effectively overall program structure specific behavior perform finally lack interaction type documentation level experience implication performance enhance increase quality documentation experience level user effect improve documentation increase level experience user additive interactive suggest experienced people perform well experienced people well documentation well regardless experience well documentation facilitate basic psychological principle learn memory common person regardless programming experience case principle documentation design borrow research result human learning memory general translation result judiciously work human learning memory far simple stimulus typical computer program
8,1986,abstract great interest recently system use graphic aid programming debug understanding computer nrogram term Visual Programming    Rogram sualixation apply system renew interest example help alleviate complexity programming technique call Programming Example paper attempt provide mean term give precise definition use definition classify exist system taxonomy number common unsolved problem system list CR Categories Subject Descriptors D12 Software Engineering Automatic Programming D22 Software Engineering Tools Techniques Flowcharts D25 Software Engineering Testing Debugging Debugging Aids D32 Programming Languages Language Classifications 122 Artificial Intelligence Automatic Programming Program Synthesis 136 Computer Graphics Methodologies Techniques Languages Additional Key Words Phrases Visual Rogram    ming Program Visualization Programming Example inference permission copy feeall material grant provide copy distribute direct commercial advantagethe acm copyright notice title publication date appear notice give copying permission Association Computing Machinery 0 1986 ACM O 8979I    6860400    0059 0075 1 introduction distribution personal computer powerful personal workstation grow majority computer user know program buy computer package software able modify software small change order allow end user reconfigure modify system software provide option system complex address user problem Easy touse software direct Manipulation system Shneiderman 831 actually user programmer gap bad people able use software easy use internal program code complicate extra code handle user interface system move direction provide end user programming wellknown conventional programming language difficult learn use Gould 841 require skill people attempt programming task easy recent research direct graphic call Visual Programming Graphical Ro    gramme Visual Programming system successfully demonstrate nonprogrammer create fairly complex program little train halbert 841 motivation graphic tend high level description desire action deemphasize issue syntax provide high level abstraction programming task easy professional programmer especially true debug graphic present information program state current variable datum structure possible purelytextual display goal Program Visualization Ro gram Visualization system use graphic help teach computer programming Programming Example technology investigate programming easier especially nonprogrammer involve present computer example data program suppose process example development program Programming Example system Visual Programming technology link recently large number article system incorporate feature Grafton 851lraeder 851 unfortunately term imprecisely comprehensive taxonomy classifie system paper attempt fill gap literature important term define precise manner definition differentiate system finally number common unsolved problem system delineate system include paper category attempt comprehensive hope selection system list help reader understand intent cJassiation system 2 Definitions Programming mean computer programming probably understand important definition eliminate limited system paper program define set statement submit unit computer system direct behavior system Oxford 831 ability compute require system include ability handle conditional iteration implicitly interactive vs Batch programming language system Gneractive batch batch system large processing delay statement run compile interactive system allow statement execute enter characterization actually continuum dichotomy interactive language like lisp typically require group statement entire procedure specify execute Visual Programming Visual Programming VP refer system allow user specify program morel dimensional fashion conventional textual language consider dimensional compiler interpreter process long dimensional stream Visual Programming include conventional flow chart graphical programming language include system use conventional linear programming language define picture eliminate graphic editor like Sketchpad Sutherland 631 Program Visualization Program Visualization PV entirely different concept Visual Programming Visual Programming graphic program Program Visualization program specify conventional textual manner graphic illustrate aspect program runtime execution unfortunately past Program Visualization system incorrectly label Visual Programming Grafton 851 Program Visualization system divide axis illustrate code datum program dynamic static Dynamic refer system animation program run static system limited snapshot program certain point program create Visual Programming display debug clearly graphical manner consider Program Visualization term similar confusing ifor example Zloofs Query Example system section 42 Programming Example system widely literature feel appropriate continue use common term program bv Example term Programming Example PBE describe large variety system early system attempt create entire program set input output pair system require user work algorithm number example system try infer general program structure call fautomatic programming generally area Artificial Intelligence research recently number system require user specify program inference involve user work program specific example system execute user command normally remember later reuse Bill Buxton coin phrase Programming Examples accurately describe system halbert 1841characterize Programming example inferential Programming Example mean term Programming Example include inference system Programming Example system course code execute system test datum enter run distinction normal testing Programming Examples system require encourage specification example programming begin apply program develop example essentially require Programming Example system Programming Example system inference interactive 3 Advantages Graphics Examples Visual Programming Program Visualization Programming Example appealing idea number reason human visual system human visual information processing clearly optimize multidimensional datum Computer program present dimensional textual form utilize power brain dimensional display program flowchart indent block structure program long know helpful aid program understand smith 771 recently number Program Visualization system Myers bOBaecker 81llbrown 841 demonstrate 2 D pictorial display data structure draw band blackboard helpful clear visual style programming easy understand generate human Smith i771 discuss length psychological motivation visual display program datum know people well deal specific example abstract idea large teaching achieve present important example have student specific problem helps understand general principle Programming Example attempt extend idea programming ideal case programmer act like teacher give example computer computer like intelligent pupil intuit abstraction cover example CH186Proceedings programming example system require programmer specify abstraction allow work program example aid get program correct motivated observation people few error work problem example directly manipulate datum edit text move icon Macintosh Williams 841 compare perform operation abstract conventional programming programmer need try mind large complex state system point computation display screen call programming debugging mode Smith 771 addition PBE system allow user specify program actual user interface system presumably familiar Attardi 821 4 Taxonomy Programming Systems paper present taxonomy section discuss system support programming section 5 discuss system use graphic programming process finish Program Visualization system meaningful taxonomy create classify programming system category orthogonal criterion Visual Programming Programming Example interactive batch taxonomy original paper course single system feature fit category system hard classify paper attempt characterize system prominent feature figure 1 show division sample system discuss follow section 41 VP PBE Butch interactive conventional textual linear programming language familiar programmer Pascal Fortran Ada batch lisp APL interactive 42 VP PBE Butch early visual representation program flowchart Grail Ellis 691 compile program directly computerize flowchart content box ordinary machine language statement GAL Figure 2 similar use Nassi Shneiderman flowchart Nassi 731 compile Pascal Albiauri Romero 841 early effort AMBITG Christensen 681 ambitll Christensen 711 graphical language support symbolic manipulation programming picture program datum represent diagrammatically direct graph program operate pattern match fairly complicated algorithms garbage collection describe graphically local transformation graphs2 21 t interesting note AMBlTIG develop 1969 modem user interface technique include iconic representation gesture recognition dynamic menus screen selection menus selection icon point moded mode free style interaction etc Rower 691 Programming Example Batch Conventional Languages Pascal Fortran etc Interactive lisp APL etc Graphical Program Editor Sutherland 661 PIGS Pang 831 Query Example Zloof 77 811 FORMAL Pitt     Glinart 841 prograph wu 851 Pietrzykowski 83841 GAL State Transition UIMS Albizuri Romero 841 Jacob 851 Programming Example Batch Interactive IO pair Shaw 751 Tinker Lieberman 821 Bauer 781traces AutoProgrammer Biermann 76bl Pygmalion Smith 771 Graphical Thinglab Borning 861 SmallStar Halbert 81841 Rehearsal World Gould 841 Classification programming system visu    figure 1 al Programming Example interactive batch small number refer section group discuss Starred system inference non star PBE system use Ro    gramme Example Figure 2 Nassi Shneiderman flowchart program GAL Albizuri    Romero 841 think system call Query Example Programming Example system fact accord classification Query Example QBE Zloof 771 allow user specify query relational database dimensional table form classify Visual Programming system example QBE Zloof call variable call example user suppose name refer system fill field mean variable name conventional language idea qbe extend mail non database area office automation Office Example OBE Zloof 811 relate form base database language FORMAL Shu 851 explicitly represent hierarchical structure 43 VP PBE Interactive Probably Visual Programming system William Sutherlands represent program somewhat like hardware logic diagram system programming flowchart interactive PIGS Pang 831 use Nassi Shneiderman flowchart Pitt Glinert 841 use conventional flowchart Pitt differentiate use color picture icon text inside flowchart box figure 3 frame Pitt Glinert 841 show implementation factorial procedure original picture color prograph Pietrzykowski 831 interactive VP system PBE distinguish supportr ing functional datum flow language prograph attempt overcome problem type language graphical representation structure show figure 4 Pietrzykowski 1841 claim alleviate problem functional language conventional representation form linear script make unreadable prograph truly concurrent Visual Programming system 46 VP PBE Batch inference system attempt cover wide figure 4 procedure PROGRAPH Pietrzykowski 841 number system automatically generate user interface program User Interface Management Systems allow designer specify user interface graphical manner example state transition diagram editor Jacob 1851 Figure 5 UIMSs require designer specify program textual representation qualify Visual Programming cii186proceeding April 1986 Figure 5 State diagram description simple desk calculator Jacob 851 44 VP PBE Batch system attempt infer entire program example output produce particular input program Shaw 751 infer simple recursive lisp program single IO pair b c d d d C C B B system limit simple list processing program clear system generate program likely generate correct program Biermann 76al 45 VP PBE Znteractioe Tinker Lieberman 821 pictorial system VP user choose concrete example system execute lisp statement example code type Tinker use window menus graphic user interface VP system user present code system conventional linear textual manner class program generate IO pair require user choose datum structure algorithm run computation number example system attempt infer loop conditional produce short general program work example system Bauer decide value program constant variable visual user specify program execution graphical trace 47 VP PBE interactive interesting system fall final category AutoProgrammer Biermann 76bj similar Bauers system section 46 attempt inference Pygmalion Smith 771 seminal VP PBE system provide iconic analogical method programming concrete display image datum ch186proceeding April 1986 program call icon manipulate create program emphasis pictorially tell Thinglab Borning 79 811 design aliow user describe run complex simulation easily VP interface Thinglab describe Borning 861 user define new constraint object specify graphically figure 6 class object create combine exist object program example visually Thinglab Figure 6 creating constraint graphically bar graph size value register Thinglab Borning 861 SmallStar Halbert 81 841 use PBE allow end user program prototype version Star Smith 821 office workstation programming user simply go program mode perform operation remember leave program mode operation execute actual user interface system user know system use inference user differentiate constant variable explicitly add control structure loop conditional Halbert report Star user able create procedure perform office task system goal Rehearsal World allow teacher know program create computerized lesson easily Gould 841 interactive graphic heavily provide collaborative evolutionary exploratory environment programming quick easy fun metaphor present user theater screen stage predefine performer user direct create play figure 7 teacher develop program see point exactly student user play addition teacher additional performer wing YO student provide auxiliary function flow control visible teacher allow think concrete abstract conventional programming environment new performer need code create example possible Smalltalk code write static representation performer Smalltalk code edit know Figure 7 screen Rehearsal World Gould 841 show basic menu leave standard set performer 5 Taxonomy Program Visualization Systems system discuss section programming system code create conventional manner Graphics illustrate aspect program write Figure 8 show Program Visualization system classify attempt illustrate code datum program provide display static dynamic Code Data Static Flowcharts Haibt 591 Visual Compiler Baecker 861 PegaSys Moriconi 851 TX2 Display Files Baecker 681 Incense Myers 80831 Dynamic BALSA Brown 841 PV Prototype Brown 851 Systems Baecker 751 Sorting Sorting Baecker 811 BALSA Brown 841 Animation Kit London 851 PV Prototype Brown 851 Figure 8 Classification Program Visuahzation Systems illustrate code data dynamic static small number refer section group discuss 51 Static code visualization early example visualization undoubtably flowchart early 1959 program automatically create graphical flowchart Fortran assembly language program Haibt 591 modern static system Baecker 861 attempt add multiple font nice format graphic code easier read figure 9     ch186proceeding April 1986 char iIll Whk c geldI t 11 c w trilnnnmbr c 66 c 0 c 9 retUrn c sol c Gelr7anvmbcr y c gelchar D 66 c 3 s c sil c c gelchar 0 66 c 9 ri c figure 9 sample format program code Baecker 861 PegaSys Moriconi 851 picture formal documentation program draw user check system ensure syntactically meaningful extent agree program program enter conventional language Ada 52 dynamic code visualization system class animate code dynamically part code execute program run sort highlight Examples Brown 841 Brown 851 discuss section 54 53 static data visualization early system tx 2 computer produce static picture display file aid debug Baecker 681 Incense Myers 80 831 automatically generate static pictorial display data structure picture include curved line arrowhead pointer stack box array record user define display figure 10 goal make debug easy present datum structure programmer way draw hand paper figure 10 display produce automatically Incense 3 record contain pointer Myers 801 54 dynamic data visualization system class actually fall dynamic static computer system design create movie datum structure algorithm eg sort teach computer science Baecker 751lbaecker 811 system produce animation real time movie frame frame Balsa system Brown University Brown 841 design teach student programming produce illustration real time personal workstation PV Prototype Brown 851 design aid debug program understanding support dynamic display data easy construction user define display system similar goal writr Smalltalk feature smooth transition state London 851 6 Areas Future Research system attractive number reason successfully share number unsolved problem fruitful area future research 61 Visual Programming Difficulty large program large datum visual representation physically large text replace problem little fit screen problem alleviate extent scroll abstraction Lack functionality VP system work limited domain Inefficiency VP system run program slowly unstructured program VP system promote unstructured programming practice like GOTO hot provide abstraction mechanism procedure local variable etc necessary program reasonable size Static representation program hard understand flowchart AMBIT similar system program begin look like maze wire Rehearsal World similar system static representation simply normal linear code place comment interesting point virtually VP system provide place comment 62 Inferential Programming Example major problem system user provide guidance structure program new example radically change program programmer know example value variable constant conditional way directly convey information system choose correct example require great skill difficult system modify program exist generate procedure convolute unstructured Bauer 78 p 1311 user sure generate procedure correct read code check explicitly require advantage PBE lose user know program order check fact central idea inductive generalization programming directly oppose modern software engineering idea testing example guarantee program correct clearly generate program example problem 63 Programming Example Programming Example system attempt inference successful VP system share problem list section 61 additional problem system Halbert 841 include Lack static representation system user understandable static representation program Problem edit program lack static representation make edit difficult alternative run program begin long time specify change middle program example possible running begin state world set correctly allow user specify change save periodic snapshot system state alleviate problem great deal information save addition change invalidate step program come Problem data description difficult specify procedure operate constant user specify datum datum find system qualified type location etc explicit mechanism user tell system know user choose particular datum user specify datum item different place coincidence identical item place Problem control structure specify conditional example branch travel travel branch different example give system return correct state statement reevaluate additional problem specify program conditional loop place Lack functionality system provide Programming Example datum type small number operation patch provide escape conventional programming language PBE insufficient avoid destruction real datum undesirable consequence environment office action system external consequence undesirable system actually perform certain action program write 64 Program Visualization Data Visualization system follow problem difficult pick appropriate picture datum abstraction picture choose usually require great deal programming system produce picture datum usually large difficult fit screen related layout problem decide place differently shape dimensional picture arrow line connect dynamic datum visualization difficult specify display update Issues aesthetic time important produce useful animation code separate set problem work interesting display way progress like visual system problem size picture Ways find decide code display compress procedure fit screen code datum animate difficult user tell datum manipulate part code way find relationship variable display datum 7 Conclusion Visual Programming Programming Example Program Visualization exciting area active computer science research promise improve user interface programming environment number interesting system create area cross boundary paper attempt classify system present general problem hope clarify use term provide context future research acknowledgement helu suooort article like thank Bill Buxton Ron Baecker Bernita Mye University Toronto research describe paper partially fund National Science Engineering Research Council NSERC Canada
9,1985,abstract effect video display unit presentation rate reading performance investigate reading material present follow presentation rate 15 30 120 960 cps instant instant condition text appear simultaneously screen condition text appear character time start upper left corner screen leave right reading comprehension high 30 cps instant presentation condition Tot al t fo rm read ng task equivalent condition 15 cps rate require long time complete task term comprehension time perform task slow rate 15 cps contrary previous recommendation desirable novice computer user introduction consequence increase use computer need read information video display unit vdu need know effect different VDU presentation parameter performance variable read comprehension read speed Shneiderman 1982 remark novice accurate performance high satisfaction slow display rate 15 25 characterssecond Bevan 1981 p 240 conclusion actually draw Bevan restrictive Shneiderman report Bevan 1981 conclude optimal VDU text presentation rate probably slightly low 15 cps characterssecond danger present material slightly fast read speed lead particularly high error rate p 71 encourage designer drastic step degrad1n system performance attempt improve accu racy sit sf act novice use rs s desirable replicate Bevan result present study investigate effect VDU text presentation rate reading comprehension read speed make modification Bevans 1981 experimental design modification include important extension presentation rate 15 30 120 960 cps 150 300 1200 9600 baud condition display text VDU screen movement text screen condition close presentation text print page sequential presentation text second contrast Bevan experiment subject test presentation rate subject read text present rate Testing subject rate eliminate contrast presentation rate previously experiment make possible study practice effect straightforward fashion important determine difference find initial exposure text presentation rate hold experience rate Procedure Subjects subject study 90 volunteer undergraduate psychology student 68 female 22 male participate course credit 47 previous experience VDU screen 75 experience recreational user read test material Nelson Denny Reading Test Brown Bennett Hanna 1981 widely read test grade adult level comprehension subt recent form Nelson Denny test Forms E F administer subject individual experimental session form e randomly choose pretest al 1 subject present paper accord standard administration protocol Brown Bennett Hanna 1981 follow pret Form e part Form F administer subject Zenith Data Systems Model ZVM 121 VDU drive micro    APRIL 1985 computer VDU screen display 24 line text 80 mixed case character line line text fill fully possible break word line single space standard keyboard position VDU form comprehension subt contain passage 36 question passage form 630 word long accompany question remain seven passage form approximately half length accompany qJestions complete Form e pretest vdu test passage Form F omit length precluded presentation single VDU screen seven passage Form F fill approximately 75 screen seven passage form fuse VDU condition form pair seemingly equal difficulty control difference pair passage order presentation pair counterbalance subject aid 3 3 randomize latin square Kirk 1982 Performance comprehension question associate pair passage treat single score aid investigation learning effect VDU treatment seventh passage present begin VDU test half subject end test half comprehension question associate passage design 90 subject randomly assign level text presentation rate VDU condition rate read passage presentation 15 30 120 960 cps instant nominal rate actual time rate appearance character screen 15 30 133 860 cps instant level word read passage appear VDU screen simultaneously ln condition text begin appear upper left corner screen character time assign rate 15 cps rate half normal adult read speed 25 30 cps 30 cps rate normal adult read speed rate 120 960 cps far normal adult read speed exception pretest form e standard paper pencil test passage present VDU VDU passage question associate passage present print page available subject read passage subject arke answer page presentation passage VDU question print separate page problematic subject require shift attention JU screen page question tlie screen potential disadvantage ias offset el mi nation need subject learn mark change answer interactively 8ecause interaction computer rinimize read major task experiment difference performance unambiguously attribute difference reading comprehension Standard instruction comprehension subt Nelson Denny test wit instruction mark answer use VDU present subject print page prior presentation passage screen subject read information screen prior begin VDU base comprehension test instruction inform subject read passage display screen VDU passage remain screen subject ready display screen thought page normal text print paper subject instruct indicate finish read passage press specially label TIME key indicate readiness read passage press specially label key keyboard task require subject allow work subt completion VDU condition tell test like previous paper pencil version time third subject unable complete paper version time allow motivated speedily work subtest completion VDU administer subtest subject complete questionnaire measure computer experience anxiety questionnaire undergo development laboratory reliability anxiety scale questionnaire high alpha 92 total length experimental session approximately hour result mean reading comprehension read speed calculate comprehension subt Form e Nelson Denny Reading Test paper test give subject VDU treatment mean comprehension score 245 maximum possible score 36 680 mean reading rate 285 wordsminute assume charactersword mean reading rate equivalent approximately 24 cp significant difference pretest score different VDU presentation rate group Data collect subject read VDU screen analyze pretest comprehension speed score covariate analysis covariance technique take account individual ability subject measure pretest improve sensitivity datum analysis analysis covariance customary report adjust mean group study adjusted mean predict group mean pretest measure equal pretest difference APRIL 1985 0 0 0aw 9600 instant condition Figure 1 Comprehension percent correct 28 question presentation rate find group study obtain adjusted mean identical unadjusted mean report Figure 1 show percentage correct answer VDU comprehension test function text presentation rate difference significant f483 315 p 05 comprehension high subject 30 cps instant group pair comparison Newman Keuls procedure show comprehension score subject 30 cps group significantly high subject 15 960 cps group p 05 comprehension score subject instant group marginally high subject 15 960 cps group p 10 Mean working time time require read passage answer question present row Table 1 signficant difference time f483 1372 p 001 high value obtain 15 cps presentation rate significant difference find presentation rate group finding suggest 15 cps rate low reading speed subject subject group wait text appear VDU screen second row Table 1 mean time require presentation passage show note presentation time passage instant condition o minute pause text appear VDU screen equal presentation time 960 cps condition table 1 Time minute function text presentation rate Text presentation rate cps measure 15 30 120 total time 288 23 7 222 Display 115 51 12 time 960 instant 223 230 APRIL 1985 Iuw    90 0 0 80 w u 0w 60      second 9600 instant condition Figure 2 Comprehension percent correct 8 question second pair passage presentation rate row Table 1 display mean networking time work time presentation time significant difference mean f483 1023 p 001 subject read presentation rate 15 30 cps obtain shortest networking time indicate reading passage text present Scores standardized computer anxiety test administer questionnaire end experimental session examine significant difference presentation rate group difference anxiety level find group Figure 2 show mean comprehension score pair passage order present practice effect practice presentation rate interaction significant general relationship presentation rate comprehension find practice interval order determine comprehension performance improve time comparison comprehension score subject read seventh passage present begin VDU test score read seventh passage end test result show Figure 3 significant presentation rate placement interaction f478 357 p 05 indicate effect practice depend presentation rate significant interaction primarily reflect fact performance subject 120 cps group read seventh passage present begin VDU test relatively poor subject presentation rate condition true performance subject 120 cps group read seventh passage end VDU test unusually low performance 120 cps attribute warm effect indicate 120 cps presentation rate lead poor initial strategy later correct Discussion result present study clearly comprehension material vdu affect text presentation rate general comprehension well intermediate presentation rate 30 cps less APRIL 1985    begin test oa END TEST 0 0 0 1z     70 60 aw 9600 instant condition Figure 3 Comprehension percent correct 4 question seventh passage present begin end test presentation rate extent 120 cps low 15 cps high 960 cps rate Comprehension rate 30 cps 120 cps close obtain instant display condition word passage appear simultaneously presentation rate effect comprehension consistent passage Working time affect presentation rate 15 cps presentation rate subject read speed intriguing aspect result nonmonotonic relationship presentation rate reading comprehension review read VDUs Waern Rollengagen 1982 assume read easy like read print page text present page time quickly possible p 449 statement imply read performance increase presentation rate increase consistent evidence study eye movement normally occur read Rayner 1978 review eye movement evidence suggest time spend fixate word represent information processing time require perception comprehension base assumption theory read attempt predict eye fixation time basis reading model eg Carpenter 1980 Carrithers Bever 1984 basis model appear condition divert eye normal reading movement lead decrease reading comprehension effect minimize text appear fast rate contrast prediction Bevans 1981 datum presentation rate show generally increase error fast presentation speed nonmonotonicity occur 18 cps high error rate speed result Bevan conclude danger present material slightly fast read speed lead particularly high error rate p 76 Bevan basis statement measure reading rate include read time material time require answer question direct measure time spend reading obtain Bevan performance well 10 cp 30 cps Bevan study opposite effect obtain present study likely APRIL 1985 difference difference read ability report score Nelson Denny pretest comparable study Bevans suggestion presentation rate keep read rate inexperienced user support present study variable account effect presentation rate VDU comprehension plausible explanation result study presentation rate affect subject choice working strategy subject adopt work strategy base nature task work condition read task subject strive speed accuracy strategy example subject try read text appear wait passage complete addition scan text read question confirm answer refer text read question try find answer text read thoroughly hypothesis subject choice working strategy influence text presentation rate 150 960 cps condition lead selection suboptimal strategy strategy choice refer Waern Rollenhagen 1982 metacognition conscious decision start proceed end reading process conscious evaluation reading outcome p 455 work strategy hypothesis account discrepancy result present study result Bevans 1981 study 15 cps condition Bevan find well comprehension presentation rate high rate performance rate present study poor present study definite time pressure subject consider take standard reading comprehension test case Bevan study standard computer assist instruction task present study likely subject 15 cps group feel hold low presentation rate concern perceive time constraint take shortcut compensate lose time example choose continue passage confirm answer addition Bevans experimental situation interactive present situation user feel hurried high presentation rate appear computer wait response strategy selection hypothesis correct VDU text presentation rate task factor affect performance task factor interact presentation rate performance unknown possible different task eg word process opposed programming differentially influence presentation rate note Carpenter 1980 NThere single mode read Reading vary function read reading read reader goal important determinant reading process p 350 view complexity premature recommend slow presentation rate novices caution require generalizing result study mean result ignore study reading comprehension affect complex way presentation rate situation information read video display quickly comprehend act grow eg process monitor control person little use computer increasingly ask read information vdu decision basis information example concern quality proofread VDU screen Wright Lickorish 1983 journalism publishing work time constraint practice proofread directly fr001 screen common situation use appropriate presentation rate insure optimal comprehension decrease error rate increase usefulness system
10,1989,ABSTRACT describe functional requirement design reasoning lead user interface automate clinical neurophysiological monitoring system design provide versatile high performance system computer naive user access function typically require dedicated training system provide realtime datum acquisition signal processing graphical output specifically tailor diagnosis characterization case epilepsy development user interface base collaborative effort designer user work common functional model develop work metaphor system operation addition interactive screen design facilitate management multiple concurrent operation intuitive easy learn fashion introduction report describe design user interface realtime clinical intensive neurophysiological monitoring system system variety timecritical operation provide 24 hour day 7 day week availability datum acquisition signal processing interactive graphic operation epilepsy monitoring unit dedicated detection diagnosis treatment patient refractory epilepsy system base 32 bit multiuser unix workstation powerful graphic processing capability user interface design significant address critical issue encounter solution complex realtime operation support system problem amplify medical impact operational difficulty failure perform expect design focus particular application clinical medicine approach method find general relevance complex system critically available serve variety user APPLICATION SPECIFICS Epilepsy disorder brain characterize abnormal electrical discharge spike occur relatively large area brain discharge result aberrant synchronize neuronal activity seizure trigger variety clinical manifestation include loss consciousness involuntary shake limb language dysfunction loss bladder bowel control goal epilepsy monitoring system facilitate diagnosis lead plan treatment clinical datum form video tape combine simultaneous electrophysiological recording allow physician understand nature extent disease patient Candidate treatment include drug regimen type brain surgery seizure occur sporadically unpredictably system continually record detailed electrical activity Longterm monitoring epilepsy require placement large number electrode 16 256 outside inside skull acquisition multichannel microvolt potential Electroencephalogram EEG Electrooculogram EOG Electromyogram EMG signal processing detect abnormality graphic plot mapping detect activity typical preliminary monitoring session patient intractable seizure 1 2 week involve acquisition process 20 billion byte datum result dozen page graphical textual datum specific goal project provide 7 day week 24 hour day computer automate neurophysiological monitoring integrate routine operation clinical neurophysiology section System user include EEG technologist physician neurology pediatric resident researcher plus additional specialist system configure control EEG technical staff datum readily accessible realtime postprocesse form user particularly medical staff specifically intensive sequence view evaluate interactive mapping abnormal activity necessary development sound clinical diagnosis treatment plan practical system work concept readily familiar user integrate naturally activity concept include strip chart recorder measurement instrument EEG machine patient condition state simple computer idea find word processor operator familiar computer notion file file system program process job control sharedresource view longterm strength stability new system development team charter organization clinical neurophysiology section project conceive fund integral clinical mission committment ongoing support structure approach find invaluable success new computerized patient care management system document success experience largely fact usermachine interface design collaboration user community particular variety informal crucial procedure arrive key design decision include task analysis user profile study exist system joint definition specific interface interactive development final code MANMACHINE MODEL Interviews discussion potential user reveal system ought use simple metaphor describe operation status subsystem user readily grasp work choose model facilitate user guide design effort system developer need set concept explain design tradeoff describe operational detail finally design review user group long involve exist clinical work load permit hour week discuss issue early designer comment initial implementation glorify Strip Chart Recorder future functionality build foundation clarify designer develop simple precise block diagram illustrate concept figure 1 functional block representation loose connection actual implementation figure 2 Data Flow Conceptual Model Continuous Monitoring System Control Flow Strip Chart Recorder User Control Data Acquisition Hardcopy Glorified Strip Chart Recorder User Control Automatic Control Control Files Tables figure 1 364 lowlevel function concentrated realtime processing computer highlevel function reside large unix workstation advantage work functional representation discourage developer implementation dependent terminology group meeting user subject associate jargon cryptic detail analogy receive clinical community development group reason initially provide confidence complicated design task approach functional definition easy explain initial design implement certain block completely considerable work initially certain invisible feature control subsystem datum storage loop obvious feature graphic hardcopy develop addition functional block metaphor find provide basis detailed software architecture system complete modular system definition achieve replace simple block average 10 software module development job partition 100 welldefine functional block behavior explain context entire system exercise highlight gap system planning result valuable additional thought complete conceptual design MANAGING MULTIPLE OPERATIONS system support user operator designate system controller operator clinical EEG technologist responsible patient activity set control datum acquisition manage signal database oversee signal processing storage printout critical abnormality system control activity focus individual thing mind user additionally serve graphic view annotation demand printing function addition manage multiple task operator deal concurrency Data acquisition stop Spike detection run continually acquisition datum storage finite file purge long need time patient add admit delete discharge suspend resume patient Hardware Architecture Epilepsy Monitoring Unit TEXT TERMINAL TEXT TERMINAL GRAPHIC display GRAPHIC display ii system Disk r1 Dete Disk 8ontrol hannel 8nnel RealTime Data Acquisition Computer System Disk Data Disk EEGAm s Patient Room 1 AnalogD11tal Conversion Subsystem Signal Switch Patient Room 2 Patient Room 3 figure 2 Patient Room 4 seizure clinical episode datum annotate save print finally ongoing need screen detect abnormality save print important data segment manage periodic calibration system test approach manage multitasking plus provide consistent user interface decide divide control screen interactive region maintain consistent usage task time screen contain wide range information serve variety purpose particular operator able interact moment moment basis receive immediate feedback able overall status system understand context importance current action control overall system control system low level involve operation directory creation deletion process initiation termination file management interprocess ccmmunication contrd queue clinical staff deal term system control task define familiar term admit discharge patient turn room connect amplifier view saving record folder course develop metaphor seemingly simple issue resolve example room contain patient patient attribute room metaphor develop concurrent design underlie file process structure user developer intelligently discuss tradeoff limitation point example determined patient datum accessible patient discharge system design standpoint mean certain purge file restore create logical difficulty solution provide notion examination room file structure similar monitoring room realtime datum acquire condition place restriction file access designer create notion raw strip chart data distinct datum place patient folder patient admit examination room folder available view raw datum distinction lead solution logical design problem establish accept record important segment belong folder organize patient contrast raw datum organize room distinct directory structure plan manner acceptable user designer figure 3 DESIGN CONTROL SCREEN design control screen key decision outset screen textual graphical dialog orient pushbutton orient dynamic overlap window static presentation EEG Data Management    Epilepsy Monitoring Unit Physicians Review Folders folder patientb lecte Data Annotations EEG Technologlsts Screen Select Segments t patient admit Discharged 4 Moriirorlng Roomsana 1 Examination Room Old Packs discard     5full Patient Room 1 Patient room2 Patient Room3 figure 3 base combination user discussion performance consideration decide focus user interface single 24x80 text screen conserve graphic performance demand signal presentation companion graphic screen use alphanumeric control console facilitated decision interactive screen find user favorably dispose use dynamically screen label function key currently wordprocesse scheduling software monitoring system view extension clinical computing service borrow operational feature idiom order support range system function screen display information reflect system input control system output response addition immediate hot interactive dialog summary cold status information finally need scroll nonscrolling area dialog report scroll status command fit good fix location refresh need Based consideration eye movement intuitive presentation screen divide area arrange accord simple metaphor hot information near key screen label cold information expect status summary furthermore input information dialog place left output response field locate right lead screen layout show figure 4 normal usage natural eye movement leave right suppleman tary information require available consistent location screen layout solve problem decision locate particular information rational choice opinion screen region define designer user logically discuss good choice particular implementation addition modular screen design reflect code major software control structure routine facilitate efficient code practice judicious naming subroutine syntax interactive code readable extent self document positioning label programmable function key follow guideline ensure key expect location function behave consistently different operational mode additional guidline follow provide unambiguous use command report terminology eliminate use jargon coin terminology create confusion operator user adapt readily screen usage accustom find relevant information familiar location dialog area provide dynamic feel system operation sense sequence important operation work dialog area user develop rapport system confidence move complex operation observe report area user develop understand confidence underlie operation machine learn appreciate effect action scroll region log file system usage review Conceptya Design System Control Screen SYSTEM STATUS area TASK status area COLD SUMMARY dialog WINDOW scrolling report window scrolling INPUT COMMAND    1I    output response hot IMMEDIATE current PATIENT current function current status current COMMAND PROGRAMMABLE FUNCTION KEY LABELS Figure 4 fact facilitate user profiling performance study problem resolution Figure 5 summarize EEG review session record visually review selectively save folder dialog proceed companion graphic display EEG data present format identical familiar paper record staff accostome continuity old way manage patient information new method exploit automate computer control storage conclusion system currently realtime clinical intensive neurophysiological monitoring laboratory regular turnover patient manage cooperative team technologist nurse physician feasible train user realtime system use novice screen layout function key philosophy experience user simply guide new operator procedure task orient discussion prompt training phase se new user actually operate system live patient data watchful eye colleague realworld learn situaticns focus developer important functional capability limitation design problem possible improvement come light continually revision operational interface specify user term designer readily grasp need change ongoing discussion lead concept define implement control new function instance new function name design user software designer rapidly implement new program meet immediate acceptance
11,1985,Abstract User interface management system UIMSs provide user interface application system base abstract definition interface require approach provide high quality interface low construction cost paper consider design choice UIMSs critically affect quality user interface build UIMS cost construct interface choice examine term general model UIMS concern share control UIMS application provide interface level abstraction definition information exchange user application level abstraction definition sequence dialogue choice argue specific alternative present COUSIN UIMS provide graphical interface variety application base highly abstract interface definition COUSINSdesign correspond alternative argue case partially satisfie interface develop run COUSIN describe detail 1 introduction large recent work human computer interaction devoted tool support design implementation user interface class tool call user interface management system uimss base idea user interface portion application program separate portion implement functionality UIMSs provide facility allow user interface portion specify level considerably abstracted primitive operation need realize actual user interface provide automatically uimss basis abstract specification 1this researchwa sponsoredby DefenseAdvancedResearchProjects Agency DOD ARPAOrder 3597 monitor Air Force Avionics Laboratory Contract f33615 81 k 1539 view conclusion containedinthisdocumentarethoseof theauthorsandshouldnotbeinterprete representingthe officialpolicieseitherexpressedor impliedof Defense AdvancedResearchProjectsAgencyortheUSGovernment User Visible ApplIcatlon norrooe ace Interface Oeioitio Figure 1 Architecture UIMS architecture uims describe term block diagram show figure 1 UIMS provide complete user interface application user support communication channel user visible interface interface user actually interact application interface application use channel communication outside world UIMS bridge gap interface act intermediary user application interface specify jointly separately interface definition usually declarative nature external application block label runtime datum represent information UIMS maintain current state interaction particular user application advantage provide user interface throdgh UIMSs discuss length eg concern quality ease construction result user interface summarize main advantage effort interface construction unlike ordinary programming language interface definition language typically base abstraction interface behavior allow UIMS interface definition concise complex programming interface directly intelligent supportive interface corollary point effort save construction interface individual application pool construction UIMS incorporate high level interface service error correction automatic help etc easy human factor involvement interface design interface define externally application interface need specify application programmer handle person skilled human factor human factor specialist modify experiment tile interface independently application programmer consistency interface application low level detail interaction handle UIMS application oMultiple interface single application interface definition separate frcm application possible multiple user visible interface definition single application handle different type interface hardware noninteractive shell script use application different user skill level individual user preference advantage list apply UIMS concept general design space uims large design choice likely offer optimum realization benefit paper deal set design alternative UIMS control architecture level abstraction I0 content definition level abstraction I0 sequence definition subsequent section consider design dimension separately case argue favor specific choice set alternative illustrate argument reference exist uims particularly COUSINUIMS class UIMSs particularly ATN base UIMSs eg examine COUSIN UIMS detail classify accord space design alternative identify present interface implement COUSINfollows design choice argue case partially satisfy 2 UIMS control architecture major design decision UIMSs concern division control dialogue UIMS application follow Tanner Buxton identify control structu choice internal control UIMSs control reside application UIMS view subroutine package call appropriate place application perform necessary communication user external control UIMSs situation reverse application view set subroutine task UIMS interact user invoke appropriate application subroutine appropriate time mixed control UIMS allow control reside application UIMS external control case application view set subroutine call UIMS appropriate time mixed case application control dialogue request present datum user UIMS mixed control UlMS application coroutine independent process remainder section examine alternative mcre detail conclude alternative list ascending order desirability 21 internal control UIMS internal control approach UIMS architecture simplest widely irternal control UIMS essentially collection subroutine perform I0 task eg task vary complexity input single character drawing obtain selection menu string correspond atomic I0 action far application UIMS concerned definition user interface give application UIMS merely consist call appropriate subroutine embed suitable point code application primary disadvantage kind UIMS control architecture lack separation allow interface definition application interface definition embed code application possible interface designer construct modify interface change application make hard practice involve human factor expert application programmer development interface lack separation make hard multiple interface application use application interactive noninteractive context interface consistency variety application single application difficult achieve internal control uimss minimal consistency I0 action provide UIMS high level abstraction instance detail menu selection handle menu selection subroutine menu selection finally internal control architecture UIMS service local scope concern obtain particular piece input give particular piece output locality introduce unnecessary mode interface example suppose subroutine comprise internal control UIMS ask user yesno question subroutine probably return user answer yes application ask yesno question subroutine impossible application respond input user particular respond help request information request help user answer yesno question 22 external control external control architecture UIMS resolve problem note internal control paradigm importantly clearly separate interface definition application application control user visible interface directly model set subroutine cn invoke UIMS appropriate point interaction user allow user visible interface developedindependently application possibly human factor expert different application programmer make possible multiple user visible interface application suitably high level abstraction interface definition language lead interface uniformity application finally external control UIMS access global context interaction subject scope constraint mention internal control architecture common style external control UIMS report literature eg use augment transition network ATNsIO interface definition formalism approximation system operate follow Nodes network define interface correspond different state mode interface Arcs link node input event output event application action associate network interpret UIMS start designate initial node repeatedly traverse arc respond input event generate output event initiate application action appropriate resolve difficulty associate internal control architecture external control UIMSs problem fundamental problem external control model work properly application action truly atomic point view user visible interface application communicate user action bypass UIMS ruin UIMSs effectiveness mediator interaction direct communication external control UIMS moan possible exchange intormation user foresee catered interface definition give range problem arise file transfer application eg remote host incorrect password etc feedback application need provide eg print character block transfer complexity complete interfce definition great Imagine instance ATN network contain arc possible output possible user response output 23 mixed control mixed control architecture similar external control architecture application long view set standard subroutine set module addition return normal way call UIMS return intermediate result reflect error condition feedback request additional information initiate communication uims asynchronously eg announce arrival mail message communication event application interface channel result interaction user visible interface channel arrangement resolve main objection external control application action long need atomic problem internal external control architecture describe mixed control highly attractive option shall section adopt mixed control model place certain demand interface definition language UIMS 3 Level abstraction IO content definition second design alternative consider concern kind level abstraction provide UIMS interface definition language describe information communicate user application distinguish alternative surface level abstraction communication specify term event user visible interface event specification vary level abstraction range primitive underlie graphic IO package eg pick valuator string complex IO event eg menu selection bar graph string editing buffer application level abstraction communication specify term object information application need obtain output user interface definition level specify file description output selection list string obtain user specify IO event user visible interface necessary achieve exchange information follow example illustrate consequence alternative Suppose designer user interface file management application want display information set file scrollable table want user able switch forth short format file name display long format size creation date access right display representation file application record component size creation date access right etc file application start set instance record appropriate part content record translate graphical representation output user visible interface application level UIMS application simply pass record instance UIMS expect care detail display imply interface definition contain mapping application surface level representation file surface level UIMS application translation record instance graphical object request surface version display translation trivial especially high resolution display detail control application level UIMS shift work frown application UIMS importantly specify aspect user interface behavior externally application note mapping application level surface level contain interface definition instance mapping file record long short representation file mean long vs short format switching mentioned handle purely UIMS need involvement application advantage application level interface definition provide well framework integrate application compute environment order integrate application necessary interpret output translation application level surface level representation generally combine original datum format information eg title unit numerical quantity etc make hard application interpret datum addition application operate surface level generally expect receive input form keystroke mouse movement Integrating application require output application convert appropriate surface level notion eg mouse movement keystroke perform conversion difficult good 4 Level abstraction io sequence definition final design alternative wish consider relate degree kind abstraction interface definition language concern order IO event content event identify alternative explicit IO event order interface definition explicitly specify sequence IO event constitute valid dialogue user application interpretation user input correspond system response determine precede dialogue context implicit io event order interface definition specifie set IO event mention specific ordering order restriction implicit UIMS interpret definition ATN base UIMSs COUSIN UIMS representative approach ATN base UIMSs use explicit io sequence interface definition ATN base UIMS specify possible dialogue user application interface topology ATN network node network effectively define mode interface arc lead node specify acceptable input mode treatment context mode mode system Implicit IO event order offer main advantage explicit ordering concern specifiqation modeless interface second relate handle error exceptional condition Modeless interface reduce cognitive load offer user maximum flexibility action power modelessness demonstrate excellent commercially available interface eg implicit IO event order straightforward UIMS provide modeless style default eg allow user specify parameter command order explicit IO order modelessness program interface definition case ATN base system mean distorted network disproportionately iode correspond mode disproportionately arcs network hard construct maintain discuss section 22 kind exceptional condition arise actual execution application implicit control paradigm handle event user visible interface specify independently mainstream error free dialogue user application explicit io order event foresee dialogue path deal incorporate mainstream interface definition situation easily unmanageable exceptional event effect anticipate point dialogue attempt resolve problem explicitly order interface definition Jacob instance suggest extension ATN base UIMS certain arc assume default emanate node interface definition default arc handle exceptional condition nonmainstream input user modification see method incorporate limited degree implicit io event order scheme fundamentally base explicit order 5 Design Choices take COUSIN UIMS section turn consideration overall space design choice uimss specific UIMS COUSINsystem cooperative user INterface COUSIN provide advantage describe section 1 construction graphical interface variety application context powerful personal workstation locate COUSIN design space justestablishe section examine COUSIN detail specific ihterface implement term control structure COUSIN implement mixed control paradigm run independent process application provide interface service term interface abstraction COUSIN provide implicit IO event ordering require IO content specify level surface application level describe section 3 COUSINS interface definition language base highly abstract model communication user application model communication take place set value contain slot slot piece information user application need exchange simple print application slot parameter file print number copy etc complex application file manager describe section 6 slot command feedback addition parameter slot COUSIN application access modify slot time control architecture mixed interface definition COUSINSslotvalue base language suffice specify application user visible interface general UIMS model application interface message base interprocess communication channel allow application access update slot value user visible interface graphical form display bitmap display allow user slot value modify mouse keyboard Fields form correspond slot interface definition detail interface specify set slot attribute figure 6 section 6 attribute give slot describe thing type enforce COUSIN default slot value application find change slot value appearance behavior correspond field user visible form Implicit IO event order come naturally COUSINSmodel communication user moment modify field user visible form interface ask help use facility COUSIN provide COUSINS interface abstraction close spirit application surface level specification IO content set slot type specify information exchange user application IO event need exchange set slot type support COUSINdoes cover complete range application level object primitive type string integer selection set string support record structure example support find slotvalue abstraction COUSINSinterface definition language appropriate broad class application require coarse grain command interaction example implement include file management electronic mail process management file transfer COUSINS interface abstraction suitable application particular fulfill communication need application require fine grain interaction text editor draw package 6 example COUSIN interface section examine specific interface construct current implementation COUSIN example clarify nature COUSINSinterface definition language way COUSIN use mediate communication user application interface examine File Management System FMS FMS allow user browse file hierarchical file system delete copy rename individually group Figure 2 show user visible interface COUSINinterface FMS upper portion form concene browsing contain table file description field specify file display table display command button manipulate file area deal confirmation destructive file operation form display show unused file space File Spec Das Files syslworklp4lcappsl capple pas cchlPas cenv Pas chipa copypa cprocpa5 cranertypa ctestPas envpa junk pas neNchlllpas procpa5 testpa Figu 2 Form FMS show list file FMS let look specific task suppose want delete date pascal file specify list file display Files field typing pattern File Spec field case pas FMS respond figure 2 display Files field file current directory end pas Le Pascal file select file delete click mouse file fit field content field scroll lip scrollbar leave edge field keyboard command satisfy selection file actual deletion start press Delete button mouse press delete button highlight Files ask Confirmation field parameter command parameter field incorrect value eg file select Files incorrect field button highlight reverse video figure 3 incorrect fiejd correct command execute relevant field correct Delete button highlight heavy border indicate press second time execute command figure 3 press delete button select file point commit issue Delete ccmmand wish alter parameter field eg Files ask Confirmation unrelated field eg DisplayMode issue different command eg Rename suppose push Delete button show figure 4 FMS ask confirm operation placing question Confirmation Request field reply press yes reply button right hand form File Spec pas mD sp av Nwle Short Flies sysworkingcapp cappiepa cch Pas cenv Pas ch p cpr oc pa5 cranber r pa5 ctest Pa copypa5 figure 4 file select Delete button press confirmation request field form perform operation Sort field eample control order list file display field set Change Date Access Date Size field limited enumeration value type value field keyword completion spelling correction select tile value popup menu figure 5 figure 5 change sort field menu give moment request help example press help key mouse DisplayMode field cause help message brief explanation purpose DisplayMode field appear2 important note interaction COUSINtakes care form display field scroll field edit selection table entry popup menu help display involvement FMS task FMS perform update relevant slot eg Files Confirmation Request response change slot eg Delete File Spec Sort Display Mode portion COUSINinterface definition FMS form derive show figure 6 interface definition format contain header entry slot slot describe attributevalue formalism attribute correspond aspect slot need COUSIN construct applicatibn user visible interface figure 6 show slot attribute Files Sort slot FormName File SystemManager purpose u t l t y browse manage file Files ValueType String DefaultSource NoDefault MinNumber MaxNumber 1000 InteractionMode Table NumColumns 4 ChangeResponse Passive Purpose List file specify File Spec Sort ValueType String DefautValue InteractionMode CycleButton ChangeResponse Active EnumeratedValues Change Date Access Date Size Purpose Specifies sort order file table figure 6 Partiallnterface definitionforfms 2a sophisticated helpfacility exist COUSIN use representation state interaction interface descriptionsto semiautomatically generate comprehensivehelp ValueType MinNumber MaxNumber EndmeratedValues attribute define type value slot number value slot case enumeration possible value attribute constitute application level description slot description user visible interface center InteractienMode attribute define field corresponding slot display manipulated attribute define mapping application level representation datum surface level representation effect interaction mode define display format corresponding value define mean low level user input keystroke mouse movement basic interaction mode push button cycle button text table window Push button eg Delete Rename look like physical button home appliance push click mouse cycle button eg ask Confirmation display enumeration value value enumeration display mouse click field Text field eg Sort File Spec display value text buffer directly edit user Tables eg Files dimensional menus window provide application subarea form perform graphic operation support COUSIN discuss Section 5 COUSINinterface definition specifie application interface u3er visible interface essence FMSs interface COUSINis set value contain slot name interface definition precise method application interact slot determine slot ChangeResponse attribute active passive application asynchronously notify new value place active slot ask COUSIN value passive slot push button normally active application notify press Occasionally field designate active example File Spec field active FMS notify user change allow update Files slot correspond file mechanism
12,1987,Abstract Constructs theoretical psychology decompose representational processing resource cognition decomposition support cognitive task analysis user performance relate function resource functional relationship formalise embody expert system build approximate model describe cognitive activity associate execution dialogue task Attributes cognitive task model predict likely property user performance Cognitive Models Approxi    mation User system dialogue Expert system introduction important question underlie research human computer interaction understand model user understanding model apply process system development question touch wide range theoretical practical issue cognitive computer science unsurprising way elaborate question frame answer active research group practitioner spite diversity theme run literature concern approximation User perception cognition action clearly knowledge intensive complex Likewise system design intricate involve factor tradeoff render user consideration manageable compatible demand design approximation desirable analysis model user behaviour cf card Moran Newell 1983 second theme concern explicitness approximation transfer research design community element analysis principle base explicit little hope approximate model apply systematically continue value accurately capture behavioural consequence design decision theme model firm foundation empirical phenomena system use paper outline approach approximate user modelling heart idea theoretical concept principle cognitive psychology codify describe mental act ivity occur task execution Principles justify empirical research codification explicit expert system enable rule system performance prediction reasoning cognitive representation process conceptual content approach differ model explicit approximate calculation concern user action card et al 1983 simulation todo knowledge action rely Kieras Polson 1985 approach different consequence potential application expertise require construct description cognitive activity effectively build expert system offer prospect design aid require user extensive todo knowledge user psychology modelling process theoretical framework cognitive resource description cognitive activity require theoretical base specifie underlie resource human information processing util ise framework interact Cognitive Subsystems Barnard 1985 define modular architecture subsystem operate specific domain process figure 1 subsystem sensory acoustic Visual effector Limb Articulatory processing representational subsystem specialise process high order encoding linguistic morphonolexical visual form Object represent process mean implication Propositional Implicational Subsystems internal organisation involve kind resource subsystem include Image Record preserve nondecaye record representation input subsystem lay second type resource copy process type resource involve process actively recode information kind mental code prop ositional subsystem PROP    MPL pro cess take propositional representation translate surface structure representation linguistic form process course form key stage normal language production operation architecture constrain detailed property principle operation outline Iconic Recrd Figure 1 inforation 1987 Architecture human processing fro Barnard context laboratory psychology Barnard 1985 computer use Barnard 1987 objective create approximate exact model cognitive activity purpose function resource need capture molecular atomic level description give basic definition individual resource description organise concept overt behaviour call configuration resource read text VDU Figure 1 require sequence process translate sensation visual form vis    OBJ visual linguistic form obj    MPL linguistic form mean MPL    prop con sequential inferential processing prop     IMPLIC subset require process nonlinguistic icon require keystroking text control mouse configuration translation carry process cognitive performance constrain procedural knowledge require perform translation appropriate procedural knowledge process unable perform automatic recode representation require specific task task execution processing activity require recovery use declarative representation store image record individual record example represent command parameter require send electronic mail Records preserve subsystem cognition different form content characteristic record content constitute class constraint finally resource fulfill specific function general purpose resource central executive work memory entire system self control representation pass subsystem generate control overt behaviour individual resource act coordinate way concept dynamic control involve characterise passage represent ation subsystem simple learn task dynamic control straightforward complex novel task transaction subsystem image record require control coordinate behaviour fundamental assumption description cognitive activity systematically relate description overt behaviour complex function Fn class constraint Properties Behaviour Fn Process configuration Procedural Knowledge Record Contents Dynamic Control form basis cognitive task analysis theoretical decomposition cognitive resource relate performance systematic principle establish build description result model predictive property develop family Cognitive Task Models unify sequence behaviour involve number phase cognitive activity cf Norman 1986 correction material editing require read text pointing select delete command keystroke new text phase recruit different configuration processing resource phase require different interrelated description different configuration recruit support overt action novice engage creative composition use configuration control keystroke expert copy typist similarly novice description procedural knowledge record content different experienced user appropriate consider family interconnect model figure 2 idea extensible include alternative strategy cope task individual difference user population Variation descriptive model systematically expert Keystroking Phase expert Command Entry Phase INTERMEDIATE Keystroking Phase INTERMEDIATE Command Entry Phase NOVICE Keystroking Phase NOVICE Command Entry Phase NOVICE Reading Phase Description Configuration Description Procedural Knowledge Description Record Contents Description Dynamic Control Description probable User Behaviour     figure 2 model family cognitive task related vary attribute user behaviour building model tackle perform cognitive task analyse experimental evidence Barnard 1987 stable performance effect interpret term pattern cognitive activity give rise candidate principle define heuristic relate process configuration proce ural knowledge record content dynamic control knowledge basis embody principle develop expert system shell Xi Plus knowledge base design explore property particular heuristic descriptive model cognitive activity Proceduralisation dynamic control knowledge base focus construction cognitive task model datum learn command name text edit Grudin Barnard 1984 datum show semantically specific name delete learn relatively efficiently abbrevi ation name dlt word semantically unrelated function context parole incur performance cost Novel pseudoword ragole random consonant string fnm incur great performance cost cognitive task analysis suggest number heuristic help characterise form result process configuration embody appropriate proceduralised know ledge phase coordinate content single image record dynamic control involve relatively transaction subsystem cognition process embody appropriate proceduralised knowledge dynamic control involve extra information processing transaction subsystem additional access image record example require control output process embody appropriate procedural knowledge dynamic control involve great number transaction subsystem Figure 3 provide schematic representation evolution task model base heuristic system know configuration resource require control command entry include translation prop    MPL propositional representation function tobe perform eg deletion lexical realisation eg ragole turn translate effector code specify sequence character MPL     Eff Rules invoke series question design elicit information GI 1987 fKDEL build SAMPLE DATA fKDEL pseulwrd command r rnECK GURATION check procedural knowledge YESILETE clleck procedural comronent configuration entry configuration include POOP    MPL MPir    Eff Procedural Knowledge POOP    MPL Procs incomplete MPir Eff Procs incomplete MPL structural description available Record Contents facilitate MPL recovery possible check DYNAMIC CONTROL dynamic control extra information processing transaction reoori report Text user Learning Errors likely figure 3 schematic representation evolution task model pseudoword co and stage example ask analyst relationship name underlie operation know unambiguous set ambiguous 75 50 25 answer datum structure add task model establish PROP    MPL procedure exist likewise exact command string enter user normal vocabulary apply MPL     Eff process answer proceduralisation mark incomplete range additional rule question invoke establish attribute influence dynamic control record access eg presence absence linguistic structure canonical analysis Grudin Barnards specific vocabulary appropriate procedural knowledge exist PROP    MPL MPL    Eff recoding condition rule fire specify dynamic control involve relatively transaction subsystem set datum structure mark process incompletely proceduralise MPL    Eff abbreviation PROP    MPL semantically unrelated word condition different rule fire infer dynamic control involve extra information processing transaction pseudoword consonant string process PROP    MPL MPL    Eff mark incompletely proceduralise Figure 3 infer dynamic control involve extra transaction subsystem rule base answer question concern incomplete proce    uralisation set detailed data structure concern dynamic control example pseudoword structural description conform rule linguistic form MPL consonant string structural description assume facilitate retrieval relevant image record turn assist learn whilst similar cognitive task model build novice performance pseudoword consonant string attribute model intermediate usage diverge behavioural consequence particular condition specify reporting rule link condition task model textual description likely attribute user behaviour task model describe dynamic control involve transaction subsystem report describe relatively efficient learning performance generate additional transaction detect description dynamic control system report high level difficulty transac tion require great level difficulty specific condition detect eg concern access particular form memory record system advise analyst likelihood specific type error kind help likely require Record content dynamic control second knowledge base complementary outline focus heuristic concern use Record Contents procedural knowledge develop produce cognitive task model datum learn extend sequence command context electronic mailing task Barnard et al 1984 compare organisation strictly order sequence command version sequence organise group command command ful fill common function eg retrieval function mailing function carry alternative arrangement command organise sequence group command common referent carry retrieve addresssend address Sequence learn well organisation paradoxically particular class error frequent well organisation error involve confusion semantically relate command name eg displayshow cognitive task analysis suggest finding handle heuristic govern representation recovery item order information Propositional MPL image record assume user abstract represent structure sequence form common task record preserve image record Propositional subsystem execute task user need access record recover content semantic form encode propositional representation specify lexical form order impose PROP    MPL recovery recode great deal uncertainty ambiguity concern operation order additional transaction subsystem require sort involve inferential processing prop    IMPLIC explicit recovery surface structure represent ation preserve lexical identity order MPL record expert system implementation configuration set keystroking command assume proceduralised knowledge entry individual name equivalent form sequence key rule concern property common task record Initially rule fire request basic information number command group basis answer common task record describe hierarchical structure specify low level node represent individual operation superordinate node describe conceptual structure system seek elaborate description request information pragmatic constraint order group order operation group basis answer rule fire specify attribute order uncertainty group command order uncertainty high operation group potentially perform order group logically order retrieve processing mail obverse apply group command logical constraint group weak constraint order system know primacyrecency effect retrieval correct order transposition likely confine central pair operation consequence data structure set specifie low level order uncertainty group operation system request information hierarchical description common task record superordinate nod poor descriptor command operation subsume item retrieval likely problematic superordinate nod good descriptor tern retrieval facilitated rule base specify common class system function poor descriptor common reference concept task domain group command data structure task model specify minimal order ambiguity good descriptor retrieve operation separate rule react condition specify dynamic control coordinate propositional image record Relatively transaction require subsystem resolve item order uncertainty reporting rule respond condition eg sequence learn efficient output control semantic description propositional image record command name similar semantic tend confused evolution task model group operation illustrate figure 4 high level order uncertainty establish presence bad hierarchical descriptor circumstance output simply coordinate propositional image record additional transaction subsystem require include frequent reference MPL image record resolve command identity order word like Display semantically phonologically confusable Accordingly report rule output description great difficulty sequence learn lower likelihood confusion error semantically relate command name Conclusion enterprise knowledge engineering approach obviously infancy illustration give complex exercise menu dialogue style demonstrate rule basis construct approximate model cognitive activity process effectively replicate reason underlie explanation MODEL BUILDIOO SAMPLE DATA 11del 1w GROUPS COMMANDS cleck CONFIGURATION Configurations Entry Configuration include PROP    MPL MPir Eff ClECK PROCEDURAL KNCMLEDGE Procedural Knowledge PROP    MPL Proceduralised MP     Eff Proceduralised Record Contents CHECK COMMOO TASK record structure check order uncertainty LEVEL CHECK DESCRIPIOR level order uncertainty 24 second order uncertainty 0 total order uncertainty 24 second level descriptor bad cleck DYNAMIC CONTROL extra information processing transaction probable control MPL image record REPORT Report Text Users likely considerable difficulty learn remembering sequence commmand Figure 4 11le evolution task JOOdel t1iO group cxanand issue strict sequence particular experimental result achieve describe knowledge representation require execute task associate cognitive demand limited rule set generalise example rule concern order uncertainty sequence fire response structure incorporate original experiment important process approximation play analyst answer question rule base command name analyst judge measure extent operation ambiguity overall set constitute mean generalisation occur potential limitation Generalisation occur analyst describe novel command set term overall attribute identity obviously analyst fail agree report obtain vary question concern predictive validity await development general form approach permit knowledge basis refine extended cumulative manner enrich implicit approximation analyst require stage development involve combine knowledge basis explore complex interaction rule improve descriptive language express
13,1985,abstract paper propose explanation novice program buggy central explanation notion merge goalsplan multiple goal achieve single integrate plan argument base theory knowledge plan goal novice create program analysis actual buggy novice program 1 Introduction Motivation Goals Example time research group pour computer program create novice programmer motivation enterprise twofold 1 look al bug student provide window misconception 2 look bug provide important grist building detailed process model student come learn program Analyzing buggy program formidable task glance strike high degree variability novice program look 200 student program page code length attempt solve problem time program essentially student collaborate program develop method classify buggy program serve highlight commonality difference program document analysis procedure focus surface structure program focus deep structure knowledge programmer create program ie goal programming plan programmer attempt realize hiaher ride research group develop system PROUST use classification find non ayntartir bug m student program presently PROUST correctly identify 75 bug novice program class moderately complex introductory programming assignment Johnson Soloway 1983 paper describe particular class buggy program reveal analysis technique class program particularly interesting significant number novice programmer write program type appear buggier type example provide introduction clais program bug consider simplified problem specification1 program fragment figure 11 effective program problem require goal achieve code 1 gjnput     input marital status income 2 GGUARD     guard invalid data 3 gretry    invalid datum prompt user new input correct program fragment goal realize independently ginput GGUARD gretry achieve marital status input achieve income input buggy fragment goal merge variable input guard retried piece code correctly achieve goal merge manner require bit illustrate code fragment figure 11 boolean condition statement structure complicated manner Notice problem specification 1 programming assignment subproblem give student programming class student perrormance datum collect Problem Write program read person marital status m marry s single income Guard typo verify input datum valid person second chance enter datum Assume second time datum type n correctly figure 11 contrast fragment bug explicit instruction structure problem way programmer choose implement goal code analyze buggy program position follow observation Bignificant numberb btudentb write programB goalb merge code Btudenta write code goala merge write programa ezhibit merge related buga addition thoae non merge programb merged code ib buggier example figure 1o1 example follow analyze detail difficulty involve write code merge goal particular identify specific type bug result goal merge code organization paper follow describe datum observation section provide overview goal plan analysis technique provide example type bug occur merged code qualitative exposition follow quantitative exposition number program merge merge successful discuss close speculation source merge code discuss implication observation 2 Tax Problem assignment show figure 2e1 give group 200 college student enrol introductory pascal programming course2 assignment ask student write program calculate tax net salary particular income marital status assignd1ent student 2the example statistic present later ortiono thi paper draw actual program write student attmpte oolve problem operating oystem veral VAX 70 modify time studente run Pueal eompiltr version program archive oample oyntactically correct program 57 otudent select detailed analysis Tax Problem Figure 21 Tax Problem Assignment course ask use pascal procedure procedure marry tax formula single tax formula main body program manage get datum call appropriate subroutine display answer addition program main body contain loop multiple record information process interactively single run text assignment specification deal program general stress course particular student know read datum program guard typographical error user problem assignment show figure 2d1 identify main goal achieve GCALC GCALCULATION goal correspond intention compute tax net income single married couple base appropriate formula group line 01 0528 29 gloop goal correspond intention process multiple record line 05 0618 25 GVDE GVALID DATA entry goal correspond read data program make sure datum valid figure 22 simplified Goal Plan Tree GAP Tree Tax Problem Ir datum valid user give chance retype line 05 08 18 25 GDISPATCH goal correspond intention call appropriate tax formula subroutine appropriate time ie dispatch value marital status variable line 11 1627 28 goutput goal correspond intention write result calculation input value calculation base line 08 12 goal accomplish programming plan serve organize subgoal main goal term standard programming construct subgoal turn accomplish programming plan represent space possible correct solution Tax Problem Goal Plan Tree GAP tree problem Spohrer et al Figure 23 Solution Tax Problem 1984b figure 2r2 show portion gap tree Tax Problem toplevel goal simplify GAP tree Tax Problem plan represent alternative way achieve goal sample solution Figure 223 figure 2p4 sample program illustrate alternate plan toplevel goal solution figure 2e3 use upper plan show GAP tree solution figure 2e4 use low plan discussion difference plan present GCALC plan PNET ln PROCEDURE plan figure 23 line 03 21 differ PNET lN MAlN plan figure 24 line 03 1950 52 name suggest calculation net income appear program calculation identical marry single tax formula Flgure 24 Alternate Solution Tax Problem factor main body program output GLOOP plan PREAD CHAR plan figure 23 line 23 3462 72 differ PREAD DATA plan figure 24 line 21v32 57 68 variable control loop PREAD CHAR plan aeparate sentinel variable PREAD    DATA plan status variable take additional function GVDE plan PINPUT GUARD RETRY    plan figure 23 line 35 50 differ PINPUT EACHGUARD retry plan figure 24 line 34 42 order subgoal GINPUT GGUARD gretry achieve input variable status income combine PINPUT GUARD    retry plan subgoal achieve status variable achieve income variable PINPUT EACHGUARD retry plan status input income input finally guard retry handle GDISPATCH PIF plan figure 23 line 51 55 differ psequential plan figure 24 line 44 49 name suggest program construct achieve dispatch PIF plan take advantage fact possible value status variable construct PSEQUENTIAL plan condition guard explicit GOUTPUT PEACH plan figure 23 line 56 61 differ PALL plan figure 24 line 53 56 WRITELN statement output variable separately variable output single WRITELN statement full discussion gap tree problem Spohrer et al 1984a purpose understand toplevel goal structure sample solution Tax Problem show Figure 2o2 adequate 3 Merged Goals Characteristic Bugs section focus example merge occur solution Tax Problem contrast example compare sample solution show figure 2 3 section program goal merge particular note solution GVDE goal completely achieve GDISPATCH goal similarly GDISPATCH goal completely achieve GOUTPUT goal sequence plan achieve separate goal reflect unmerged goal gap tree vocabulary describe type hug occur student merge goal plan program 31 Merging Lead Goal DropOut Compare manner GLOOP goal achieve solution show figure 2e3 Figure 24 figure 2i4 separate sentinel variable control loop instead status variable perform function half novice program analyze merged plan PREAD DATA achieve GLOOP goal simultaneously achieve portion GVDE goal status variable figure 3m1 show plan merge loop status valid data entry great extent3 Note GVDEGGUARD goal status variable integrate GLOOP GGUARD goal unfortunately problem merged code Note body loop execute value status variable valid value s figure 3 1 Merging Status Guard Loop Guard m happen user make typo try enter status value occur loop exit hut program program robust recover status typo merge code gretry goal status variable lose term particular type bug occur code merge goal goal dropout gretry goal present unmerged case bJt lose merged case unmerged case GGUARD goal achieve context GVALID DATA entry goal answer question guard condition datum meet Tr11 recover11 611 achieve GREIRY merge case GGUARD goal achieve context GLOOP goal answer question guard condition datum meet exit loop effect issue error recovery miss inappropriate answer provide loop context way merging process lead misconception novice programmer bug novices program 32 Merging Lead Goal Fragmentation addition loop status guard merge dispatch quarter program 3 figure name goal place actual code help rocus attention merge code need refer subgoal gap tree specialize toplevel goal precede subgoal name ot goal GAP tree separate slash analyze attempt integrate GDISPATCH goal GVDEGGUARD goal status variable code result merge show figure 32 difference code unmerged code show figure 23 note status guard long come directly status input dispatch dispatch explicit condition value variable status s m addition dispatch error message integrate catch case value status invalid note code achieve GOUTPUT goal integrate dispatch necessitate order avoid bug show figure 33 figure 3v3 value status invalid error message print standard output print procedure calculate tax formula call result output invalid value tax net income unmerged case GDISPATCH achieve GCALC achieve merged case necessarily true instead error condition signal refer problem result merge goal fragmentation happen goutput goal disassociate GCALC goal take life ignore constraint sequence scope figure 3 3 Merging result Goal fragmentation bug 4 Analysis Merged Level Goals date research merging novice program largely descriptive nature try collect example merge goalsplan identify bug associate particular type merge effort helping develop vocabulary describe type merge focusse search misconception underlie merge relate bug section provide quantitative analysis datum specifically examine frequently merge occur frequently successfully accomplish datum figure 4 1 represent analysis syntactically correct version 57 student program attempt Tax Problem describe section 2 57 program 52 exhibit merge toplevel goals4    average toplevel goal merge program figure 4 1 number time goal merge unmerged example goal GDISPATCH merge goal 39 time possible 57 unmerged 15 time possible 575 Notice number time goal merge great number time goal unmerge 173 vs 91 student prefer solve problem merge goal second notice student write code merge goal incorrectly student write code unmerged goal 11 correct merge compare 45 correct unmerged figure 4 1 Statistics Merged Unmerged Goals result analysis suggestive indicate study merge context problem subject warrant 6 Concluding Remarks datum present section support observation student tend write code merge goal 4 Significant p 001 sign test 5there 3 program dispatch goal miss eg student call procedure Cor datum record turn imply merge programming plan realize goal tend write buggy code followup question result wh11 novice merge goal consider follow suggestion real world strategy goalplan merge undoubtably useful thing merge lead resource conservation example consider separate trip store item shopping list bit odd novice use knowledge process non programming experience learning program Bonar Soloway 1983 Bonar 1984 expect principle like resource conservation programming unfortunately employ strategy goalplan merging programming require considerable skill see example section 3 merging code correctly require significant degree competency non program real world situation carry goalplan merging degree care interpretation novice simply import non programming processing strategy programming provide reasonable basis understanding degree novice generate code merge goal plan Merged goal plan program bug associate merge difficult identify priori approach analyze buggy program posit deep structure eg goal plan program base type analysis find class program structure code goal plan merge turn buggy Armed type evidence well position carry control study verbal protocol study analyze hundred buggy program exceedingly labor intensive feel productive approach help effort build comprehensive theory novice programming
14,1989,ABSTRACT Suchman 1987 recently draw attention situate nature human social action implication design interactive computer system particular highlight shortcoming globally manage human computer dialogue match user action idealise plan carry task paper outline scheme local management dialogue base finding conversation analysis scheme make available variety communicative resource user system include ability turn talk initiate carry repair work continue change topic conversation implementation scheme welfare right Advice System describe 1 introduction social dimension interaction people computer lead describe interaction dialogue involve communication information metaphor adopt clear quality current humancomputer communication inferior human human communication number respect Hayes Reddy 1983 problem lie method communication user computer input language highly restrict problem relate dynamic communication process typically human computer dialogue lead primarily user simple instruction response cycle system simple question answer cycle little opportunity kind bidirectional mixed initiative control characteristic natural conversation Nickerson 1981 research development natural language interface interactive system help alleviate problem impoverished input kind research need tackle problem impoverished dynamic research explore alternative way share control user computer increase interactivity interactive system Moran 1987 current paper report exercise kind start point exercise critique Suchman 1987 assumption underlie design interaction human computer communication examine role plan communicative behaviour suchman question view cognitive science plan serve prescription future action insight ethnomethodology suggest plan serve rational description past action follow second view propose communicative behaviour situate plan guide social circumstance take place internalised plan achieve goal observation important design interactive system assume user action highly plan Suchman illustrate point describe variety communicative problem arise operation intelligent help system photocopi match user action plan document reproduction control display procedural instruction critique carry broad implication general style control adopt human computer interaction essence argument global management dialogue favour local management global management involve work turn dialogue relation place current turn extend plan dialogue past future course disadvantage plan anticipate possible circumstance participant find current turn consequently fail provide opportunity communication desire point local management suitable control situation particular anticipate characterised provision opportunity interaction legitimate unique situation arise current turn problem beginning solution find ethnomethodological research literature branch ethnomethodology call conversation analysis examine detail local organisation human human conversation variety setting Heritage 1984 review number principle govern local sequencing talk people propose usefully control talk person computer rest paper describe application principle design advice give expert system provide user system variety communicative resource overcome problem situate action 2 ADVICE system interaction design exercise take place context designing demonstration Advice System welfare right advice member public Advice System view expert system attempt capture expertise train Advice Worker intend fulfil role perform Advice Worker system possess knowledge financial benefit Advice Workers able share knowledge user Buckland Cordingley Frohlich Gilbert Luff 1987 approach design Advice System construct question answer system ability answer range question user want ask support ask question open ended dialogue Robinson Luff Jirotka Hardey Gilbert Frohlich Cordingley Buckland 1988 considerable work go provide variety answer type rule base representation benefit legislation gilbert 1987 construction seminatural language input interface allow user wide range statement ask variety question time interaction Robinson et al 1988 Users essentially selection topic phrase dynamic menu display computer screen reason outline introduction decide reject global management approach dialogue control situation typically involve analysis dynamic advisory consultation abstract basic task structure act global plan interaction eg Coombs Alty 1980 instead control manage locally fire interaction rule operate information record interaction history rule apply locally turn turn basis determine system range possible user move operate ultimately select constrain availability terminal move comprise substantive meta statement answer question typical set rule show QA adjacency pair substantive question response response substantive answer response substantive question response meta question rule simply state legitimate response substantive question system user substantive answer relate question substantive question meta question question system ask original question possibility available user interface user ask original question system perform response necessitate question rule Advice System model kind local sequencing find spoken conversation follow section describe kind sequence attempt act resource situate action provide opportunity user system carry conversational work case describe work involve management initiative repair topic human computer conversation 3 resource situate ACTION 31 Turn take resource management initiative participant spontaneous spoken conversation tend talk time turn talk vary length content order distribution Sacks Schegloff Jefferson 1974 Transitions turn speaker occur sight gap talk overlap common perfectly latch Jefferson 1983 coordinated action imply anticipation possible completion point turn notion transition relevance place trp arise discrete turn constructional unit tcu advanced account way anticipation make speaker periodically vulnerable interruption sack et al 1974 method turn take say operate situation current speaker select speaker TCU expect response speaker self select beginning speak trp method turn take support Advice System talk organise turn compose tcu sentence length Self selection possible system user brief trp follow utterance TCU party practice system gain opportunity self select user select punctuation mark dynamic menu compose statement user gain opportunity self select system statement display word byword slow reading speed popup icon contain mouse drive cursor appear 2 second end system word user select icon disappear order gain access dynamic menus current speaker select speaker question system display question user receive turn talk user enter question system receive turn user system oblige provide answer turn statement take answer user mean kind statement compose dynamic menu point possible answer system question opportunity turn take arise scheme system user exchange retain initiative conversation example ask question initiative party whi Ie ask question receive initiative see clearly begin user interaction Advice System question answer system Advice System question user opening sequence design provide user opportunity ask question system try answer turn point initiative system useful system ask user series question order provide answer user question initiative pass user provide relevant information distinguish local initiative reside party attempt answer question insertion sequence user global initiative reside party attempt answer original question system complicated fact user temporarily local initiative system respond question question fact multiple level local initiative ultimately local global initiative converge system provide answer require system point initiative return user ask question close conversation preclosing sequence design section 33 involve system ask user meta question self selection hand device user system initiative party opportunity self selection user wait ask question system say vice versa ability turn talk statement allow user system switch local initiative immediately necessary ability exploit initiate statement repair section 32 32 sequence resource management repair trouble arise conversation subject repair participant Troubles lead Jefferson 1972 call sequence orient accomplish remedy trouble main sequence talk continue sequence serve bound occasion carry repair work usually involve clarification assertion listener fail hear understand different kind repair result fact initiate carry different combination speakerself listener Schegloff Jefferson Sacks 1977 furthermore preference self correction organisation repair encourage speaker continuously monitor listener understanding indication failure sense certain repair interaction user Advice System place implicitly main body example user ask right kind followup question system question answer find satisfactory explanation misunderstood concept emerge system followup response frohlich 1988 user system provide method initiate repair work take place explicitly sequence interaction method simply user system utter meta question available user trp label icon screen pass initiative speaker prior utterance oblige attempt repair turn Meta question kind occur frequently natural conversation call appropriately turn repair initiator Levinson 1983 second method initiate repair reply meta question ok question constitute pair check Ringle Bruce 1982 verbal device monitor listener level understand ok available user option possible end point statement dynamic menu yes response system check move appear popup menu system ok yes response return initiative originator continue conversation response return initiative originator repair substantive utterance method repair m1t1ation lead kind Initiated Self Repair responsibility repair work pass offended offend party valuable resource user si nee cause system rephrase expand repeat iast statement question depend type utterance involve request clarification actually encourage user selective placement system check move conversation furthermore repair initiation device useful system cause user amend contradictory invalid input user fail resolve problem repair turn system meta statement describe possible resolution ask user try 256 sequence usually end user second attempt outcome conversation continue system turn 33 Pre closing resource management topic time time body conversation close speaker take turn business pass opportunity introduce new topic talk turn call pre closing Schegloff Sacks 1973 Pre closing appear fulfil function maintain topical coherence conversation closing regard topic coherence problem introduce new topic matter course current talk usually relate prior closing problematic transition relevance usually follow turn participant simply stop speak reach mutual agreement fill silence follow final turn offer prolong talk occur pre closing occasion participant raise topic cohere prior topic agree close Advice System engage user pre closing answer substantive question preclose user give opportunity continue close current topic ask ask question benefit practice system simply ask user meta question effect user select yes popup menu user select yes system preselect item question topic menu leave user compose question appropriate kind user select current topic consider closed system begin second preclosing ask user want raise related topic system preselect item question topic menu user say yes time facilitate composition question relate benefit user entitle user pass opportunity offer second preclosing system initiate final preclosing user invite raise topic Users select item entire question topic menu compose question yes enter terminal exchange close interaction system simply say ok bye user respond Bye pre closing complicate slightly user ask question previously system refuse answer system limit nesting insertion sequence cause ask question hedover question offer user reselection second preclosing depend relatedness current topic indicate question topic tree Preclosing sequence primarily resource user continue close conversation design asymmetrically return initiative user supply substantive question system work answer pre closing repeat provision system answer major user question conversation infinitely extensible allowing user continue ask question satisfied total advice obtain Pre closing provide place system tie loose end conversation represent heldover question furthermore allow system perform kind cooperative question formulation procedure see alternative kind cooperative question answer advocate Cohen Perrault Allen 1982 Kaplan 1982 equating topic benefit Advice System possible encourage user find need know claim benefit going consider benefit likely entitle 4 conclusion show feasible model dynamic natural conversation humancomputer interaction local management dialogue management appear provide resource user system carry kind situate action need arise predefine place interaction plan suggest implement local management interaction rule provide system designer explicit notation represent dynamic interaction mean modify dynamic light experimentation user example stage Advice System design programme s analyse transcript interaction user system available resource action exploit result dialogue possible modify current interaction rule minimise problem misunderstand miscommunication appear arise possibility increase constraint possible user move follow certain system move dialogue take appearance institutional discourse spontaneous conversation endorse local management approach interaction design believe research need determine content interaction rule control different class humancomputer dialogue acknowledgement work carry DHSS Demonstrator project support UK Science Engineering Research Council Alvey Directorate Department Trade Industry project collaborator ICL Logica Imperial College London Universities Lancaster Surrey Liverpool view express author necessarily share collaborator
15,1987,ABSTRACT Office automation group people complex communication need help reach business goal schedule tracking review delegate effective individual group decision heavily dependent communication protocol social convention convention ingrain readily available conscious inspection design communication system problematic system designer hand knowledge convention protocol range environment system office system work tandem convention Wang Laboratories continue program research direct identify psychological social factor come play adoption use computer communication system implication factor design system Highlights year program research present cover implication voice mail electronic mail electronic calendar Voice mail Office system Introduction Adele Goldbergs plenary address 1986 CHI conference stress increase importance communication function human factor research Computer mediate communication pervasive form share filing system electronic mail computer conference Hiltz Turoff 1978 Palme 1984 Bannon 1985 significant attention give control information overload generate national international network filter critical information order advance research development effort eg Malone Grant Turbak 1986 Perlman 1985 business environment Malone 1985 stress organization create special demand computer system incorporate initial design Gould Bois 1984 stress importance organizational influence voice message system support product development effort Wang Laboratories carry series study social psychological factor influence office communication include 1 study telephone answer machine 2 study adoption use voice message system furniture manufacturer Ehrlich Akiba 1985 cigarette manufacturer oil company 3 study electronic calendar include survey user Wangs Alliance Calendar interview study meeting scheduling interview study specifically communication factor important team use calendar study reveal factor direct implication design office communication system factor include Insecurities communication system inhibit use initial expectation type information transmit type communication system critical difference system support need informal vs formal communication user attempt meet business goal differentiate role manager secretary professional play communication office system hierarchical pecking order influence gets communicate Conventions control break confidentiality paper present design implication study factor detailed summary study 1987 study summary answering machine Wangs voice message system Wang Digital Voice Exchange DVX include component allow like answer machine support development system Wang investigate socialpsycbological factor influence effective use standard answer machine letter distribute Wang employee ask participate study Wang product send new employee 1984 encounter answer machine home business time send people heavy user DVX DVX user long work facility reduce sample 18 letter request employee specific telephone extension participate study employee call response letter encounter answer machine experimenter monitor determine message leave content message message give additional information number time respondent available classified extend Table 1 Types message leave Message Type Users 20 Users 18 Number 3 15 2 11 Extended 2 10 6 33 Total 5 25 8 44 message experience positively influence percentage extend message employee receive letter interview view answer machine interview cover 1 general reaction answer machine 2 predisposition leave message 3 comparison answer machine receptionist secretary Table 2 Reactions experience Frustrated startle Pressured Users 20 Users 18 11 55 8 44 usually leave 10 50 13 72 message new employee feel frustrated startled pressured answer machine half group indicate usually leave message respondent consider receptionist helpful indicate speak secretary major advantage answer machine eg information status call party ability trouble shoot study standard answering machine reveal number trend effective use asynchronous communication increase experience socialpsychological factor list early come play shall later section Voice message study carry furniture manufacturer Ehrlich Akiba 1985 cigarette manufacturer oil company study involve questionnaire assess current telephone use communication need prior installation DVX post installation questionnaire cover change telephone use communication need question adoption use new message system indepth focus group interview expectation problem system use describe depth Ehrlich Akiba 1985 system quickly adopt heavily furniture manufacturer executive management team sale force key factor influence success visible level support system use apply system identify need require sophisticated use system feature strategic selection user population strategic education training finally strategic change management form continue refinement user base education appropriate protocol new use system fast effective trouble shooting case company noinstalle system feature allow answer machine site meet success interview reveal introduction system receive strategic planning focus interview site show socialpsychological factor influence system use describe Electronic Calendars series short study carry support development refinement Wangs electronic calendar product study demonstrate calendar complex social context suggest implication design study page questionnaire distribute 298 user Wangs AllianceTM calendar system network headquarters facility goal study determine class user calendar extent group calendar allow user enter timestampe appointment list additional information entry network compose primarily people Product Marketing organization relatively large percentage executive secretary sample electronic calendar executive manager personal secretary stand benefit communicative aspect system secretary manage calendar 98 executive manager professional sample personal secretary find likely use electronic calendar Table 3 Percentage calendar Users Job Classifications Title Responses User User Executive 9 7870 2270 MgrSupervisor 39 4 470 5 670 Professional 50 2670 74 70 Secretary 5 2 4 970 51 3 3 3 6 7 Total 153 3670 6470 table 4 calendar Use Managers Professionals CHI GI meeting involve people rare exception staff meeting occur regular basis need schedule large number meeting 30 50 percent occur people group Meetings schedule scheduling contact invitee check free time meeting schedule person telephone DVX electronic message advantage direct communication person telephone meeting propose schedule confirm step Table 6 Average Number People Access 1987 User User Responses Secretary 6570 35z 20 Secretary 3 170 6970 78 Total 3870 6270 98 secretary refer calendar sample reflect secretarys role manager appointment secretary field phone request manager s time Table 5 Average Number References calendar Job Title Average Number References Day Executive 96 ManagerSupervisor 60 Professional 95 Secretary 130 40 total 94 manager tend large number people need access calendar manager group calendar member enter activity second study calendar use support development automatic meeting scheduling feature future calendar product manager professional secretary interview aboutl typical characteristic meeting 2 meeting schedule 3 meeting reschedule absence electronic assistance Prototypical Meeting majority formally schedule meeting involve people Average Number Job Title People Access Executive 31 ManagerSupervisor 43 Professional 29 Secretary 15 30 meeting initiate people interview group announce opposed scheduled verification meeting announce usually case invitation list large meeting plan date future meeting requester expect people change priority attend meeting schedule conflict Notification announce meeting write memo reschedule Meetings respondent estimate 15 80 meeting schedule change frequent cause change schedule conflict result shift priority key meeting invitee cause include People run schedule day meeting meeting requester key invitee sick project status anticipate point delay project meeting change plan meeting occur close time actual meeting change notification occur quickly usually telephone page factor suggest high level need integration communication function calendar function fast system access advanced alerting function calendar study evaluate communication factor important team use calendar manager secretary Wang active user Alliance calendar DVX system interview concern 1 type information usually store calendar 2 responsible updating type information 3 rate change calendar 4 method accessingrearrange calendar telephone manager office Calendars Communication Devices interview confirm key benefit calendar communication support provide manager calendar communicate secretary manager secretarial support system communicate subordinate case manager tend leave calendar display screen allow member group locate easily communication function need quick system access group demonstrate manager need access follow type information calendar regular basis 1 block free time 2 appointment particular person schedule remember information date time vice versa 3 flight schedule 4 appointment particular period eg Monday morning return trip 5 Spellings name address telephone number enter include outdated entry 6 Context information store additional information eg thesecretary appointment information allow prioritize meeting conflict arise rate Change Calendar Entries managersecretary pair indicate access calendar 20 time day half confirmation half entry change manager traveling call ask schedule item 2 3 time day call secretary calendar manager office building secretary offer 20 item schedule day 30 day advance 50 week advance suggest manager likely lot advanced appointment forget particular detail SocialPsychological Factors Interview datum study provide insight constraint social convention effective system use Knowledge constraint provide direction product design Insecurities communication system inhibit use answer machine interview reveal wide range factor inhibit effective use include Feelings disorientation Lack feedback lack information status call party Lack support problem solve absence call party Lack time organize message Lack knowledge message return concern secretly listen critical design implication concern 1 provide capability personalize message context information need caller 2 provide access route support troubleshoot require business environment eg number colleague 3 providing capability caller review rerecord message hang additional control interestingly study use DVX system furniture manufacturer show concern list greatly diminish 1 document need communication support 2 positive experience Ehrlich Akiba 1985 detailed discussion initial expectation type information transmit type communication system see initial user answer machine tend leave number message message participant study praise relative helpfulness secretary complain tedious nature dictate message secretary high error rate transcribe message experience DVX user message detailed reach 6 minute length richness accuracy content mean overall transaction time cut greatly reduce sequential cycle telephone tag original DVX site study assume system useful collect number message offload local receptionist model system use access system give people floor international communication network lose business inability communicate content contrast user interview furniture manufacturer give access system national network expand cross time zone communication sale forecast field home office Fabric shortage message distribute entire sale force trucking logistic Cross state preliminary contract negotiation corporate reorganization forward message precede explanatory note middle manager key design implication assure message system support extend message distribution forwarding capability multiply impact timeliness content system support need informal vs formal communication business decision precede complex research negotiation lobbying effort involve informal communication mean available include chance meeting hallway elevator official communication business decision comprise small portion total volume communication lead decision interview calendar management reveal type support need kind communication interview calendar management reveal user constantly involve fast pace negotiation meeting constantly bump reschedule basis relative importance current status particular project critical information influencing scheduling process represent system mind user major design implication need 1 total integration calendar telephone function voice mail electronic mail 2 Alerts recruit intelligent assistance knowledgeable active secretary staff 3 Timely verification capability schedule meeting role manager secretary professional play communication office system inexperienced buyer message technology presume certain function carry people play traditional role realize need revision role new feature technology Reichwald 1984 executive user DVX furniture manufacturer fatal mistake give away responsibility voice messaging process site manager refuse use system run transcription time delay experience receptionist office worker assume electronic calendar simply nonportable version personal paper calendar reject understand new role play management support staff order ensure success secretary role critical scheduling rescheduling function meeting secretary person receive request meeting enter appointment electronic calendar entry require confirmation manager critical mind entry calendar subset item keep mind manager secretary imply conflict prevalent represent system mean resolve conflict quickly secretary person aware potential conflict tentatively reschedule involve call originally schedule person find consequence schedule change person angry critical contingency information immediately communicate manager avoid potential problem Travel Arrangements secretary interview responsible make travel arrangement Flight time flight number consistently enter calendar manager access calendar order obtain information calendar serve time structure communication device Formal Presentations manager receive request formal presentation month advance request travel usually contact secretary phone find free time secretary calendar verify free time schedule presentation Unscheduled Time critical manager ability schedule free time example manager indicate need achieve balance travel unstructured time office deal effectively management responsibility secretary help manager schedule free time keep mind overall level commitment weekly monthly basis feed information manager method accessingrearrange calendar telephone interview reveal manager maintain offsite contact calendar call secretary manager secretary feel need carry paper calendar duplicate electronic version effort simply duplication electronic calendar provide hez group essential information paper calendar mean coordinate activity offsite dual need inform group inform oneself suggest direct phone access calendar fact valuable fact manager interview DVX extensively communication manager secretary depend DVX communicate scheduling change subordinate voice mail play critical role calendar management design implication differentiate communication role support time structure commuhication varied include need tune alert update mechanism simultaneous access calendar message system integration voice message calendar function effective use distribution list communicate change hierarchical pecking order influence gets communicate executive vice president sale furniture manufacturer ask handle junk mail problem arise unfiltered access subordinate message system response problem clearly communicate software restriction right leave message close associate direct report request information time secretary DVX mailbox establish clear unwritten guideline appropriate length message prerogative manager forward message clearly govern social convention Managers furniture manufacturer delegate request work receive DVX subordinate forward message introduction tag indicate want subordinate handle request caution user communication system overly dogmatic software restriction access particular user place restriction create frustration potential business breakdown Common understand social convention strong deterrent system abuse give appropriate management Conventions control break confidentiality initial expectation subordinate broken voice electronic message complaint activity department unexpectedly send upper level manager source complaint Assumptions confidentiality voice electronic message recalibrate experience user start moderate content message confidentiality concern direct design implication need control access scheduling information pass implication user automatic scheduling program access time superior free time see free time free Lack control system broadcast fact manager unschedule time sufficient motivation total rejection system manager clear implication need route automate request schedule human expert system staff office prior release partial information eg unscheduled time degrade user control environment overly restrictive software access control especially absence mechanism human intervention approach caution business day today work involve deal exception standard protocol conclusion questionnaire interview study describe gather datum work environment social convention relate psychological factor influence effective system use important information guide future design concern potential radical role change office worker extent role change anticipate design feature incorporate sustain smooth organizational function second major conclusion dangerous try replace routine office protocol automate system exception handle complex communication function easily overlook especially absence testing system work environment finally preliminary reaction design feature communication system change radically user gain experience implication system work study take account evolutionary process system acceptance integration likely uncover last enhancement system design
16,1986,abstract paper investigate novice programming bug arise student misconception semantic particular language construct high frequency bug examine detail    clearly arise construct base misconception cut dry base empirical study 101 bug type programming problem argue bug misconception semantic language construct 1 Introduction Motivation Goals recently great deal interest understand bug program Anderson Jeffries 1985 Ronar Soloway 1985 Domingue 1985 Johnson Soloway 1983 Pea 1985 Sleeman Putnam Baxter Kuspa 1985 Spohrer Soloway Pope 1985 Interest program bug usually derive perspective engineer improve programmer productivity program reliability educator improve novice understanding programming novice ability rapidly learn generate correct maintainable program cognitive scientist improve understand acquistion performance complex problem solve skill determine misconception problem solve strategy cognitive constraint processing lead error paper primarily concerned educator perspective datum theory nonsyntactic programming bug provide educational leverage instructor way provide vocabulary discuss program bug give sense bug occur commonly vocabulary discuss program bug base syntactic construct language construct base perspective foster view bug arise student misconception language construct argue base empirical study Misconceptions language construct widespread typically believe 2 Data Collection description bug report paper base actual student generate program augment operating system VAX 750 student permission obtain 8 copy syntactically correct program submit compilation datum online protocol collect type datum student number introductory pascal programming course university datum report paper collect Spring 1984 semester Yale University introductory pascal programming course specifically design nonscience humanity orient student assignment    Critical Issues Cricket Chirp    Input Reels end Integers Arith output Electric Bill    Nested Single Boundary Guard reformatte    Loop Interval 8 Set Guard Read Characters average    Average Counters Running Accumulators Fibonacci    Nested Loops Saving Previous Value Loop Rainfall    Maximum Average Division zero Guard Bank    Command Selection Loop Tax    Dispatch Loop Procedures License Plate    Functions Random number Decoder    Input File Figure 21 programming assignment CS110 course student assign programming problem figure 2 l programming problem select study Electric Bill Problem problem require construct reformatte Problem problem require WHILED0 construct Tax Problem problem require procedure construct student syntactically correct program problem select detailed analysis select syntactically correct version primarily interested nonsyntactic error version contain bug later version ie novice debug program 183 program choose manner program exclude analysis student try solve problem attempt eg student syntactically correct program merely print message explain program intend addition datum analyze novice program problem later version Johnson et al 1983 Joni Soloway 1985 Spohrer et al 1985 complete analysis 33 identify Bugs term Goals plan8 program syntactically form program execute functional error bug8 prevent program behave appropriate manner produce correct output Runtime error message attempt division zero attempt access uninitialized variable array index bound indicate program functional error addition deviant program behavior return infinite loop produce wrong output test input indicate functional error understand identify bug novice program describe goal plan structure program develop theory knowledge programmer use generate interpret program key type knowledge find empirical support programming goal9 programming plane Soloway Ehrlich 1984 Soloway Ehrlich Ekwu Greenspan 1982 Bonar Soioway 1985 programming plan stereotypic sequence code accomplish programming goal short goal accomplish solve problem plan goal achieve example consider summary specification reformatte Problem Figure 32 toplevel goal achieve GVDE GVALID DATA entry goal inputte experiment datum case error give user second chance enter correct data GCALC GCALCULATION goal computing elapse time experiment second GOUTPUT Write reformatte datum GLOOP Process multiple record information goal achieve particular programming plan example consider sample solution Reformatting Problem show figure 3 1 PINPUT ALLGUARD allretry achieve GVDE line 1939 PSTANDARDIZE WRAPAROUND    difference achieve GCALC line 42 46 POUTPUT achieve GOUTPUT line 49 PSEPARATE LOOP CONTROL    character achieve GLOOP line 8 16 52 59 alternative plan exist achieve goal Spohrer et al 1985 certain plan characteristic bug Spohrer Soloway Pope 1985 use goal plan structure program ch186proceeding April 1986 1 input experiment data case typo user second chance 2 Calculate Elapsed Time experiment base start end time 3 output reformatte experiment datum elapse Time 4 Process multiple experiment figure 3 2 Summary Reformatting Problem Figure 3 1 Reformatting Problem solution identify bug position give goal plan vocabulary describe structure program identify bug novice program difference correct plane achieve o goal observe plan achieve goal example figure 3i3 show incorrect implementation PINPUT ALLGUARD allretry correct plan Left Figure 33 compare observe implementation novice note difference buggy plan miss certain variable contain correct plan problem buggy plan whitespace separate input value read instead intend character value line 3 buggy plan Problem Type variable read space character intend input Problem Type note line 3 correct plan extra variable Whitespace1 add capture whitespace character character problem exist line 18 gretry subgoal achieve line 6 21 Accuracy variable plan difference indicate arrow figure 33 difference result underlie misconception read character embed input datum identify follow bug bug serve locate bug occur toplevel GVDE goal PINPUT ALLGUARD allretry plan employ GTYPEGACCURACY subgoal successfully achieve malforme plan achieve GINPUTGRETRY subgoal 4 Analysis Data Figure 4f1 provide overview analysis syntatically correct program problem Figure 4 1 statistical overview problem program solve Reformatting Problem long average 73 line pascal type bug 46 bug type important distinction aware count bug type token distinction bug token instance bug program bug type group identical bug token total number bug token find novice program 284 8514059 total number bug type 101 284627 ch186proceeding April 1986 SAMPLE INPUT 23 10 45 30 10 57 02 note separator figure 3 s identify bug plan difference 41 Semantics Constructs Dominant Source Novice Bugs introductory textbook successive section cover new language construct instructor teach course describe successive language construct show use construct program emphasis language construct suspect bug arise novice fully understand samentic particular programming language construct certainly extensive evidence exist novice misconception construct instance Bayman Mayer 1083 show novice possess wide range misconception concern individual statement construct programming language learn misconception reflect difference novice mental model individual BASIC statement expert framework describe function statement Mayer 1879 study design test novice ability interpret single statement take session self instruction course evaluate notion bug arise misconception construct representative datum require datum collect natural set semester long introductory programming course analyze provide complete picture novice programmer type bug order evaluate commonsense notion novice programming bug misunderstand semantic particular language construct try identify underlie source bug effect try guess student thinking lead bug term explanation origin bug plausible account example bug describe section 3 Figure 33 arisen student think whitespace numeric input ignore whitespace character input ignore follow examine plausible account high frequency reformatte Problem bug bug clearly result misconception programming construct bug result misunderstanding programming construct bug result misunderstanding construct classified plausible account 101 bug type category ie yes maybe describe plausible account detail illustrate category present proportion bug type fall category order evaluate bug arise misconception programming language construct final point plausible account develop evaluate veracity CH186Proceedings April 1986 plausible account difficult activity draw work Bonar Soloway 1085 Sleeman et al 1985 Pea 1985 interview student attempt write program develop evaluate plausible account present section verbal report glean shed light student write program way nonetheless extreme care exercise verbal report develop evaluate plausible account example simply ask student heshe think create buggy program fact provide particularly useful datum oftentime confuse know confused verbal report accurate draw inconsiderable experience analyze tutoring student program Johnson et al 1983 Littman Pinto Soloway 1985 Spohrer et al 1985 develop evaluate plausible account section plausible account subject scientific inquiry mean pull thin air feel considerable ground psychological reality follow use plausible account explore question    bug result misconception language construct Boundary Problem Figure 42 frequent Reformatting Problem bug show condition guard invalid time correct value hour variable 12 input consider invalid fact legal value upper bind hour change 12 13 line 4 Figure 42 relational operator change constant left 12 code correct Figure 4 2 bug student generate bug probably understand semantic relational operator Figure 42 relational Operators correct upper hour boundary inappropriate bug arise inconsistency time unit hour range 1 12 minute second range 0 59 note low value range different 12 number allow value high value hour 60 number allow value 59 high value minute second number allow value range 12 60 important constant conversion rule relate quantity measure time unit quantity measure time unit problem novice want use constant upper bind guard different relational operator need hour minute second novice generate bug tend use seemingly relate constant ie 12 60 13 60 time try use relational operator term parallel alternatively novice confusing number value range maximum value range need convert unit need construct valid datum guard sum source bug problem novice experience reasoning group relate boundary condition novice want constant semantically relate time try exploit certain form parallelism code unlikely misunderstoodd relational operator    misuse relational operator upper hour boundary reason classify bug likely arise misunderstanding semantic language construct YES Type Inconsistency Problem Figure 4n3 show bug describe section 3 figure 33 apparently novice understand READLN read space ignore merely separator possibly novice think readln ignore whitespace parse input line assign value sequence variable READLN input sequence numeric value certainly case reason classify bug probably CH186Proceedings April 1986 INPUT 23 10 45 30 10 57 02 Buggy Code achieve GINPUT Corrected Code GINPUT note whitespace variable Figure 4 3 space separator nocharacter bug result misunderstanding semantic READLN language construct novice8 previously READLN construct successfully problem different type input datum predict bug occur know particular construct successfully imply correctly future problem key issue particular construct programming plan construct play role case whitespace bug figure 43 new plan involve read character value line numeric value previously character value read line numeric value read lime MAYBE negation Problem figure 4t4 show bug occur novice reformatte program boolean connective guard line 4 5 bug occur composition PSET membership exclusion plan Problem Type variable datum item question small set character value member set valid inputs instance valid value problem type figure 44 forAM bug b c datum guard intend determine input value outside valid set user second chance enter datum correctly bug indicate novice understand semantic piece evidence contradict conclusion novice usually boolean connective correctly pinterval exclusion plan require guard hour minute second data item reformatte Problem show figure 3 1 line 26 31 secondly novice PSET    membership INCLUSION plan guard datum item show novice choose PSET MEMBERSHIP    INCLUSION plan boolean connective correctly order explain think novice actually understand semantic introduce follow term good thing term boolean expression partially totally imply value datum item valid bad thing term boolean expression partially totally imply value datum item invalid perspective appear novice follow notion concern use term correspond good thing bad thing connect term boolean connective case pinterval    exclusion figure 3o1 line 26 31 Start Hour 12 bad thing case PSET membership INCLUSION Problem type good thing novice mistakenly reason Problem Type good thing simple negation ProblemType bad thing appropriate connective use case student problem misunderstanding use boolean connective thinking bad thing fact piece bad thing Problem Type 0 bad thing problem type equal valid equal b c instead surface appear misunderstand semantic construct fact result error classify bug maybe arise misunderstanding semantic language feel student fact understand semantic misconception Problem Type bad thing faulty reasoning effect negating term student understand semantic student understand semantic boolean connective connect term boolean expression assume base linguistic intuition understand intent boolean expression computer 42 Bugs previous section look 3 101 bug type section ask question 101 bug type figure 4 l 101284627 large sample well position evaluate hypothesis bug arise misunderstand semantic particular programming language construct Figure 4 5 show proportion bug category probably result misunderstand construct semantic maybe result misunderstand construct semantic yes probably result misunderstand construct semantic judge train month generate plausible account separate programming problem independently classify 101 bug category 90 agreement result judge produce conservative classification ie MAYBE YES decision present Figure 45 Figure 4 6 Proportion bug category useful statistic evaluate proportion datum sample divide category confidence interval Hays 1985 give estimate proportion individual population have certain characteristic qualify estimate indicate general magnitude sample error general large population sample small sample error close estimate proportion true proportion give sample size n estimate proportion estimate 99 confidence interval true proportion contain interval 99 time 100 conservative confidence interval look datum figure 45 way clearcut case ignore bug fall maybe category moment category non construct base plausible account 99 confidence interval proportion 52 range 39 65 yes category construct base plausible account 99 confidence interval proportion 09 range 03 20 clearcut case non construct base problem underlie far great proportion bug 2 1 show figure 4 6a Combine MAYBE yes category extremely unlikely research reveal bug maybe category actually misconception construct conservative position adopt evaluate hypothesis bug result misconception construct combine bug maybe category yes category 99 confidence interval proportion 43 combine MAYBE YES category range 36 63 Recall category confidence interval range 39 65 category slightly high range interval overlap 99 range figure 4 6b make favorable assumption hypothesis bug arise misconception construct hypothesis support Dividing MAYBE category yes category research require assign bug maybe category yes category certain provide reader graph result 99 confidence interval entire range possible outcome splitting maybe category figure 47 summarize result possible way divide maybe category yes category understand graph consider follow case lefthand x axis correspond maybes assign YE3 category 100 maybe YES 0 maybe situation illustrate Figure 4 6b b righthand x axis correspond maybes assign category 0 maybe yes 100 maybe intermediate point x axis indicate point extreme example analysis maybe bug 25 bug actually account non construct base plausible account 75 account construct base plausible account confidence band indicate non construct base plausible account certainly go useful lot explain bug construct base plausible account basis observe datum conclude reason believe construct base plausible account useful explain student bug non construct base plausible amount fact datum suggest opposite view standard programming folk wisdom    bug arise problem misunderstand semantic language construct MAYBES SPLIT Figure 4 7 dividing maybe YES 6 Concluding Remarks short datum support commonsense notion bug novice program support bug result novice misunderstand semantic particular programming language construct common non construct base problem novice Boundary Problem Novices difficulty decide appropriate boundary point consider bug negation Problem Novices mistakenly infer negation good thing bud thing consider bug addition problem evaluation plausible account 101 bug type identify common non construct base problem Interpretation Problem novice read programming assignment infer correct interpretation specification Composition Problem Novices detect negative interaction section code locally correct globally incorrect example code perform output correct wrong place program main implication finding educator simply make semantic construct clear address problem novice have
17,1986,abstract domainfdelphi retrieval component Apollos house integrate publishing system retrieve display documentation network workstation environment workstation access common database user system document user find information browse table content index searchfor document subject DELPHI incorporate graphical menu drive user interace display output multiple font line art introduction interactive user assistance form online help online documentation commonplace major computer system design online help system enhance productivity ease user anxiety speed learn new skill characteristic high quality online help follow constant availability    help available time Permissionto copy fee material grant provide copiesare madeor distribute direct commercial advantage acm copyright notice title publication date appear notice give copying permission Association Computing Machinery copy republish require feeandor specific permission 8 1986 acm o 89791 180 6w0400     0114 0075 consistent user interface    Access help system presentation help text system consistent rest operating system interface 0 completeness    detail cov    ere loose end 0 Context sensitivity    Help return depend user current context adaptability    assistance conform user need online help system typically provide command assistance Users request help type HEXP command question mark press request key command usually accompany request UNIX MAN command system MAN command require command help seek helpful user know guessesthe command Command assistance system usable impose hierarchical structure online document allow user browse hierarchy seek information Variations approach describe Kehler Barnes Price Apollo DOMAIN register trademark Apollo Computer Inc DOMAINDELPHIm DOMAINDialogue D3 M trademark Apollo Computer Inc UNIX trademark Bell Laboratories Inc CH186Proceedings April 1986 help system number shortcoming difficult user request help exit application lose context application provide help usually command assistance little help user debug program need check syntax system subroutine problem help text obliterate screen request issue dedicated multi windowe workstation solve problem long user interrupt task risk lose context help help readily obtain window Apollo DOMAIN workstation example user request help HELP command specially define function key response window open help file user peruse leisure Xerox Cedar system combine windowe hierarchical document browser Symbolics document examiner add feature context sensitive help lisp function command relate HELP current implementation insufficient Users ideally online access information available hardcopy manual attempt provide level documentation service require new approach publish Integrated Publishing past dissemination computer relate information concerned principal player principal mode writer vs reader hardcopy vs online respectively writer    b hardcopy manual reader writer     online help    reader reader model person writer single writer carry responsibility manual online file problem coordination body text burdensome impossible document generally incorportate hundred page information clearly unification necessary ideal system allow writer compose material populate single information base reader access format appropriate time UNIX MAN command provide portion capability create hardcopy manual online file quality accessibility online information poor multiple font graphic limited browse document tree etc 1information Base 1 DELPHI online text retrieval component integrate publishing system description occupy remainder paper complementary issue text generation storage present technical challenge great associated retrieval process solution issue discuss Conceptual Model Readers hundred year retrieve information read book question efficiency method familiarity undeniable DELPHI build familiarity operating library metaphor DELPHl comprise multiple library currently implement library number volume cover area interest system command operate system call volume divide chapter section subsection section subsection mark type overview referenceexample task strictly reference volume contain type information contain type information example overview follow reference text example search entire library set choose combination Iibrar    ie volume information type Lets return library metaphor reach manual shelf search option present randomly flip page turn index search specific keyword phrase gain direct access particular page alternatively scan table content option appropriate sure pre    CH186Proceedings April 1986 cise topic seek attempt discover relationship topic imply writer oganization manual DELPHI model access method keyword search browse keyword search find document database match specify word phrase browse scan volume hierarchical table content find information available build model notion relate document document match keyword relate way notion base Nelsons concept hypertext 183and relate idea navigation express ZOG system example search delete file return information delete directory command document describe removal object file system mark related document contain pointer document retrieve user hold personal reference list maintain login session add document list allow redisplaye user request search database worth note keep concept integrate publishing DELPHl provide interactive access book attempt apply artificial intelligence technique level question answer command prompt command completion similar task technique value user interface application scope current project figure 1 overall user interface Sample Session DELPHI run window present graphical menu orient interface figure 1 large area provide display document document display area line describe library context current document Control feature organize left document display area pick operation single mouse button function key Suppose need information move window screen want browse Picking BROWSE button initiate hierarchical browse volume DELPHI pop ch186proceeding April 1986 menu select volume choose call Display Manager Commands popup disappear second menu list chapter Display Manager volume figure 2 pick chapter call Managing Windows list section chapter figure 3 menu load dynamically database require 23 second appear choose section WA4 WINDOW cause document display figure 1 second way find information DELPHI search reference particular keyword string delphx control scope search SELECT volumes SELECT INFO TYPES button figure 1 specify boundary search initiate select button label FIND info type string move window response prompt DELPHI search database logical intersection document match word type topic string search window return section associate keyword window search move window return section associate keyword move window future release boolean modifier available narrowly define search figure 2 Browsing chapter figure 3 browse section keyword search return list document popup menu FIND INFO button figure section match search string present 4 point select document section keyword parser discard noise word CH186Proceedings April 1986 wm WINDOW view figure 1 document display scroll horizontally vertically read document hold personal reference list maintain login session user view previously save document pick REFERENCE LIST button pop list document reference list delete current document list UNSAVE DOCUMENT button figure 1 figure 4 result keyword search feature interest encourage user prototype version report bug omission suggestion delphi BUGS button Selecting allow report program bug keyword error documentation error feature appear release product DELPHI Components Specifications DELPHI operate network Apollo DOMAIN workstation typical workstation support high speed local area network high resolution bitmap graphic display approximately 1 K x lK keyboard function key touchpad mouse locator input operating system provide multiwindowe screen manager graphic library graphical IO window hierarchical distribute file system Components DELPHI consist software component user interface database document delphi user interface manage user interface management system DOMAINDialogue Ty 2 131 Dialogue separate application user interface underlie code process user command data application code write conventional programming language group routine call response specific user command input user interface write compile Dialogue compiler separate application separate user interface underlie application result modular code permit user interface build modify independent application database build distribute database product Apollos D3 M document database need network Technical writer load database document ready tool develop assist loading tool similar describe price mention early description scope paper online document index keyword human expert technical writer way print manual synonym dictionary conjunction keyword index generate exhaustive entry keyword store database structural information document file network pathname document file distribute network CH186Proceedings April 1986 Speciications DELPHI currently experience computer user primarily software hardware engineer technical writer engineering manager delphi vital statistic Volumes Shell Display Manager corn mand description operating system description Library Information Types reference overview individual retrievable document 1200 document file storage approximately 3 Mb Database storage approximately 2 Mb DELPHI program size 06 Mb 5 Mb storage requirement excessive bear mind copy document database need network system software occupy 10 20 mb node depend hardware configuration optional product instal node carry DELPHI program Evaluation Commentary Availability DELPHI typically start dedicated process login time continue run logout program use window icon conserve screen real estate user help time grow icon size window issuing request user need exit application Apollo node support 24 concurrent process User Interface Acceptance DELPHI display multipage document multiple font line graphic study suggest desirability limiting length online document reason legibility user recall 5 181 believe combine bitmap graphic careful formatting use multiple font significantly improve legibility forwards backwards scroll lessen concern document length user interface evolve iteration user find easy learn easy use comment interface return bugs button relate primarily operational issue identify design deficiency important factor increase size initial audience provide system subroutine documentation previously unavailable online raw form Pascal c FORTRAN include file information DELPHI attractive system programmer Completenessand accuracy Documents available DELPHI accurate complete counterpart print manual User feedback BUGS button helps improve documentation accuracy DELPHI provide broad range information traditional command assistance system initial implementation include shell command display manager command system call code example relative ease document update enhance accuracy completeness document revise writer generate online version replace database immediately need wait entire software release ready print run hardcopy manual order online hardcopy manual generate source file coordination automatic Adaptability DELPHI give user degree freedom search information search cover database select volume gather type information subset type current limitation DELPHI provide context sensitive help attempt track user behavior inference user want run process way find user come DELPHI well CH186Proceedings April 1986 way provide context sensitive help integrate overall user environment window manager commit approach long term effort Extensibility Aside user interface important consideration design DELPHI extensibility extensibility require display module handle multiple style document user interface adapt volume available database document keyword add easily current version DELPHI extensible Apollo manual follow section discuss extend system internal book plan future plan extend enhance DELPHI number area DELPHI expand cover broad subset domain documentation include additional volume information type short term like add manual cover software application product add task definition information type ultimate goal incorporate hardcopy manual system likely strain storage retrieval characteristic current system overcome problem look efficient database product datum compression technique high density storage media compact disk CDROM Second DELPHI flexible accept OEM end user extension imply creation toolkit implement database load keyword synonym generation etc current model support user extensibility library level way accomplish user library treat completely separate database user database load DELPHI instal customer site easily distribute network Access control check database add volume available subset user Keyword context constrain single database reduce chance incompatibility disadvantage search long additional overhead incur search multiple database alternatively user database information merge overall DELPHI database solution affect retrieval speed drastically affect general database organization design Keyword incompatibility result allow additional document incorporate mean DELPHI able display new output file format necessitate identification output file type ASCII format bitmap etc database addition require extension document display routine user interface continue evolve base user feedback particularly need address concern efficient use screen real estate well method match user document keyword end monitor keyword usage develop adaptive indexing technique consider bugs button current interface helpful allow user report program error retrieval shortcoming factual correction document database intent increase granularity information retrieval document subsection level oppose current section level fine discrimination wiI1 provide focus response user query    instance expert user retrieve syntax summary Shell command entire command description plan implement related Topics feature allow user traverse direct link document addition keyword browse mechanism take long view DELPHl inteprat    e online documentation host system user interface envision system documenration run example program ideal multi window multiprocess environment reach CH186Proceedings April 1986
18,1989,ABSTRACT suggest HCI design characteristically embody multiple distinct psychological claim virtually aspect system usability overdetermine independent psychological rationale inherent design myriad claim cohere implement run system HCI artifact effective medium theory development iici advance framework articulate psychological claim embody artifact proposal reconcile contrast perspective theory base design hermeneutic clarifie apparent paradox HCI application lead hci theory field inquiry study human computer interaction perplexing midst enormous activity considerable technical progress fundamental issue remain unresolved example axiomatic scientific psychology contribute understanding IICI phenomena design IICI artifact role scientific psychology iici dispute theorist argue certain fairly narrow conception psychology successfully apply Newell Card warn psychology drive HCI provide quantitatively predictive cognitive model approach focus necessity relatively low level S pect HCI eg keystroke level method ideal expert performance simplify HCI situation eg rote learn scale text editor objective provide psychological theory base suitable deductive use HCI design theorist hold pursue goal develop cognitive science theory HCI impair progress usefully understand HCI phenomenon effectively contribute design approach stress distortion oversimplification inherent laboratory bind psychology conventional view theory base design contrast hermeneutic approach recommend treat situation user artifact unique instance understand instance see interactive process consensual interpretation goal identify theory base application design design subjective process discovery approach problematic limited scope quantitative theory preclude adequate ground design decision theory base design occur nontrivial scale hand bridge hermeneutic interpretation design decision make essentially mystical systematic methodology conceptual framework explicit way abstract particular experience interface innovation frequently lead IICI research follow conventionally assume flow technology transfer theory application research return interpretation particular artifact technique evolution concept direct manipulation psychological analysis collection HCI artifact provide excellent example theoretical work sub    stantiai1y postdate implementation concept run system seek reconcile contrast perspective theory base design hermeneutic confront apparent paradox HCI application lead ing hci theory conjecture successful HCI design embody assortment psychological claim virtually aspect system usability overdetermine independent psychological rationale inherent design urge systematic approach usability interpretation countenance hermeneutic ground scientific psychology far rich utilization psychology design afford current quantitative theory central role design interpretation HCI artifact HCI research balance brief paper illustrate HCI artifact embody psychological clain1s argument course demonstrative hope take HCI artifact seriously reconcile theory base design hermeneutic enrich vision discipline PSYCHOLOGICAL OVERDETERMINATION HCI artifact embody psychological claim context use aspect interface engender psychological consequence sense claim user behavior experience accordingly analysis couch framework understanding activity domain employ generic task analysis user activity arena identify clarify goal plan act achievement evaluate result action condense variant seven stage action describe Norman objective analysis produce rich qualitative description claim embody aspect interface group category user activity acknowledge description exhaustive seek merely articulate lead claim artifact approach provide mean expose psychological overdetermination HCI artifact design artifact exhibit task coverage extent set psychological claim embody address activity category task analysis artifact embodying claim user interaction formulate appropriate goal mapping system define goal create plan execute action evaluate result action good task coverage artifact task depth extent embody multiple claim particular category user activity direct manipulation interface interpret Hutchins et al example make claim plan act small semantic distance make plan simple small referential distance simplifie plan execution point operation method facilitate learn eliminate certain class syntactic error artifact incorporate diversity technique component artifact exhibit sig nificant task coverage task depth composition interaction claim determine artifact manifest usability arena user activity Usability psychologically overdetermine individual claim embody specific technique component artifact relation part claim embody sense HCI artifact nexus psychological theory myriad claim interrelation give coherence codification artifact training wheels simple example HCI artifact Training Wheels interface reduce function training environment standalone text editor key characteristic interface purpose articulate psychological claim training wheel design block consequence problematic user selection example time user select Data Merging message return function available training wheel interface simple technique find facilitate initial continue learning ie learn advanced function like Data Merging training wheel remove variety psychological interpretation inherent training wheel design variety specific distinct psychological claim inhere simple error blocking technique summarize Table 1 Claims embody Training Wheels Goals Training Wheels embody claim understand real world task term system task facilitate filter inappropriate goal extreme upperleft Table 1 express claim work opportunistically facilitate goal identification11 user identify appropriate initial goal block prematurely engage advanced function like Data Merging implicitly guide user identify appropriate goal like type print document user articulate appropriate goal block mapping inappropriately system function example document create Printed selection Print Create block implicitly guide user correct task device mapping user error Training Wheels system example select Print Create consequence error block opportunity commit place user go realistic decision making determine correct goal mapping incorrect mapping clearly flag error blocking consequence claim allow goal mapping process particularly incorrect goal mapping remain salient memory ex    Table 1 Psychological Claims Training Wheels Error block Goals PlanningActing Evaluation work opportunistically facilitate goal distraction error recovery identification episode focus user attention correct action work familiar task suggest goal map nest action sequence salient facilitating plan formation block consequence allow commission error make goal mapping salient practicing kernel scenario establish integrate basic skill accomplish familiar task intrinsically motivate blocking request action motivate action reduce device space constrain hypothesis generation exposure menu support incidental learning constrain user intention increase effectiveness feedback allow feedback goal mapping immediate feedback block device state instigate evaluation relevant intention plan action active memory ample getting tangle lengthy error recovery accordingly play effective role learn user Training Wheels interface accomplish goal meaningful outside context system system embody claim work goal intrinsically motivate PlanningActing Blocking access irrelevant function purport control potential distraction develop pursue erroneous plan false start curtail action sequence deeply nest relatively stereotyped previous subsequent attempt increase chance learner notice practice kernel scenario type print likely action sequence establish plan repertoire Training Wheels assert practice kernel scenario establish basic skill component part meaningful whole type printing scenario incorporate menu selection learner practice type print necessarily practice menu selection experience basic skill meaningful Training Wheels error blocking embodie claim thwart user action motivate action claim true case block request action frustrating user particularly fully understand rationale action block experience series block attempt error block intervention negative psychological consequence example illustrate contrast claim embody artifact psychological consequence actual psychological consequence definition claim inherent artifact    sertion psychological rationale design claim embody artifact empirical claim finally empirical issue claim true evaluation reduction number possible system state consequence error blocking admit few possible explanation action consequence episode constrain user evaluation interaction advanced function block user list context menus minimal exposure system functionality seek support incidental learning scope device space guide user goal identification make likely user appropriate goal mind error block message encounter claim value message enhance allow user infer action inappropriate inappropriate action particular task pinally present message immediately system state transition block seek provoke evaluation relevant goal plan action active memory Training Wheels Theory Training Wheels interface psychologically overdetermine make variety claim sense task coverage task depth diverse claim cohere implement run system interactive situation real use possible plausible psychological claim embody Training Wheels interface example Training Wheels goal claim learn enhance free exploration error blocking prevent free exploration planningacting claim master component skill separately integrate task performance effective claim characteristic system approach instruction coherence claim embody Training Wheels highlight Gedanken experiment try excise correct empirically false claim example suppose claim block request action motivate action false suppose predominant affective consequence block request action plan act frustration address design preempting selection block function remove dim inappropriate menu item user consider inappropriate function select frustrate have block message return possible alteration far broad impact psychological claim inherent Training Wheels interface merely eliminate problematic claim frustration block deliberately plan action albeit action incorrect respect goal embodie claim goal mapping evaluation process goal mapping salient user evaluation occur relevant intention plan action active memory potential consequence frustration subtract claim inhere block technique Training Wheels system nexus collection claim false user interface designer work directly actual HCI artifact simplify theoretical description inadequate purpose context free theory example sense Newell Card capture claim intention construct description like table 1 support use actual HCI artifact design process provide analytic guidance see example artifact psychological term train wheel error block single technique typical case analysis complete interface consist variety technique potentially embody psychological claim HYPERCARD HypercardTM author tool information storage retrieval system run applez desktop environment employ metaphor library card catalog personal database application represent stack card key characteristic Hypercard use progressive disclosure function mean user level use example stack builtin object use card catalog metaphor addition Hypercard employ technique common desktop environment application example menu dim direct manipulation standard interface component purpose exhaustively identify claim inhere Hypercards interface analyze key characteristic interface order illustrate overdetermination table 2 User Levels Hypercard provide selectable user level browse typing painting author script progressing browse script menus expand new menu available disclose new category function label user level embody claim name level facilitate goal identification suggest kind task goal attempt level example browsing level user navigate card stack search information stack print information unable alter information staging function seek facilitate mapping task eg find information stack device goal eg method navigate search Menus menu function visible browsing level generally support browsing task Training Wheels claim goal mapping facilitated inappropriate choice suppress staging function provide user level impact plan act task component user level limited coherent set new function reveal level embodie claim user lead practice consolidate kernel scenario distraction advance irrelevant function user observe covariation available function user level label level well understand device goal link plan action progression user level incrementally expand device space embodie claim user work evaluation interaction initially facilitate few entity construct explanation claim successive user level provide framework incrementally learn system concept example learner expose button navigate open stack etc author level button borrow incorporate stack user create modifying ultimately level scripting user learn modify button action write rewrite button script example build Ins Hypercarcl provide example application stackwaretm builtin object eg bitmap button user incorporate stackware create palette concrete possibility establish task orientation cognitively Table 2 Psychological Claims Key Hypercard Techniques Goals PlanningActing Evaluation User Levels label staging system function facilitate goal identification working stage task facilitate goal mapping example Built in range concrete task instance establish task orientation concrete meaningful object suggest goal example facilitate goal mapping staging kernel scenario integrate basic skill stage function label covariation help link plan goal reduce device space constrain hypothesis generation stage function support incremental learning builtin part simplifie plan modify easy create scratch manipulate meaningful familiar object suggest hypothesis learn superior tell Card Catalog database stack simplify Metaphor goal mapping prior knowledge framework facilitate explanation Menu dimming preempt syntactic error reduce visual distinction active syntactic knowledge inactive menu item implic    learn itly pose evaluative question background syntactic detail reexposure menu support duce level awareness syntax incidental learning preempt syntactic error avoid frustration motivationally class application hypercard support eg address book list calendar label vcr tape cassette embody claim user cognizant motivated appropriate goal Hypercard embodie claim particular example build in suggest specific task goal goal mapping system function example Address Stack provide builtin template address book application user understand Hypercard understand address book identify goal browse builtin template add information slot Working example provide inspectable model give goal achieve Hypercard eg share card stack example build in assert plan acting simplify able directly incorporate appearance behavior component eg button function corollary claim modify easy create scratch user borrow button behave desire way modify appearance alternatively button behavior user desire eg dial phone number copy script augment include additional behavior eg take user notepad stack create record conversation example build in embody claim learn exploration analysis see inventory button field card suggest system taxonomize world example user browse background card stack analyze different stack compose system embodie claim active evaluation learn superior tell explicitly Card Catalog Metaphor Hypercard incorporate card catalog interface metaphor stack liken library card catalog card compose share information background card specific information stack open time library user typically use catalog time Links card create place magic button card relate card hand user metaphor embody claim user prior understand storage retrieval function card catalog suggest appropriate goal goal mapping device goal database application couch term entitie metaphor example distinction background eg block number card    unique information suggest decomposition goal create new stack card metaphor claim evaluation facilitated identify system object encourage explanation term real world object new functionality eg button link card readily understand graft metaphor ie magic button note metaphor claim visa vis plan act task component suggest general property interface metaphor Menu dim Hypercard employ technique common AppleZ desktop interface include form error block technique menu dim Menu item invalid current system state appear grey font valid choice appear black Hypercard technique incorporate syntactic constraint example object selection prerequisite request action claim embody menu dim pertain plan act Menu dimming block certain syntactic error preempt user unable select menu function syntactically appropriate argument select example user wish cut text card select text block Cut Textn grey Edit menu selection occur dim technique make claim learn use affect assert learn facilitated user need explicitly remember syntactic constraint reduce knowledge require acting assert fluid use facilitated user remain attentive syntactic detail assert preempt possibility syntactic error avoid frustration accompanie have action thwart Hypercards menu dimming make claim associate error management technique control distraction error recovery afford nest action sequence claim central dim technique error management address syntactic    formedness example appropriateness user goal task possible select Cut Text having specify text block cut fail attempt necessarily shallow term action sequence short live contrast deeply nest sequence tangle recovery episode entrain inappropriate task device mapping menu dimming make claim visual contrast active black inactive grey menu item implicitly pose evaluative question user user expect menu item available find ask available generally user lead consider differentiate menu item available particular system state available like Training Wheels technique embodie claim expose user menu support incidental learning range system functionality Hypercards menu dim goal claim technique incorporate syntactic constraint Hypercard Theory 1 Iypercard incorporate variety interface technique embody variety psychological claim complement interact claim embody 1 Iypercard example note card catalog metaphor planning acting claim menu dim goal claim case variety claim embody Hypercard interface technique compensate limitation task coverage produce overall balance coverage depth course case Training Wheels matter merely add delete claim technique example apparently separate interface technique Hypercard work project model world user believable illusion user think term directly interact object behave accord nature contrast traditional orientation user think term type command processor model world view interface technique embody emergent claim constituent gestalt model world depend support interaction technique Hypercard use example build in card catalog metaphor important component model world technique contribute gestalt one discuss direct manipulation automatic saving change fully understand separate technique combine project model world know boundary condition achieve gestalt know constituent technique     claim embody    merely add altered substitute consider systemic interaction specific nature give 1 Iypercard technique constrain implement context technique example possible imagine variation menu dim support identify mapping goal Training Wheels task order constraint determine menu selection dim seemingly local change pervasive implication Hypercard training system incorporate task order constraint limit scope user activity entrain new claim frustration example undermine existent technique eg user control alter menu dim respect user goal activity necessary give Hypercard technique support goal identification mapping system implement eg user level technique discuss role menu dimming implement Hypercard evaluate respect Hypercard technique interaction Menu dim Hypercard technique include applez desktop interface relationship provide systemic constraint menu dim technique Hypercard particular claim consistency HCI ARTIFACTS PSYCHOLOGICAL theory apply realm tension science design Science design different principal objective simplistic imagine deductive relation science design bizarre relation believe theory base design possible HCI sufficiently rich view artifact theory nexus property psychological overdetermination discourage hope simple deductive bridge theory design envision reciprocal relation articulation rearticulation set psychological claim iteration design Hammond et al illustrate type problem arise psychological claim embody artifact basis describe instructional exercise design teach user type input field incorporate claim feedback guide evaluation input error psychological interpretation design inadequately articulated unavoidable delay feedback presentation embody unrecognized claim delay feedback effective fact tutorial exercise prove problematic user kind example routine HCI routine complex empirical domain Physicians mechanically map isolate quantitative indicator state health pathology complex interpretation intervention strategy design inform systematic medical science understand usability probably complex problem foolish expect complex solution hermeneutic vision correct stress multiplicity relevant interpretation situation user artifact easily conflate multiplicity infinity settle indeterminate subjectivity view discipline assume bound interpretation ie ground psychology respect task analysis interpretation valuable insofar produce systematic falsifiable result set claim inherent typical computer equipment rich unbounded arbitrary psychological interpretation artifact need begin de novo new artifact manifest example interpretation point contact preselecte state affair typical complex domain medical diagnosis considerable extent proceed case case improve case study complexity hci cause reject simplistic science need incline reject science tout court contrary interpretation claim embody HCI artifact evince hallmark scientific progress
19,1989,Abstract Mickey UIMS map user interface style technique Apple Macintosh declarative construct pascal relationship user interface programming language control interface generation impose restriction possible style user interface greatly enhance usability UIMS Introduction User Interface Management Systems UIMS research topic time number model present specify human computer interface fashion suitable generate user interface code early system base model transition diagram Jacob 85 Olsen 84 grammar Olsen 83 menu tree Kasik 82 recently attention pay power object orient language model processing interactive event Schmucker 86 approach concentrated model input event key press mouse click great deal success Object orient approach particularly successful implement direct manipulation interface research attempt exploit descriptive processing model programming language vehicle specify user computer interface paper describe Mickey UIMS take interactive capability Apple Macintosh map declarative facility pascal implementation example paper idea restrict Macintosh Pascal Language Based Specifications User Interface attempt building language base UIMS MIKE systemOlsen 86 basic metaphor system user interface model set object type set procedure function operate return information object couple set base level interaction technique default interaction style user interface produce interface refine profile editor experience MIKE produce follow insight efficacy language base user interface specification user interface specification base term familiar programmer able overcome programmer resistance plague early UIMS development effort MIKE interface describe term suppose term event handle adopt highlevel description interface able generate default interface early specification interface design high level description allow create tool measure interface usage aid refining interface Olsen 88b Foley Foley 88 develop range interface analysis technique base interface model similar mikes language basis MIKE Macros Example Olsen 88a facility add allow end user extend modify user interface spite advantage describe discover problem mikes model user interface dialog style dictate UIMS large degree style adapt variety application fundamental style change second problem mike view user interface weigh heavily favor command style interaction community general move away Mickey Approach Mickey system design attempt simplify user interface specification process broaden scope interface model language base UIMS primary thrust project extend user interface specification model include wide range descriptive facility simple type procedure create new specification language editor descriptive facility pascal source programmer need learn little new syntax create user interface recognize language base uimss necessity carry heavy stylistic bias choose implement Macintosh environment stylistic bias share community stylistic requirement Macintosh environment turn fact Mickey generate style user interface advantage disadvantage Mickey generate exactly kind interface require target environment design approach examine fragment user interface style provide Macintosh toolbox find corollary construct pascal language UIMS build mapping standard Macintosh interaction technique pascal facility mapping greatly simplify programmer view user interface implementation approach describe paper require unique UIMS implementation combination user interface look feel specific programming language find integration UIMS programming environment restrictive integrate compiler editor debugger uniform environment price pay ease use Mickey User Interface Specifications uimss Mickey view application set service available interactively Mickey set service define Pascal Unit separately compilable module Mickey parse interface portion unit extract necessary information application interactive service interface portion Pascal unit provide sufficient information access unit interactively provide information issue menu placement external name function key equivalence interactive presentation information order supply presentation information symbol declare interface unit set property associate property specify form pascal comment follow fragment interface unit illustrate UNIT SimpleDraw INTERFACE use MickeyServe MKW DrawUtil PROCEDURE NewDrawing MenuFile NameNew KeyN DrawFile OutFileDesc PROCEDURE OpenDrawing MenuFile NameOpen KeyO DrawFile infiledesc implementation END NewDrawing procedure declaration augment property list MenuFile NameNew KeyN state NewDrawing invoke File menu external new command key N mapping interactive technique pascal construct syntax programmer learn associate property list symbol MacIntosh pascal mapping key Mickeys specification model mapping user interface technique specific pascal construct purpose discussion mapping group menus dialog box window Menus Menu item handle form item represent procedure invocation variable modification Simple Procedures procedure enter menu simply specify menu belong give optional external command key external omitted procedure follow example menu simple drawing program construct fashion PROCEDURE NewDrawing MenuFile NameNew KeyN DrawFile OutFileDesc PROCEDURE OpenDrawing MenuFile NameOpen KeyO DrawFile InFileDesc PROCEDURE CloseDrawing MenuFile NameClose KeyW PROCEDURE SaveDrawing MenuFile NameSave KeyS PROCEDURE SaveDrawingAs MenuFile NameSave DrawFile OutFileDesc procedure CloseDrawing SaveDrawing argument procedure immediately invoke corresponding menu item select NewDrawing OpenDrawing SaveDrawing argument draw set primitive argument type primitive argument type correspond specific interactive technique similar MIKE exception wide range possible set primitive technique type Point input 20 geometric point RubberLine input end point line rubber band line RubberRect input comer rectangle rubber rectangle InFileDesc select file read standard Macintosh dialog outfiledesc specify output file standard Macintosh dialog addition primitive technique describe record datum type specify argument case dialog box describe later Shared Variables second form menu item variable interface unit share interactive user variety technique variable modify menu Medium Thick VAR LineSize MenuStyles LineWidth ColorSetting MenuStyles FillColor VAR BoldText MenuStyles NameBold KeyB Boolean ItalicText MenuStyles NameItalic KeyI Boolean UnderLineText MenuStyles NameUnderline KeyU Boolean OutlineText MenuStyles NameOutline Boolean ShadowText MenuStyles NameShadow Boolean variable LineSize ColorSetting define enumerate type represent menu check list example select medium menu cause variable LineSize set MedLine LineSize variable interface unit freely access application code BoldText variable declare boolean check item menu Selecting Bold menu set BoldText true mark bold check mark Selecting Bold set false remove check mark toggled item switch setting specify enumeration choice case GridSetting variable show TYPE Gridding GridOn Tum Grid GridOff Tum Grid VAR GridSetting Menu Draw Gridding Black Gray v White Underline v outline Shadow precede menu create follow pascal declaration TYPE LineWidth ThinLine NameThin MedLine NameMedium ThickLine Thick FillColor BlackFill NameBlack GrayFillNameGray WhiteFill NameWhite complicate global setting handle variable type Record data structure generate dialog box variable dialog item select menu correspond dialog box appear current value variable dialog field user interact box standard way Selecting ok set variable correspond dialog box select Cancel close box remove box modify variable follow StyleOIText variable example TYPE Str40 STRING TextStyle RECORD Font Str40 Points NamePoint Size Integer END VAR styleoitextmenustyle NameText Style TextStyle Font IGeneua cancel 0point Size10 Dialog Items show previous example type variable determine appropriate interactive technique complex technique support Mickey dialog box Dialog box define Record datum type dialog field draw field record Fields integer real string type represent field type boolean field check box field enumerate type bank radio button show o Bacon o Lettuce O Tomato 0 Avacado o Bologna o salami o Ham o Cheese t Beef 0 Turkey Type Sandwichltems Bacon Lettuce Tomato Avacado Bologna Salami Ham Cheese Beef Turkey Sandwich Record Items Sandwichltems End dialog box create global menu variable argument menu procedure create application code example type TextStyle show DialogWindow property associate specify dialog window generate TextStyle value application create window calling service routine pass TextStyle pointer TextStyle value field window modify interactively correspond field value associate window change Appllcatlon Windows metaphor equate Macintosh interface construct pascal construct start break address actual window application display information area application window Macintosh highly stylize happen give application potentially large number window limited number window type window type characterize way window handle application standard kind thing Macintosh window property associate window type specifie application procedure response user interface activity addition handle action resize closing select scroll window basic interactive event direct window mouse click key input drag operation Properties associate event specify application routine call event occur follow example window type declaration WindowDrawWndw scrollhscrollhproc ScrollVScrollVProc RedrawRedrawDrawing selectselectdrawe GoAwayDrawingGoAway mousedownstartdragselect mousestilldowndragselect mouseupenddragselect procedure scrollhproc draw WindowNum OldX NewX Integer PROCEDURE scrollvproc draw WindowNum oldy NewY Integer PROCEDURE RedrawDrawingDrawingWindowNum PROCEDURE SelectDrawing drawingwindownum PROCEDURE DrawingGoAway draw WindowNum PROCEDURE StartDragSelect Drawing WindowNum Y Mods Integer PROCEDURE DragSelect DrawWn WindowNum Y Mods Integer PROCEDURE EndDragSelect DrawWn WindowNum Y Mods Integer routine startdragselect DragSelect enddragselect support drag rectangle select item window Application UIMS Interface primary vehicle interface UIMS application procedure call variable datum value share case procedure interface simple invocation case share variable complex example variable BoldText set select future text entry procedure simply look BoldText determine text draw select BoldText mean change hold currently select piece text simple change variable insufficient case application want BoldText change text item select problem handle mean guard guard simply boolean function associate variable field declaration guard function accept new value look variable field old value perform action associate change value andorb return false reason change guard return false change addition declaration property specification find application interface unit number service routine manage window actual draw window symbol declare interface unit disable enable call service routine cause correspond menu item appear gray interactive technique associate symbol inactive enabledisable facility give application complete control user interface Implementation Mickey function parse interface unit source code extract declarative information symbol property interface parse information traverse order construct menu definition dialog box layout window type definition construction phase variety error consistency check symbol dialog menu information generate Macintosh resource unit code generate provide interface generic UIMS code application interface unit generate code application code standard Mickey code compile attached resource form complete interactive application Dialog box layout automatically compute store standard Macintosh dialog resource interface designer use Macintosh resource editor refine visual layout dialog box Summary Mickey system extend language base user interface metaphor add type information variable share user interface model extend capability form specification lead tight bind particular user interface style particular programming language virtue approach programmer readily create new user interface interactively sophisticated environment learn excessive new notation terminology limited experience show day good pascal programmer work user interface prior experience programming Macintosh system great success class graduate student generate dialog layout editor
20,1989,ABSTRACT Case study software development organization suggest common practice organization pose obstacle innovation software development organization good reason conservative resist innovation recognize importance innovation competitiveness product organization experience development regularly schedule release suit development innovation research investigator work user interface team organization interview people organization organization develop prototype small design change prototype test early development innovative change evaluate late resistance iteration great User interface design prototype show user mechanism coordinate development conservative influence organization successfully overcome obstacle depart establish practice introduction Innovation standardization compete force affect virtually aspect computer industry appeal user interface standardization user new revise product quickly productive minimal training standard compute industry inevitably obsolete irrelevant unlike manufacturing industry technology relatively static computer industry continue enjoy exponential decrease cost power ratio innovation user interface essential advantage technological advance uted direct commercial advantage acm copyright notice title publication date appear notice give copying permission Association Computing Machinery AThis paper address innovation emerge software development organization study MCCs Human Interface Laboratory context innovation define feature new product organization organization responsible mature product line require innovation retain competitiveness study suggest development practice follow organization practice widespread industry pose obstacle innovation time organization overcome obstacle introduce successful innovation product innovation achieve depart establish practice paper describe practice organization oppose innovation case history illustrate inhibitory effect practice effect overcome Observations organizational practice support quotation interview conduct study protect anonymity source name document organizational unit change Names people product product feature company delete replace generic term OBSTACLES INNOVATION revise product software development organization good reason conservative resist innovation reason derive organization goal new product version company seek retain increase customer base add new functionality improve user interface exist functionality improve system performance attempt ensure product meet strict reliability criterion deliver schedule Software development organization know instal customer base reject innovation user interface exist functionality innovation clearly improvement few innovation reliability criterion schedule easily meet consequently new product version contain little innovation user interface think responsibility associate customer base size ve get fairly considerable term ability modify evolve product think current responsibility protect investment trust sense ve place think tend constraint term technology advance mature product attractive competitor new product consequently organization likely increasingly interested innovation product mature face problem organization experience development regularly schedule release suit development innovation design principle propose suggest organization achieve successful innovation Gould Lewis propose principle system design 1 understand user task 2 include end user design team 3 test design measure performance end user early development 4 iterate design process Similarly Shneiderman observe iterative design method allow early testing prototype revision base feedback user incremental refinement suggest test administrator necessary arrive successful system p 390 Gould Lewis later Hewett Meadow report successfully principle design system Gould Lewis note principle follow developer think obvious study suggest nt easy follow design principle large software development organization Gould Lewiss principle involvement intend user system designer software development organization include describe interaction user intentionally limit Developers primary source information user need marketing base information contact manager customer organization occasionally software development manager meet customer manager trade show goodwill visit course customer manager usually end user Interface designer developer recognize value contact end user overcome organizational obstacle consequently learn detail product explore idea new feature test usability d like user interface designer marketing people provide major direction area want address think 1 wish identify customer work Development able information have work customer know certainly development argument gee d understand well yes s true nt everybody go customer time Shneiderman Gould Lewis recommend intend user ask carry real work prototype early development process system iteratively redesign base problem find testing study revision large complex product difficult simulate standalone prototype tool Prototypes construct modifying product case modify code case tool product modify interface prototype practice permit early user testing user interface revision simple implement innovative change require substantial development effort cause user testing design iteration postpone late development process course early user testing design iteration important design innovative early prototype test organization commit flawed design lot thing design prototype d commitment large specification user interface lot area see light day user input whatsoever testing sort make commitment initial design problem lot people buy sign sort level see problem d sort phenomenal commitment design fact d test nt November actually test sort month design write people start implement Iterative design essential element successful innovation design iteration propose late development process likely meet resistance design change require member organization revise work complete Technical writer revise documentation quality control performance analysis engineer revise preplanne testing procedure developer online help training need revision design change require approval developer think big problem user interface design start iterate obvi ous people iterate people go end start worried actually going deliver worried work create people like documentation screw iteration nt write book software iterate like mad underneath know difference mechanism coordinate facet software development particularly software design review process exert conservative influence design design review broad range people include development manager technical writer quality control engineer performance analyst product manager marketing field service reviewer object innovative design adversely affect product perspective example field service believe innovation hard maintain field marketing object inconsistent related product User interface particularly susceptible problem opinion user interface developer complain want user interface designer architectural model people come comment architecture actually screen ask people comment manage director downward use product personal idea idea people room idea expect lead great innovation requirement acceptance reviewer work innovation tendency review panel user interface design committee problem indecision vacillation inherent committee CASE history study user interface design development practice survey participant observation methodology Software development organization company study participant observation methodology investigator study different organization investigator temporary member user interface team working team interview people organization investigator interview 25 people start coworker user interface team expand developer manager staff manager support group technical writing training development marketing field service learn organization experience failure initial attempt develop innovative new product revision exist product Case 1 Case 1 product start university project year old dynamic marketplace new functionality small change user interface appear regular release grow old maintenance modernization increasingly difficult product rapidly lose ground competitor new product year early organization anticipate problem set small research project design new product year disappointed progress project cancel favor major modification exist product year alternate strategy build new product modifying old time pass sense urgency grow project allocate great resource project provide product enhancement fail produce acceptable development plan project overwhelmed difficulty decide issue arise repeatedly little sense move consensus option topic seemingly endless discussion decision later overrule outside group decide nt fit organization marketing strategy indecision partly cause understanding user task user interface requirement derive marketing requirement group software architect detailed design development software engineer architect limited contact customer management user interface developer contact user express frustration indication user point view specific design issue interface developer occasionally meet informally field service representative know use product developer build prototype new user interface feature modifying product code principal purpose prototype help assess resource need implement user interface present design management developer review show user consequence gap developer user recognize manager remedied manager comment Development nt know build friendly user interface nt know user think real key right user friendly obstacle innovation overcome super designer group support product distant site strong technical background experience customize product major customer thorough understanding customer need base contact manager user persuade vice president organization product competitive year join vice president staff leader know exactly want vision innovative release build realize vision year extraordinary effort commitment wait usual cycle review consensus building approval work formal authority handpicke developer consult manager assign task review progress problem daily hand approach significant change standard practice course irritated manager developer complain vice president side dynamic leader early report indicate new product success procedure success possible abandon vice president leave project leader expect leave management structure reorganize new manager interview talk importance follow standard software development management practice control product design ensure coordination part project practice enable meet reliability criterion schedule goal important innovation case 2 Case 1 Case 2 product equally old case 2 product different history product evolve field service group solution customer problem company soon find customer similar problem assign Case 2 organization develop new improved version product organization develop similar product market particular customer Progress slow result sound reliable unsuccessful evolve successful product Field Service able develop successful product manager suggest software development group hinder requirement procedure slow product development disconnect user input believe field service group know need customer quickly respond customer request procedure organization change considerably early innovation failure User input essential design development process time visit human factor engineer design evaluate user interface test design prototype early development possible learn user need product visit customer site talk customer representative demonstrate evaluate product prototype prototype develop tool contain product tool permit change appearance behavior user interface small change user interface quickly prototype evaluate possibly design review approve innovative change require implement new functionality tool postpone prototype development evaluation later development great resistance design iteration addition facilitate user testing design iteration prototype help designer sell idea innovative design hard prototype hard sell designer able introduce innovative feature previously implement product designer say having prototype tremendous weapon product nt nt work people look usability problem detect user interface implement test evaluation identify need change user interface feature management complain impact schedule aspect project fact documentation set go press developer begin experiment new feature agree change require management objection overcome general coordination requirement block iteration user interface occur late development case 2 organization aggressively seek way introduce innovation product planning integrate series product revision support version product implement version design fourth version plan fifth version group establish serve technological gatekeeper look innovation inside outside company work user interface designer plan integration new feature take long view allow develop commission development prototype demonstrate value feasibility new feature conclusion development organization responsible exist product classic double bind risk alienate instal customer base implement implement innovative user interface customer face learning use new interface customer date interface consider product early product life cycle developer comfortably treat exist user interface product standard product age demand innovation increase product lose status company manager say think way corporation feels somewhat ve get bit dinosaur instal customer base provide potentially rich source information guide choice standardization innovation source seldom systematically tap ongoing analysis user task prioritize potential innovation difficult developer postpone innovation oscillate alternative innovation strategy case 1 2 represent way obstacle innovation overcome organization acquire super designer authority knowledge user need vision talent Alternatively organization systematically study end user implement tool support early prototype iteratively design user interface second approach advantage dependent extraordinary individual implement approach challenge iterative design uncommon development large product acknowledgment thank Jonathan Grudin propose help plan research William P Jones Arthur D Little contributed planning study organization Special thank company member organization hospitality cooperation
21,1986,ABSTRACT meet challenge construct interface increasingly complex multifunctional product designer attract promise offer intelligent system value sophisticated system measure term quality user model intelligent interface expert Help System design implement evaluated argue operability problem note user interaction system attributable lack strong user model system interface model play critical role determine effectiveness system ability monitorthe user planning activity discuss requirement strong user model provide example model integrate planner base intelligent interface introduction today marketplace merely catch glimpse future bring way electronic base consumer product buy microwave oven vcr personal computer trend increase number function enable decrease cost electronic consumer increase functionality perceive overwhelming g 1986 ACM o r979 II 80 6x60400     03 14 0075 complexity discourage buying product place take advantage product functional capability purchase case manufacturer fail meet customer needs ultimately pay price market share ln light market trend increase challenge human factor designer user interface transparent highly functional machine useful appear complex difficult operate interface flexible adaptive variety user need experience support interface system intelliqent recognize user goal assist identification procedure appropriate goal finally assist effort monitor progress learn experience way add intelligence machine incorporate planning mechanism allow machine suggest problem solution solve user problem automatically Nilsson 1980 intelligent interface build research effort understand machine coach assist user copy job complex photocopi Analysis operator interaction call Expert Help System provide clear message designer interface value intelligent interface extremely limited base strong model user briefly describe design EHS operability problem note testing argue majority problem user interaction system lack appropriate user model Description System prototype expert Help System EHS develop assist casual user operate complex photocopi Fikes 7983 system design job description provide user determine appropriate procedure task base description provide user instruction task monitor user execution procedure prototype machine copi control panel replace high resolution bitmap CRT mouse keyboard perform copy job operator describe input output selecting menu option answer series questipns present monitor figure 1 user believe display menu selection describe goal select Start Job system begin create plan satisfy express goal job execution phase process system display screen show 1 user 2 step perform happen machine operate 3 help system permit user query system information relevant step currently perform system analyze menu option create goal description final state copy job create plan skeletal plan select instantiation plan library Skeleton plan selection accomplished discrimination set key feature job description plan instantiate determine value plan variable eg plan variable CopyContrast Lighter Darker Normal establish constraint set job specification Subplans plan library incorporate body overall plan need satisfy subgoal Operability Problems System testing system operator ask run copying job require complex procedure task operator require multiple set douple sided copy article book particular copying job difficult constraint photocopi 1 bind document copy platen glass 2 staple set input device s recirculating document handler RDH operator task require stapled set bind original appear impossible light constraint fact job phase figure 2 phase operator make single sided copy page article platen glass phase take master copy place RDH run side stapled set procedure complicated fact photocopi make sided copy pass side page copy pass odd sided page second pass pass procedure source confusion operator expect task complete pressed START run job have operator run complex copying job represent tremendous test usefulness ehs reader direct Suchman 1985 detailed analysis major operability problem EHS paper simply describe typical instance operator trouble illustration difficulty user model Suchman note numerous instance impasse user machine interaction case user machine fail realize user error party proceed path unexpected consequence action apparent example pass side copying procedure user fail reorder original RDH require successful second pass confuse see output double image side blank side note impasse interaction reflect failure plan monitoring user system hand system effectively track user behavior user receive system feedback necessary track progress Challenges Design Planner Based Interfaces EHS represent example traditional hierarchical planner Fikes Nilsson 1971 Sacerdoti 1975 accordingly suffer weakness particularly respect execution monitor error recovery etc plan system represent set procedural step necessary attain particular goal represent plan limited description sense able user behavior system determine step perform successfully plan monitoring system essentially check step plan complete user fail perform step system recognize fact provide necessary instruction user user perform action represent plan system loss effort interpret behavior circumstance occur frequently test user switch goal priority new circumstance arise interaction system eg clear misfeed seek information EHS unable recognize support replanne activity numerous impasse occurrence impasse point challenge inherent designing planner base interface focus discussion challenge lie area 1 accurate determination user goal 2 track user progress task Goal Determination essential user understand available functional option specify desire goal range possible behavior coherently describe user burden mechanic implementation Job Description critical phase machine use user describe final product participate dialogue machine understand capability exercise control option present planner identify ambiguity job description interact user resolve operator misunderstood aspect Job Description process planner inadvertently use faulty information create plan solve different problem user mind Plan monitor second major design challenge rest attempt accurately monitor user execution task procedure machine rely limited datum determine user Recall test operator reach impasse ehsdure sided copying job receive output double image blank alternate side system operator detect failure reorder original prior second pass procedure impossible machine detect error occur user notice problem see output clue solve problem ie determine point complex procedure mistake inability machine detect nuance user behavior make task know user state difficult human expert help novice detect potential problem observe small cue performance hesitant vacillate behavior machine contrast foreseeable future lack information exactly user experience difficulty information available planner analysis sensor usually sensor internal state difficult interpret Source Difficulties User Machine Interaction analysis operator machine impasse Suchman 1985 discuss difficulty term limitation information system obtain user restrict sensory capability reason argue human machine interaction hope mimic human human interaction increase sensory capability machine certainly alleviate problem root trouble deep note system task determine user goal base observable behavior sensed datum regardless quantity quality provide machine user goal intention goal find behavior instead derive interpretation sense data interpretation require reason rich knowledge base user Lack Strong User Model lack EHS strong model user provide basis interpretation sense behavior aspect strong user model 1 system knowledge characteristic typical user current individual user 2 system contain behavioral semantic mean appropriate association knowledge user situ Cl Ii86 Proceedings April 1986 behavior user accurate interpretation intention underlie user behavior Knowledge User EHS lack representation knowledge typical user predict great deal person behavior know time user photocopi stereotype allow predict general motivation goal common confusion expectation machine knowledge canonical user Rich 1983 explicitly represent system enable informed interpretation operator behavior significant source datum miss EHS knowledge individual user system keep track limited piece user behavior job execution system maintain temporary record user complete step procedure keep record user history    eg frequency type error rich source datum available system record code individual experience time particular task system plan monitor interpretation behavior simple example access information frequency recency particular job frequency type success failure point confusion frequency type help request andor receive etc online record user behavior relatively straightforward implement cf Fischer Lemke Schwab 1984 serve basis building user profile Behavioral Semantics aspect user model far difficult designer capture behavioral semantic user interaction system set rule system apply interpret observe user behavior behavioral semantic allow system draw inference user mental state intention goal provide basis successful plan monitor user assistance consider type information user system know order provide appropriate assistance task information aspect task cause operator confusion eg terminology concept task procedure information available user behavioral history seit infer pattern behavior time second information operator eg cognitive style persistence metacognitive ability system use determine appropriate style interaction form assistance provide information individual user characteristic present raw datum observable behavior infer pattern user interaction system necessary principled mean draw inference user base behavior trivial task give fully understand process human interpret event develop behavioral semantic difficult primarily present model explain intricacy individual planning activity Design Implications experience EHS indicate unlikely design interface self evident intelligent user experience difficulty give troublefree interface designer concentrate develop system manage eliminate trouble Suchman 1982 effectively manage trouble planner base interface able plan information disclosure planning inform user require know state machine user belief machine require close couple planner execution monitor example EHS execution monitor perform prerequisite check completion detectable user action EHS scan entire plan check prerequisite plan step step prerequisite satisfy EHS know user accomplished step try satisfy different plan step EHS world model base solely operation machine execute plan monitor contain information user know consequently EHS understand user encounter difficulty follow plan create avoid problem planner add additional type goal job description goal concern information user know b goal discover user believe additional goal type modify plan generate EHS potential answer annotate plan comment describe user know particular point plan figure 2 illustrate plan EHS create give task make sided copy side original common observe problem user remove sheet paper blank sheet pass copy create step 2d reason odd number copy sheet blank pass allow page copy set appear correctly deal problem planner include planner inspectable annotation plan structure represent user understand solve problem figure 3 show plan english annotation describe knowledge user concern plan step trouble occurs detect execution monitor find unexpected machine state unexpected branching plan planner able use annotation provide appropriate help user unlike Figure 3 practice information store formal representation Annotations create planner additional goal concern maintain knowledge state user add user original job goal produce nonexecutable plan step nt actually change world state represent knowledge necessary present rationale plan behavior user add goal inform user plan intent original goal planner anticipate user trouble create plan annotation plan system position inform user operation plan machine demonstrate difficulty System add goal type create plan incorporate information give maintain consistent interface style handle planning execution monitor paradigm combination planner monitor constitute problem solver perform task planner model user state operation behavior interface goal representation sufficiently robust allow kind goal represent planning mechanism sufficiently sophisticated create plan account presentation style execution monitor detect analyze state machine inference state user permit planner use plan annotation conclusion argument important particularly light current enthusiasm intelligent interface expert system begin thesis multifunctional machine future benefit interface free user burden having know great deal machine function time experience prototype expert help system provide clear message build interface strong user model fail support operator learn problem solve result impotence user experience difficulty 1 recover trouble 2 provide machine datum require obtaining assistance 3 learning mistake avoid trouble future discussion planner indicate system model fundamental operation machine planner handle user generate disruption plan interpret user action context problem solve process planner deal user integral component machine require extend role planner include plan user knowledge state robust execution monitoring inform interpretation user action develop useful user model message point clear regardless complexity planning mechanism intelligent system value end rest strength user model acknowledgement author wish thank follow individual valuable contribution idea discuss issue Lucy Suchman Tom Moran Austin Henderson Pat Wall CH186Proceedings April 1986
22,1989,ABSTRACT student perfonne variety task statistic text present conventional print fonn text browser SuperBook Remde Gomez Landauer Students SuperBook answer search question correctly write high quality open book essay recall certain incidental information well student conventional text subjective rating overwhehningly favor SuperBook advantage SuperBook appear particularly strong question anticipate author organization text introduction People long hope computer base system facilitate use information voluminous write material eg Bush Nelson speculate possibility find information talc nonlinear path computer base text hypertext Engelhart English demonstrate early system allow user traverse text variety way past year witness immense surge development hypertext system Conklin review 18 hypertext system compare dozen different feature reasonable guess 50 l00 system exist presently overlap set feature implement different way Hypertext system subject panel discussion conference special journal issue unfortunately hypertext system evaluate actually improve human performance compare conventional print material previous comparison paper versus online text generally favorable online version typically reduce reading rate impose interface problem direct comparison hypertext paper material date Hyperties system study show Hyperties typically result long task completion time gain accuracy compare paper material user prefer hypertie system paper present study behavioral evaluation demonstrate superior utility desirability hypertext like system suggest property system important condition SUPERBOOK Design Concepts SuperBook fit conklin description structure browse system SuperBook take input exist document standard text format language present text multiwindow display search navigation enhancement browse system similar SuperBook include SAM Document Examiner computer base enhancement develop studied laboratory incorporate SuperBook rich indexing Research show people experience difficulty find information large text database root problem user try find information word different select index infonnation rich indexing piece infonnation eg topic section document reach word rich indexing related technique adaptive aliasing test favorable result laboratory study prototype system second SuperBook enhancement type fisheye view large amount text present severe navigation disorientation problem user fisheye viewer counter problem display hierarchically structured information accord degree interest function fisbeye viewer permit user examine detailed low level information focus display maintain successively global high level information display periphety Users Perspective SuperBook consist document preprocessor program manage display interaction preprocessing phase onetime fully automate operation Computer readable source text standard text markup language Troff Scribe lnterleaf analyze rich indexing initially implement text indexing document fisheye view Table Contents generate automatically format document heading preprocesse complete user browse document interactively SuperBook function select mouse search word enter keyboard select text display Text window search scroll page way SuperBook configuration study report consist window SUN workstation fifth window present question user figure 1 function Word Lookup function find occurrence word word stem combination word enter user Table Contents window present dynamic fisheye view hierarchy topic beading document Table Contents expand collapsed varying level detail chapter section conjunction Word Lookup Table Contents show distribution search word chapter section document Search word occur topic beading highlight Table Contents display Page Text window display part text select user user S Interactive Environment Data Analysis cl Contents Preface chapter 1    Hoa Beat Lottery chapter 2 Tutorial Introduction S 3 chapter 3 Baste Use S 2 31 Baste Concepts Epresstons mil 32 Invoking S 1 3 3 S language 34 2lfl tn S 35 mij analyst 0 36 graphic 0 37 case study chapter    Graphical Methods tn S 1 chapter 5    Advanced Use S 1 chapter 6 S Macro Processor chapter 7 Data analyst S chapter 8 Presentation Graphics Reports Appendix 1 Function Macro Oocunentatton Expand jcollapsej jFtnd wordHove focusj 01str1but1on word datum stnjcture    presston find sactton dtscusstng tha baste concept value expression canpltcate ts datum structure lyoai lookup eadata structure ala structure chapter 3 Baste Use S 31 Bute Concepts Expressions lIJil mEJ S ts organized name self describe dataset keep awby s tn specia1 UNIX di rectory retrieve autanattcally name tn fundamental edl1 vector sequence EIJ1l value nunber logical value character string unlimited variety EDlI structurei build fran vector Sane structure recognize 111any function 1n s example matrix array time series Fundamenta1 philosophy S ts tha untfonntty expression s Tha value hoolever canpltcate ts Thts Includes run s p rtthnettc high level statistical function far language concern ajjifiiM appear argunent operator function course particular function generate error tf tt interpret argunent sensibly proceed eample shoa hoa uniformity lead fleible general eij1l analyst enter word occurrence data structure upresston s case sensitive language correspond upper    loaer case letter dist tnct tn name funct ton dataset tha PagejFtnd word find section Resove look word data structure    prasston       N Figure 1 SuperBook display show result expand Table Contents look tenns display text contain search term select chapter section Table Contents ask context surround previous occurrence search word active search word highlight automatically text display additional function implement SuperBook evaluate study describe function include adaptive index latent semantic index annotation facility graphic display facility implementation version SuperBook study evolve original prototype basis early evaluation change implement improve speed accuracy search information original Franz Lisp version reprogramme m c greatly reduce system response time method highlighting change effective user strategy identify evaluation study easy use BEHAVIORAL EVALUATION analysis SUPERBOOK study examine variety task evaluative measure structured search task represent common problem user having find answe spec question reference text wtth wch use 1s completely familiar user start wtth question correspond way author organize material user know remember word author write target material open book essay represent common constrain wy reference document student professional look material different place document purpose compare write information historical event legal case technical specification market datum Incidental learning task assess useful additional information reference document eg topic structure common example user acquire perform typical task explicit direction attend additional information subjective rating assess user reaction form content documentation structure search task explore effect factor mention commonly influence difficulty find information document factor user question correspond author organization material evaluation half search question contain word cue user topic head contain target infonnation half factor user know exact word author write target infonnation evaluation half question include word take text neighborhood target half hypothesized search perfonnance conventional document depend topic heading cue search SuperBook feature conventional document simplify search user know appropriate topic head table content list author topic heading b author topic heading emphasize text use white space bold print page header c word author topic heading likely appear index word randomly select text common feature effect emphasize organizational structure author give text Table 1 Types Search Questions word Question take Example Search Question Text heading find section discuss basic concept value expression complicated data structure Text dataset murder contain murder rate 100000 population find section say state include dataset heading find section describe pie chart state good mean analyze datum find section describe thing s print pictorial output word boldface take text italic take heading note highlighting presentation question user Table 2 Proportion Correct Responses Form Documentation SuperBook Print word Question take text head Text head Mean Types Adjacent boldface pair column differ reliably form ofdocumentation SuperBook user need wolk author organizational scheme order access information particular Word Lookup function wolk word document word refer topic head descriptive phrase example word neighborhood target information good search word user conventional document SuperBook user expect difficulty search information depend know exact term author present information mean search conventional document SuperBook document easy user reformulate question think synonym order match word author expect open book essay reflect relative ease search information conventional document SuperBook SuperBook facilitate find useful information SuperBook user include information essay compare conventional document user Method Source Text statistic text S Interactive Environment Data Analysis Graphics study S manual select size 562 page table content index similar textbook document Subjects background statistic recruit easily source text available Troff form search question set search question write represent crossing head word text word factor describe early question type generate target information chapter S manual Table 1 Training tutorial user give tutorial introduction SuperBook portion Texas Family Legal Code text tutorial require user try function SuperBook conclude practice problem typical user complete train approximately hour Subjects Users 20 university student complete course statistic procedure experiment consist training session follow evaluation session user initially wolke SuperBook training tutorial assign randomly wolk S manual documentation conventional print SuperBook form search problem type give evaluation session user wolke question type number section thought contain target information allow type nt Know question unable find target information 15 minute search final session devote open book essay question user difficulty interpret second essay question essay score ask user compare related function s system follow essay user ask rate documentation S system likelihood additional course statistic final task assess aspect incidental learn Users ask recall chapter heading command dataset remember describe operation randomly select S system command Results Discussion Search performance SuperBook produce overall advantage search accuracy compare conventional documentation 75 vs 62 Fl181850 p001 way interaction document type head word cue text word cue reliable Fl182218 p001 expect performance print document depend topic heading cue SuperBook performance SuperBook produce accurate search type question advantage SuperBook reliably p05 great type question include word take text neighborhood target information conventional documentation tended produce high search accuracy SuperBook question contain head text word lOp05 SuperBook user give few erroneous response p001 overall way interaction reliable p05 analysis conventional documentation reliable advantage error rate type question Users conventional documentation give 15 minute search 8 question SuperBook user give 5 question table 3 Mean Search Completion Times Minutes Form Documentation SuperBook Print word Question take text head Text head Mean Types Adjacent boldface pair column differ reliably form ofdocumentation SuperBook search time average 54 minute compare 56 minute conventional documentation Fl1810 way interaction table 3 reliable fl181014 p005 SuperBook result reliably p001 fast search question include text word cue conventional documentation result fast p05 search question include text head word cue Open book essay essay give statistician expert S system statistician develop method score rate copy essay strip identify information essay write SuperBook user judge superior write user conventional documentation average score 58 vs 36 7 maximum t18314 p01 second scoring method fact checklist develop point give fact include essay essay score blind reader work checklist Scores reliably high SuperBook user average score 88 fact vs 60 15 maximum t18243 p05 aspect write include essay length time spend answer question differ reliably subjective rating SuperBook user rate documentation easy use print manual user average score 58 vs 31 7 point rating scale t18480 p01 SuperBook user give reliably high rating S system p01 affect statistic follow experiment p05 Incidental learn SuperBook user recall significantly chapter heading user print manual tl8318 p01 result probably fact Table Contents window continually display chapter heading SuperBook user difference incidental learning approach statistical significance p10 SUMMARY ANO FUTURE direction kind search question SuperBook produce advantage conventional documentation statistically reliable practically significant user give question include word take appropriate topic head text vicinity answer SuperBook user 10 40 advantage finding target information give open book essay question require gather information single page text student SuperBook write essay score average 61 high write student conventional documentation ease use overall superior performance SuperBook probably lead user enthusiastic subjective rating SuperBooks advantage conventional documentation appear great deal question anticipate author organization document search question cue appropriate location author topic structure include word take text SuperBook large advantage search accuracy search time compare conventional documentation similarly essay question require user search documentation way correspond author organization material SuperBook prove advantageous study include essay question conduct pinpoint reason SuperBook advantage possibility SuperBook user find relevant information different place dynamic highlighting tailor user question cause relevant infonnation include essay SuperBook allow user access infonnation know author organizational scheme require user know author word question construct eliminate replace synonym word neighborhood target infonnation SuperBook produce poor search perfonnance conventional text SuperBook user reliably error question take long tend search find target information user conventional documentation SuperBook user approach question type Word Lookup find occurrence word question word occur S manual word select occur near target information case SuperBook user spend time effort track false lead response finding future work SuperBook attempt deal user question phrase term document author use refer target information estimate situation occur approximately 20 question user try information document database approach involve programming advisor detect strategy employ user likely productive interesting approach employ Latent Semantic Indexing LSI computer base enhancement explore laboratory LSI possible user sense score part document user search word different author write
23,1987,abstract viability provide adaptive user interface demonstrate system identify difference user order provide purposeful change user interface adaptive system objective indicate termpurposeful research report take important step forward demonstrate adaptive system build regulate behaviour assess adaptation successful meeting objective Resume La viabilite de construire des interface dutilisateur adaptive deja ete demontree De tel systeme identifient les difference entre utilisateur afin doffrir la po    sibilite de modification dirigee au niveau de interface des util    isateur le systeme adaptif ont des objectifs comme lindique le terme dirigee Les resultat de la recherche present ici constituent un grand pas en avant car il demontrent la possibilite de construire des systeme adaptif qui regularisent leur propre fonctionnement en evaluant le succe de leur adaptation visa vis ce objectif 1 introduction work report perform Adaptive Intelligent Dialogues AID project aim project investigate efficacy provide adaptive user interface build tool support production interface early work aid project produce adaptive user interface frontend exist electronic mail system adaptation dimension system include contextual adaptation allow user navigate gracefully task ii level guidancefeedback iii change base user knowledge similar system adaptation bring user model base plan recognition heuristic reasoning progress related work need adaptive system regulate performance reflect effect behaviour identify desirable feature system order evaluate viability building adaptive system regulate behaviour introspection study perform aim replicate finding Greenberg Witten conjunction investigate tradeoff adaptation consistency recognise important issue give user adopt strategy static system adopt interaction adaptive user interface second experiment test efficacy provide adaptive system regulate adaptive behaviour see necessary progression research adaptive system reason firstly adaptive system suitable user secondly provision static user interface occasion offer good user interface experimental procedure material experiment base work Greenberg Witten 2 related Work Greenberg limited study telephone usage pattern find normal usage 60 number call dial previously actual pattern usage close Zipf distribution give history individual past usage possible estimate probability number call follow Greenberg Witten build system allow access directory telephone number hierarchy menus intention reduce mean number keypresse require retrieve item directory need conventional menu system system simply split directory range cover approximately equal number entry Greenbergs result suggest well approach present item level hierarchy corresponding chance select history individual previous call approximation Zipf distribution possible estimate probability selection item directory result probability distribution split equal part subrange appear menu subrange select turn split subrange equal probability eventually certain item have sufficiently high probability selection appear subrange select terminate search high probability associate item early available selection Greenberg Witten test system static datum individual actual telephone usage 122 call prime system subject require select 38 item experiment selection comprise practice session result experiment follow 1 reduction 32 mean search depth static adaptive system 2 reduction 35 time selection difference time menu system 3 40 reduction error menu combine reduction mean search depth 60 reduction error selection 4 subject prefer adaptive system static apparently short search path repetitive name lack need memorise frequent appearance give range delimiter 3 Limitations result appear adaptive directory system highly desirable certain limitation approach outline system notion success system internal objective reduce mean search depth success rely assumption individual pattern call approximate Zipf distribution individual rarely call number unlikely benefit change menus hinder traverse menus necessary static system Greenberg Wittens system continue change menu monitoring effect mean search depth system monitor success failure adaptation refer un moderated adaptive system second limitation experimental procedure Greenberg Witten adaptive system effective reduce mean number menus traversed retrieve item turn desire effect improve user performance item retrieve quickly static system difference time take scan individual menu system experiment consist large number trial expect frequently select item subject static system familiar menu memorised sequence keypresse reduce mean time menu mean time selection Users adaptive system unable improve performance way content menu vary question ask improvement performance time static system equal great improvement performance reduction search depth adaptive system answer yes gain have adaptive system Experiment report address question 4 Requirements possible identify certain requirement adaptive system firstly desirable adaptive system monitor success term achieve internal objective notional world Greenberg Wittens system adapt include individual pattern call fit Zipf distribution introduce internal monitoring feedback system allow maladapte place unexpected environment adapt expect environment achieve give system fall strategy invoke meet internal objective allow perform bad static system essentially use feedback allow system adapt appropriately number environment make system notional world well approximation real world second requirement sufficient experimental work carry ensure criterion success system determine achieve objective appropriate example directory system successfully reduce mean number keypresse require find entry little use reduction result fast retrieval entry consideration give extra processing involve provide adaptation improvement adaptation nullify delay system make adaptive change 5 implementation 51 Feedback aim build system monitor performance cease change adaptation have negative effect mean system aim way testing objective reach assumption user performance improve reduce number menus traverse Feedback provide compare mean value metric base value point time adaptation consider unsuccessful particular point time mean number menus traverse great base value decide call individual serve prime system adaptation begin base Greenbergs finding repetition rate 60 stabilise call priming period system present static hierarchy simple matter note mean search depth call use base value comparison mean search depth achieve adaptation value achieve practice static hierarchy way target value set individual base observation actual usage static system 52 Failure circumstance adaptive system perform well nonadaptive designer simply anticipate particular type user come contact system case essential performance adaptive system bad nonadaptive requirement meet adaptive system well overall term perform well nonadaptive method meeting requirement system switch fallback strategy adaptation turn detrimental necessary strategy good nonadaptive system previously state menu system simply split database subrange contain equal number entry equivalent assume entry equally likely select menu system describe split probability distribution dividing database directly fallback strategy simply assign equal probability entry directory split distribution ensure system perform bad nonadaptive 53 Evaluation selection system keep log reference number select item telephone number allow replacement database desire time take selection number keypresse version software experimental work record number error incorrect selection search 54 MMI issue ensure menu present acceptable format guideline provide Greenberg Witten follow display menu cover subrange order set datum necessary beginning end range end range begin require upper bind subrange plus low delimiter menu low bound subrange plus upper delimiter menu Greenberg Witten find format quick scan show low delimiter menu combine upper bind subrange format show figure 1 6 experiment Greenberg Wittens result clear preference adaptive system period 30 trial feel experiment hlld carry large salt 1     Sault 2     Chris Scott 3     Sevoir 4     shah 5     Shepard 6     Simpson Figure 1 Menu Format number trial user static system familiar menu frequently select item able memorise sequence keypresse require retrieve certain item allow improve performance time intention find improvement time sufficient outweigh initial benefit adaptation 61 Method subject unpaid volunteer compute experience experiment twolevel adaptation type mixed factorial design counterbalance order effect software implement Sun Workstation DEC VTlOl terminal input output subject give print instruction verbal explanation format menus database Data Logics internal telephone directory contain 432 entry internal telephone system keep record call enable use datum individual actual telephone usage experiment Analysis show pattern call approximate Zipf distribution 62 Procedure subject expose menu system adaptive system describe system adaptation inhibit provide static interface ensure difference menu content change system prime 100 call subject require 100 selection 10 comprise practice session item menu subject give instruction use system trial search display subject pressed return menu present user select subrange contain supply Subjects selection wrong choice select correct subrange cause menu display pro cess repeat supply unique entry selecting menu item terminate search telephone number display trial begin 63 result mean number keypresse require retrieve item adaptive system 32 compare 40 static system series subject t test carry scan time error rate significance level 1 result analysis describe Scanning time trial trial 11 40 performance adaptive system significantly well static system subject trial 71 100 performance adaptive system significantly well subject scan time menu trial 11 40 performance adaptive system significantly bad static system subject trial 71 100 performance adaptive system significantly bad static system subject Error rate find significant difference error rate system trial menu level preference subject prefer adaptive system prefer static system subject express preference 64 discussion adaptive system effective reduce number menu user traverse retrieve item 30 trial time take scan individual menus similar system performance adaptive system well static system replicate result obtain Greenberg Witten time user static system time scan individual menus user adaptive system presumably user static system study menu closely content change result performance 30 trial well adaptive system 65 Conclusion Users static system able benefit consistency interface performance improve time improvement sufficient outweigh benefit gain 20 reduction mean search depth adaptive system 7 Experiment Greenberg Witten show give pattern usage involve repeat access item directory user mean search depth reduced static system entry access change menus cause increase mean search depth system monitor mean search depth cease adapt rise target value wish work practice long term degradation user performance result initial period counterproductive adaptation 71 Method different subject second experiment datum individual call take telephone system log repeat remove datum describe flat Zipf distribution adaptive system monitor 30 selection prime period adaptation beneficial adapt mean search depth target value datum contain repeat selection mean search depth rise target value result user adaptive system present change interface trial 1 30 static interface trial 31 100 72 result mean number keypresse require retrieve item adaptive system 401 compare 400 static system series subject t test carry scan time error rate significance level 1 result analysis describe scan time trialmenu result time trial time menu trial 11 40 performance adaptive system significantly bad static system subject trial 71 100 performance adaptive system significantly bad static system subject Error rate find significant difference error rate system trial menu level Preference subject express preference particular system 73 Discussion period adaptive system make change cause increase mean search depth performance static system well Mean search depth increase user pattern access approximate Zipf distribution initial period adaptive system recognise cause increase mean search depth switch fallback strategy user adaptive system present static interface remainder experiment result increase mean search depth experiment adaptive system 03 allow user adaptive system attain level performance 30 trial reach static system 74 Conclusion adaptive system able employ feedback monitor success adaptation cease follow strategy cause increase mean search depth occur performance adaptive system bad static system 8 discussion experiment show search depth sufficient measure user performance assumption reduce mean search depth result reduction mean search time justify need provide feedback measure correlate closely user performance obvious answer monitor time take selection unfortunately present problem sort firstly difficult find base value comparison find base value mean search depth simulation provide sample user pattern call currently 100 selection prime system find base value finding base value selection time require user spend time get familiar system performance stabilise second problem arise collection performance datum time take individual selection depends number menus traversed load computer system user level concentration motivation factor cause variation mean selection time effectiveness adaptation problem monitor user performance likely encounter repeatedly build adaptive system idea provide feedback adaptive system monitor success come consideration natural adaptive system animal change behaviour response environmental trigger observe effect change environment cease behave way bring close achieve objective second experiment show possible adaptive computer system behave way system aim ensure well static system reach target 9 Conclusions number limitation work report identify firstly scenario user refer directory telephone number memorise frequently number unrealistic realistic system direct dialling case telephone number display secondly subject require complete experimental task abnormally repetitive manner finally adaptive system require item datum order prime practical circumstance datum collect interactive use system provide user opportunity benefit consistency system adaptation interface commence Nonetheless work provide number important insight potential building self regulate adaptive interface tradeoff consistency show user benefit consistency static interface improvement time attainable static system magnitude improvement change occur adaptive system show possible adaptive system employ feedback adaptation have negative effect system cease adapt implication provide adaptive system feedback appropriate measure performance suitable target value measure ensure perform well comparable static system self regulate adaptive system attractive predefine user population 10 acknowledgement like acknowledge help AID project team member Standard Telecommunications Laboratories plc British Telecommunications plc Data Logic Ltd Heriot WattStrathclyde MMI Unit Essex University preparation paper like acknowledge support provide Alvey SERC partly fund AID Project
24,1986,abstract technique describe user knowledge software package elicit mean series photograph depict system variety state resultant verbal protocol codify score relation way system actually work illustrative study describe probe administer twice 5 10 hrs system experiknce office product Vision number true claim elicit increase experience number false claim remain stable potential value technique output discuss evaluate citation datum necessarily selective give qualitative nature value particular study depend skill researcher provide insightful interpretation concurrent technique danger verbalisation actually distort normal operation cognitive process eg Ericsson Simon 1980 background researcher consider modification form volume datum capture eg Hammond et al 1980 method elicit protocol recent study employ user discuss system state OMalley et al 1984 1 Introduction Techniques verbal protocol analysis popular research tool behavioural study human computer interaction eg Mack et al 1983 typical example concurrent technique user ask think aloud course interactive session resultant verbal protocol provide important qualitative datum concern broad type user difficulty occur clue underlie cause datum important session log performance measure difficult interpret supplementary information concern user goal knowledge problem solve activity current verbal protocol technique origin basic study fundamental property cognitive activity Newell Simon 1972 present paper describe technique user knowledge system systematically probe present picture system variety state ask explain system state experimenter probe task knowledge precondition state outcome respect situation unlike knowledge engineer seek elicit content structure domain knowledge representation expert system verbal protocol technique develop methodology mature research technique laborious hour protocol rise example particular type small subset user wide significance relation user population difficult advan8eouskinpdopxproach number cue assist retrieval information human memory second technique focusse user knowledge inference base system property intention reduce contribution broad planning problem solve activity occur protocol actual user system interaction user probe set state sufficient knowledge elicit common theme permit application scoring technique derive text recall literature cognitive psychology index describe broad property user knowledge explore property change increase experience system relate measure user performance QWOO     0235 0075 2 HFIlHOD 21 Overall Design Study paper illustrate use prompt knowledge elicitation PKE context study user learn Vision product combine calculational wordprocesse graph window Dialogue Vision trademark VisiCorp CH186Proceedings April 1986 system mouse keyboard base dialogue area window provide linear menus prompt entry field study naive user attend laboratory hour session train test wide range task begin visit user train imitate command sequence videotape verbal commentary having imitate sequence practice time Training start basic task progress complex task session session training period follow performance test user complete basic task environment task complete time test administer different material performance datum test report Wilson et 81 1985 refer later separate performance test design assess recently acquire functionality generalisation untaught function administer course session interactive performance concurrent verbal commentary question experimenter user prohibit Figure 1 pair PKE test discourage separate collection verbal protocol specific function PKE test 8s administer end session end session represent roughly 5 10 hour interactive experience Sessions seven devoted test eg MacLean et al 1985 22 Design PKE Test test consist sixteen pair photograph construct test basic knowledge dialogue state occur particular environment seven include examine knowledge dialogue state directly experience knowledge window management procedure analysis present relate probe probe environment WORD GRAPH calc design sample knowledge level basic Vision dialogue level menu environment intermediate menu prompt level system request mouse keyboard action affect work area screen pair consist photograph essentially system state provide minimal contextual information working area screen contain little content Vision description function appear automatically mouse move menu item blank second photograph restore prompt incorporate illustrative content work area example form picture give figure 1 midlevel menu calculation environment case target selection VALUE minimal contextual information employ picture order elicit protocol concern dialogue task form content specific screen content eg try set number versus try update weather record 23 Administration Teat photograph present fix order mid level probe follow level prompt level Users give initial instruction position explain system friend instruction outline information seek state arrive consequence target selection prompt form subsequent menu prompt sort task user try perform initial instruction show photograph description unfold experimenter prompt additional information seek clarification context sensitive manner productive information elicit experimenter turn page version context ask want add change procedure repeat pair test take roughly half hour administer dialogue user experimenter record procedure material order administration test session session 24 Anelyeie Protocols Young 1984 point Knowledge substance probe quarried task sort protocol content determine represent user memory inference base knowledge furthermore actual verbal exchange modulate user interpretation task knowledge domain application information photograph dynamic user experimenter dialogue pair probe regard provide statistical sample user repertoire system knowledge point learn program test administer accordingly score procedure devise capture content form attribute knowledge express verbal protocol protocol reflect verbal style participant vary substantially superficial structure analysis seek represent propositional content addition protocol contain repetitious redundant information scoring scheme focusse essential core proposition identifiably different protocol particular pair photograph similar approach adopt Long et al 1983 protocol datum group discuss computer use present analysis core proposition regard implicitly represent claim system operation claim essentially propositional statement truth value relation frame reference general approach analysis text literature acore protocol standard summary Long Harding Esch 1978 present procedure need sensitive fact protocol form dialogue frame reference way Vision system actually uorke follow fragment protocol collect session response probe show Figure la illustration key phrase core claim derive underline e happen push select button S ah chance enter numerical value yes box cell screen sort calculation environment table information want total enter formula think value e tell command position s enter select enter calculation menu e tell sort menu line prompt come selected value S yes enter value select think list possible symbol choose formula enter cell e line symbol S identify core claim codify term current topic eg prior dialogue step form claim status context result codification protocol illustrate follow Germl pnmpt WI entervalu nTRm 0 wp ii talc TIIlHJEiN m enterformnlae TImE 0 Priordialcgtmstep m enter XTlRUEN Dialogue u3P vEhtopmllpt TImlE 0 PI enter value TITFm 0 PI ss1ectfnnlopt5on titrle 0 keei list symbol TITRlJE0 Dialogue nap symbo1list3xdlim NIIFALSE collapse later initial categorisation base eighteen different form claim concerned task express Menuprompt state associate task x eg enter value    MST different form represent property screen area WindowDialogue areawork area property eg WP    calculation window DAP    menu line 3 form specifically capture constituent dialogue area Dialogue area include menu item Xprompt X eg PI    prompt include enter value remain concerned sequence action derive follow combination Menu selection XWork area action x RESULTS New Menu Y prompt YEew Work area state Y eg ESM    select enter give current menu Wenu selection XWork area action X FOLLOWEDBY Menu selection YWork area action Y remain category cover claim form Prompt REQUIRES work area action X Claims classified target nontarget information TINTI example givqn probe show figure 1 user comment range function available context relate active menu selection classify nontarget information order compare protocol session target claim classify old 0 ap eare protocol session new NP appear session miss M occur session categorise claim assign truth value context verbal exchange truth value employ true false Inexact Indeterminate claim assign True accurately describe system operation claim assign false system clearly work way Inexact claim clearly true false example category user state x occur Y miss reference key intervene step actual sequence carry ch186proceeding           April 1986 finally category indeterminate user response explicit nt know eg nt know command issue appropriate form claim ambiguous eg statement 1ilgures appear assign work area dialogue area 3 RESULTS user nj ne probe pair administer twice yield grand total 982 claim order datum focusse common theme nontarget claim drop analysis likewise claim redundant redescription target selection having subsequently deny context probe claim remove leave 709 target claim analysis 726 provide response pair session 383 session mean rise output target claim session statistically reliable Wilcoxon T3 pC05 tail ninety percent claim elicited reponse member pair phot0graphs claim second version a1 e treat separately analysis rise total number claim session significant increase number true claim Yilcoxon TT pO5 tail number false inexact indeterminate claim differ reliably accordingly proportionately cf claim output accurate session session table 1 show output true claim rise broad cutcgorie system knowledge task claiii n fact additional explicit claim present session regard presuppose great task knowledge rise total number true claim statiatjcally significant analyse material Wilcoxon T35 pO5 tail identity claim session explicitly compare o berall 54 claim session neliM claim 46 old claim elicit session average 324 trae claim session 15k new claim 170 old claim new claim offset average 78 true claim elicit session miss session result net gain show Table 1 comparable figure false claim 29 old 61 new offset 59 miss claim result net gain loss point count new claim include claim topic change status eg inexact true vice versa number old claim represent conservative estimate real overlap content protocol session number true claima elicit Prom subject average sessiono correlate datum oher assessmentassessment proceduresprocedure ofof bothboth knowledgeknowledge andand inte ractiveinte ractive tableTableOl Users display accurate interactive performance demonstrate accurae knowledge system performance accurate 4 nrscussoli PKE technique design elicit knowledge inference system operation Protocol collection constrain set probe sample level menu hierarchy environment WORD CALC GRAPH system study probe elicit large number claim common theme Subsequent encoding categorisation claim yield number clear quantitative pattern lore true claim elicit session zession give nature leariil thn fact number true chime rise surprising period accuracy ard time measure show improvement standardi ed ierformance test Wilson et al context shculd remember CH186Proceedinas April 1986 chenee performance necessarily accompany change verbalisable knowledge eg Broadbent et al press addition use scorlog technique oermit actual distribution kncledqe development assess true claim increase c1 egorie claim environment level menu hierarchy session number new true claim offset number miss claim apply environment level hierarchy confine particular environment level user verbalisabic knowlc dge nf system operation advance n broad pattern false claim markedly different period learn reasonably expect false claim decline Tn fact actual number false claim remain stable administration test roughly false claim elicit session present protocol elicit session claim elicit session miss protocol session offset equivalent number new false claim scope present datum balance new missing claim consistent apply environment level menu nierarchy fact s proportion false claim recur consistent prior observation base protocol example note user develop erroneous knowledge fragment false inference relatively resistant subsequent modification eg Hammond Barnard 1984 great proportion false claim present protocol session novel novel claim arise number reason Ore detailed analysis suggest false claim spite know fact accurate probe example user accurately identify prompt state editing cell spreadsheet true claim elicit concern cell work area action concern task prior menu selection nearly focusse entry editing material confusion menu path understandable term gross similarity probe elicit true claim user accurately describe prompt state entry apparently access knowledge forestall false inference concern edit prompt number true claim rise underlie knowledge claim derive remain compartmentalised functionally inaccessible novel context course system operation user generally arrive edit prompt context having select edit function general point false claim emerge source information evaluate realisation example face level menu spreadsheet enter option active 51ser state selection cause menu appear queried item menu user generate File Words Annotate Print context Words indeterminate unclear intend mean generic specific false clearly related semantic enter Annotate menu item graph environment File Print present main menu line show probe previous example user recruit available information partly probe forestall false claim user knowledge clearly include fact Annotate menu item environment occur incorporate mental representation information access incomplete knowledge fragmentary grasp relationship wide system prove characteristic learning menu dialogue normally require information actively encode recall cf Hammond Barnard 1984 fact number true claim rise number false claim remain stable prove confine early stage learn Asymmetries knowledge elicit real user implication formal model design predict system acquisition eg Kieras Polson 1985 model focus relatively ideal representation knowledge require execute task prediction time contrast protocol datum tend emphasise play ideal use knowledge generate false inference error general approach seek codify claim empirically establish distributional property bring key feature protocol analysis explicit model close assumption embody representational model find support codify protocol example response graph probe user tend describe major step menu selection omit
25,1985,abstract development new interactive graphic application considerable effort spend design user interface easy use portion application complete typical potential user bring help evaluate interface give sample task short introduction application effort complete task observe videotape method evaluate user interface provide development staff bit valuable information Changes testing include subject second time paper describe evaluation method purpose point problem area interface verify change improve user interface introduction development new engineering application significant effort devote designing user interface application user primarily structural engineer skilled finite element model expect knowledge computer interface user friendly possible help job force learn lot information specific application program design user interface development group spend lot time try anticipate user want expect application large information gather user comment predecessor product idea gather reading article human factor new idea consider design Interaction Conventions document write review people inside outside project base work program design implementation dialog graphic subsystem rest application proceed build base application finish user accomplish simple finite element meshing task decide try evaluate user interface actually work application long way release plenty time need change benefit anticipate testing user interface real user involve test provide different viewpoint see development process difference crucial evaluate human computer interface developer try find problem pretend user substitute human factor test real user test enable developer step view system else eye mental exercise surprise person uninformed bring testing provide valuable information user like nt like overall system like dislike predictable surprise inevitable important benefit testing provide chance change thing find misleading confusing application release field make good impression well try change product CH 8 5 p ROCEED N G S APRIL 1985 Kind information need Tests basically want interface work place communication break kind interface problem deserve attention specific thing focus want system anticipate user train thought system easy use require user rearrange thinking pattern user gets lose need know exactly lead wrong direction word message misunderstood basic concept present familiar term etc different possibility require entirely different corrective action need note problem time encounter user chance confuse strange encounter time familiar eliminate initial confusion big difference user information useful relate user react specific feature design example help feature like know context use important ascertain feature appropriate time testing help point concept stress documentation training comprehensive finite element modeling program complex possible intuitive order introductory documentation minimum like include item user need start recover error Description Evaluation Method step method find suitable subject test case need people finite element modeling job fairly regular basis subject familiar similar application well criterion subject see demonstration system test application feel necessary short introductory document subject read sample task attempt mention intuitive application complex application electronic mail system need introductory document scope small document exist short possible user feel bombard information subject attempt use application accomplish sample task sample task simple interested watch subject find way application demonstrate knowledge structural engineering subject ask talk aloud thinking interact application stress observer help resort observer present know application order advice need rare observer work hard remain detached offering hint explanation design decision definitely allow change experiment training session subject lose nt question like think system expect help subject move offer real information observer responsibility prompt subject talk thought go session videotape application focus terminal screen second camera need necessary user position relative piece equipment terminal session interview subject offer comment ask question important record interview audio sufficient conversation usually contain insight available designer developer review videotape detail propose solution problem encounter review place soon possible test solution agree implement system testing repeat necessary satisfy designer important problem find realistically time ruoney run problem find correct large benefit result limited testing History Method method describe previous section base think aloud method document paper Clayton Lewis 1 variation method human factor lab country Disadvantages Method disadvantage method test stressful subject video recording equipment set situation somewhat artificial user ask talk aloud work Knowing watch subject APRIL 1985 conscientious nervous find subject relax short period analysis test result time consume videotape view beginning end context necessary interpret happen find nt need write transcript tape useful type application subject ask verbalize thought test possible compile meaningful data time performance type datum obtain separate test need Advantages Method advantage method make easy subject start wrong track listen subject comment watch enter command put person view videotape position empathy subject position easy find way prevent problem future empathy provide good motivation solve problem problem normally dismiss user error see new light designer willing change thing view videotape advantage method relate sort problem confuse familiar later type interface problem easily catch method interview analysis problem probably mention important advantage subject provide lot information interface problem interface tend obvious subject test substantiate datum Videotaping session offer advantage allow depth analysis have effect subject view tape observer stop tape time discuss situation continue interrupt far superior take note session try reconstruct situation explain Examples Method reader understand example require cursory knowledge syntax application application menu selection select function execute function parameter specify enter keyword associate value example SHRINK FACTOR 98 structural engineer modeling structure dimensional space need enter coordinate location option give coordinate entry usually XYZ value enter example create point function contain keyword location coordinate enter follow LOCATIONS XYZ 10 10 50 interaction example appear line position location abbreviate user input Keywords Example 1 example show figure 1 show subject confused error message specific enter coordinate location describe error XYZ entry complete specification subject left error message display sufficient understand miss KEYWORD REQUIRED specific location keyword XYZ create point POINT number enter create point SPEC LOC 10 10 50 SKEYWORD REQUIRED help list    l location LOC NUMBER point add set exit     MENU MASTER                create point STRAIGHT LINES CIRCULAR ARC LINES CUBIC SPLINE lines COMPOSITE lines coon surface COONS VOLUMES delete geometry     enter function MENU create point POINT number enter create POINTS SPEC LOC XYZ 10 10 50 1 point create POINT number enter create point SPEC figure 1 dialog sequence result error describe Example 1    original version c h APRIL 1985 convention follow application underlining item error asterisk suppose point exactly line error occur unfortunately subject realize nt sure line errore cover introductory document apparently stress subject try HELP feature contain information need problem HELP design quick list remind user keyword syntax available function feature EXPLAIN contain detailed information need subject think use realize need XYZ keyword subject problem sure input errored item accept early session try retype entire line quickly discover method work resort exit leave current function allow user choose new function subject reentered function start definitely long way error application accept input item error input little emphasis introductory document save lot confusion observe subject change try correct problem bring introductory document change emphasis information help EXPLAIN LIST INPUT add table figure 2 show new section document section error handle expand change far reach error message specific information application change explicit message include parameter errored list option available spot error occur line add HELP display tell user information available EXPLAIN design phase discuss unnecessary include test show need SIGNAL RESULT USE HELP Displays list parameter available current function syntax enter function list option function need EXPLAIN Displays description function description parameter function unsure usage function parameter function list INPUT list input collect current function enter default retain iireset INPUT parameter reset state function enter unsure status input example error input parameter check input enter terminator process input error input cause user want start function input exit input function discard user Ireturned menu level choose new function leave function processing figure 2 Excerpt application introductory document APRIL 1985 instead underline item error asterisk decide use upward point arrow subject assume asterisk separator attention getter position line see significant upward point arrow choose virtue pointing item error type error show figure 3 change face new situation subject trouble type error    M E N u     M    ST e r                   ii MENU MESH MENU property MENU APPLICATION DATA MENU PICTURE menu MISCELLANEOUS     enter function MENU create point POINT number enter create point SPEC LOC 10 10 50 serror input location parameter VALID option     XYZRTZRHTHPHPOINTNODE XYZ 10 10 50 summary processing 1 point create POINT number enter create point SPEC figure 3 dialog sequence result error describe Example 1    improve version Example 2 second example show figure 4 case subject unaware current state input view definition function enter WINDOW CORNERS keyword application wait value associate keyword subject decide long interested change view want function command need exit instead try enter new function error message read number expect acceptable input window corners parameter number subject forget start parameter shift thought new function want execute list INPUT command show current input include unfinished WINDOW CORNERS parameter subject think list INPUT view DEF enter view definition SPEC PICT 1 window corner create NODES S NUMBER expect PICTURES 1e91 PICTURE 11 RECALL view NEW PICTURE EYE LOCATION lLOC LOCATION lLOC VECTOR ROTATE SCREEN ROTATION plan view window WIDTH HEIGHT 2r window corner 2SCRLOC WINDOW AUTOMATIC ZOOM WIDTH height factors 2r SNUMBER expect figure 4 dialog sequence result error describe Example 2    original version change describe Example 1 help subject situation new version introductory documentation well chance remember convention help importantly new error message read number expect WINDOW corners parameter list valid option show Figure 5 situation clear begin information gather test negative design decision show easily accept subject example use meaningful name phrase menu item keyword prove success user accurate interpreting meaning name choose menu item number easily adopt especially name abbreviate convention abbreviation natural user error area immediately recognize APRIL 1985 view DEF enter view definition SPEC PICT 1 window corner create NODES SERROR INPUT window corner parameter VALID OPTIONS SCREEN location view definition function PICTURES l 9i PICTURE li RECALL view NEW PICTURE EYE LOCATION lLOC LOCATION lLOC VECTOR ROTATE SCREEN ROTATION plan view window WIDTH HEIGHT 2r window corner 2SCRLOC WINDOW AUTOMATIC ZOOM WIDTH height factors 2r information enter EXPLAIN END LIST LIST INPUT 1111111 current INPUT 11111111 view definition function PICTURES    current parameter    WINDOW corner figure 5 dialog sequence result error describe Example 2    improve version example show change application example choose illustrate way approach problem solve Conclusions Experience find evaluation method highly effective major purpose point problem area user interface verifying change improve interface effect confirm design decision work obvious nonexpert observer problem interface subject confuse possibly angry system expectation meet technique have subject verbalize thought probably important facet method general talk subject well think aloud method good way capture information user expect give point designer use information decide change example change propose question ask new error message help subject situation information gather method considerably guesswork answer question test verifying change improve interface involve new require test run change experience subject type error change recovery easy help EXPLAIN list INPUT appropriate place selection subject change bit test change desirable include original subject new people original subject practice test information interview test long ideal subject try lessen assign different sample task second time information gain second test note enjoy partly change help partly pleased know input make difference important try new subject addition repeat early one sure repeat subject success practice change new subject produce reliable datum new blood important application end tailor select group subject representative user population Variations Method possible collect information leave videotape tempting department equipment set time consume have videotape responsibility observer good note note difficult connect happen screen time test need run isolated environment noisy terminal room special arrangement probably need variation evaluation APRIL 1985 method practical videotape session run observer idea look Tests similar run subject instead arrangement subject discuss impression happen subject comfortable way talk subject observer try hard stay answer question situation realistic people probably solve problem easily work real situation person obvious drawback variation require twice subject use Method Different Stages Project Human factor test design stage project popular stage user interface prototype information learn real advantage basic design change practical implementation stage test specific gather information change possible dramatic difference interface testing phase change easy testing early time certainly late implement application test development complete method useful fairly minor change message difference confusion understanding probably type change expect worth stage chance release affect overall impression application give end user Acknowledgements human factor testing describe paper consulting help Sherry Kalin Control Data Corporation John Lovgren Control Data Human Interface group Microelectronics Computer Consortium MCC thank Anthony Berg help record experimental session
26,1987,abstract paper describe graphical interface application program interface base notion control panel control panel contain browsable list application parameter set function control application execution variety graphical knob gauge associate parameter permit fine grain execution control include animation application output control panel interface integrate framework interactive programming environment graphic image processing application integration imlortant feature overall interface design 1 introduction work report base general interface design present foundational work describe design interface general probern solve environment interface base concept panel provide language independent end graphic image processing application basically panel window contain parameter application program window user browse edit parameter value application execute Parameter modification panel send application direct execution output report continue work include new development interface design Specifically Panels control panel connect variety gauge knob panel user interact dynamically application control panel interface fully integrate interactive program development environment panel program development debugging addition endus interface b generate automatically text application program substantial qualitative improvement external format interface paper focus new aspect interface design integration program development environment reader refer thorough introduction panel concept include reference generally related work 2 Review Interface Requirements interface design response specific user requirement image processing graphic laboratory basic requirement tool standard good program develop meat environment interactive interface tool addition set significant requirement multi language interface development tool support application utility supply outside source vendor image device make infeasible require single language application addition language specific development tool need language independent user interface application program requirement common development environment scientific engineering application setting frequently clear distinction program developer versus program end user researcher develop application frequently switch program development mode end user mode good interface design set smoothly integrate language independent endus interface language specific development tool requirement environment relate manner application test sufficiently debug produce form mean    ingfu result testing stage frequent form interaction involve cycle continuous program reexecution cycle involve follow step modification input parameter modification typically number previous execution 2 reinvocation application 3 visual inspection graphicimage result 4 repeat cycle noteworthy recxecution cycle account substantial fraction overall program development time spend user environment lence substantial need interface form continuous program reevaluation convenient possible 3 Control Panel Structure Integration structure application control panel show iu figure 1 physically control panel window bitmappe screen contain follow component subwindow bottommost window scrollable list program parameter current value o left parameter view indicator subwindow specify form alternate view currently parameter indicator iconic depiction small gauge integer real magnifying glass array record zoonl etc immediately parameter control function window function select mouse click leave right function o run run program return control panel o RunDone    run program return control command interpreter o abort return control command interpreter run program o PanelHIp    display instruction use control panel o ProgHlp    display additional help entire program supply optional header comment program definition o ParmHIp    display help information parameter supply optional comment program definition parameter o aitview    select graphical alternate view parameter o incdee select incrementdecrement accelerator scalar parameter eg integer real incdec digital equivalent turni gauge user prefer o Zoom zoom parameter composite datum type eg array record o default reinstate default parameter value o history reinstate previous parameter value successive dick history ring o Undo undo changefunction subwindow control panel contain information status program detail help information currently select parameter error message n addition function control panel auxiliary window provide detailed control display program parameter auxiliary wildow select AltView Zoom function specific parameter auxiliary control include form knob gauge scalar parameter graph plot vector spreadsheet style acce matrix high dimensional array lurthcr alternate view detail show figure 2 control panel interface integrate multi language development environment describe fully 14 development tool typical available recent interactive programming environ    ment particularly environment multi language support development pascal class language Pascal C Modula 2 Fortran textual command interface multi language interpreter operate selectable base language choose support language noteworthy aspect command language interface basis standard programming language interface provide functionality command language recent application executive eg invent command language syntax semantic multi language environment application program map standard procedural abstraction currently select base language procedurefunction pascal function c etc way user interface application program single language heshe familiar development environment context control panel associate gauge generate base text application program Programs write special hook panel generation user supply help information form standard header parameter comment program text specify information appear panel information window appropriate type alternate view generate particular parameter base larameter datum type default set multi language ellvilolilneltt colvelitioll3 illtla    language conformabillty datum type atd parameter dlsciplile letaiJs tlet colvention cover final noteworthy feature environment handle distribute apllication stage program debugging application execute iuterlretively machine run commnnd executive panel production mode executkn alllication corallie stored alplication library conmand executive communicate coralileal alplicatkns remote tro    cedure mechanism describe example lence corallie application run ally remote machine potentially direct output imagin device tit screen control panel use visible difference application developer local remote procedure directive give language translator instruct generate interpretable compiled code internal detail distribution remain entirely transparent end user possibly performance characteristic 4 Example Figure 2 show typical screen configuration consist follow window counter clockwise upper right window program edit window contain    source text procedure definition kzi triangle program base algo    rithnl control pauel ezier lrogram default editor Theta camera angle gauge halhical view seven ezi parameter control panel screen graphical outlut lezier lrogranl interactive command executive Running command executive window interactive intertretcr support language user select tit language point new eommand enter currently select language indicate promlt asea C C etc selection affect language editor promlte temlate language slecific editor function remainder example use asca rom command window user mv enter normal ascal declaration statement 3o invokc procedure example user use standard ascal calling form procedure folkwe actual parameter list invoke hmner program execute normally return eonlri lo tim command excc completion 2 Alternativcl tt user invoke procedure actual lrnneter underspecified Underspecified mean thal actual parameter value leave blank specified question mark Invoking program 2 program invoke synchronously asyuchroously respect command interpreter detail underspecified aetual parameter list activate control panel program control panel activcthe program suspend point parameter bind user enter modifie browse actual parameter value subwindow panel non scalar larameter user zoom additional subpane paranmter component examlle window tit kwer right corner figure 2 zoom controlloiuts matrix parameter value satisfactorily enter user select Run function button control pane program continue execution return control panel cmllete n way user continue enter new paraneter value reexecute order inspect behavir program program run panel provide dynamic view execution reflect change output reference parameter panel form animate disllay coralarable visualization capability recent iwironnmnt eg Ill 8 l l figure 2 show seven alternate datum view lezi 1arameters wcrc select AItView fuuctkul control panel ase datum tyle select parameter AItView provide gralhical delietion datum addition user modify certain feature graphical view tyle slecific default editor figure 2 show default editor Theta control gauge tie key feature environment capability use alternate datum view input device display user position point device hand control knob turn hand reease button program immediately reexecute form control particularly useful control parameter program generate graphic display input parameter change panel result effect show immediately output image tit control pane knob effectively animate output display examlle turn knob associate camera tezier angle rotate display triangle capability use graphical datum view input knob possible control panel context Environments 18 11 allow graphical datum view associate arbitrary program variable environment display gauge useful input set breakpoint point gauge change value owever depend logic follow break input gauge sense control panel interface pro ride context input useful point parameter bind environment alkws use alternate view strictly kr display vari    Mle selection command edit window summarize kind use control panel consider sequence user interaction lead final configuration figure 2 1987 1 initially command edit window present invoke control panel user load invoke Bezier program command window tlere call form Bezier323030CPl indicate user use control panel enler 4th 5th parameter value parameter modify panel 2 point control panel appear gauge alternate view 3 inside panel user set ShowTriangle ShowGrid true select Run 4 procedure begin execution graphic window appear bezier triangle draw parameter 323030truetruecp1 5 experiment user select alternate view procedure seven parameter result row gauge etc figure 2 Note control panel configuration save environment avoid have reselect particular set gauge time control panel 6 particularly reveal interaction include rotate camera angle Theta Phi plus modify individual control point value array ControlPoints final display show figure 2 result having rotate Theta turn 30 degree 60 increase level subdivision 4 change ControlPoint stretch center triangle leave edge display 5 Conclusions paper present graphical interface application program interface design respond need application program developer provide convenient mean interface application parameter rapidly reexecute application direct parameter manipulation currently interface surround environment run SUN Microsystem workstation SUN windowe system Work presently underway implementation x windowe system wMch allow interface wide variety bitmappe workstation current user community consist student staff programmer UC Davis graphic image processing laboratory near future student workstation laboratory operational point environment instructional tool select class graphic image processing software engineering
27,1989,ABSTRACT John F DeSoi William M Lively Sallie V Sheppard Department Computer Science Texas University College Station Texas 77840 3112 ABSTRACT Application Display Generator ADG graphical environment design implementation embed system user interface major component Graphical Specification Subsystem GSS Lockheeds Express knowledge base software development environment ADG give nonprogrammer simple flexible method graphically specify presentation behavior embed system user interface ADG methodology arbitrary presentation attach abstract object behavior approach make possible provide unconstrained presentation intelligent user support rapid prototype flexible facility compose complex object User Interface Management System Visual Programming introduction recently user interface receive attention area software production need new technique improve overall development methodology user interface especially important highly visible user system primary criterion acceptance software system application user interface large portion overall cost especially apparent development embed system cost display development typically 10 40 percent overall cost Lockheed Software Technology Center Laboratory Software Research Texas University jointly develop Graphical Specification Subsystem GSS address design implementation issue embed system display uted direct commercial advantage acm copyright notice title publication date appear notice give copying permission Association Computing Machinery ultimately GSS able automatically generate independent executable module display operation entirely graphical specification GSS currently consist major component Data Flow Editor DFE Application Display Generator ADG DFE allow designer graphically specify flow datum application program embed system user interface ADG represent generation prototype display specification generation technology paper focus methodology graphical display specification implementation technique framework ADG TASK description embed system characterize computer system hardware software subcomponent large infrastructure addition type vehicle interface air motor space sea etc embed system type application tracking system process control system embed system usually design specific application little distribution development cost make expensive produce past embed system employ hardware orient user interface grow trend replace hardware device virtual representation display screen approach number advantage Layouts change software have physical change different interface test order find work good application understand interface build rapidly innovative display devise information display efficiently major portion task designing user interface embed system entail primary subtask specify appearance object interface presentationand appearance respond dynamicallyto change state short object behavior example presentation bar gauge use indicator consist line triangle end arrow indicatormay kind simple polygon figure 1 case designer decision kind presentation indicator appropriate particular application Specification behavior require designer provide detail indicator respond change input value gauge collectively presentation behavior refer dynamic interaction consider define communication protocol input output user interface    figure 1 Bar gauge different indicator presentation look closely dynamic interaction view follow type change graphical transformation exposure de exposure graphical transformation refer application translation scale rotation transformation combination screen image reference bar gauge example translation transformation apply indicator cause response new input Exposure de exposure concern dynamic behavior characterize presence absence screen image present time frame different screen image previous time frame update textual display turn simulate light filling pattern example type dynamic interaction specification DYNAMIC interaction Related Work key ingredient necessaryto specification dynamic interaction feasible programming develop flexible conceptual framework easy use sample possible methodology include Primitive Transforms    primitive transform refer scheme designer specifie behavior user interface entity explicitly term change mechanism describe graphical transformation exposurede exposure approach Morris second prototype GSS Concrete Obiects    dynamic interaction specify implicitly use high level object Hendersons trillium system design simple machine exemplify concept example Steamer provide define high level object development power plant training simulation Constraints    dynamic interaction govern designation constraint specify relationship user interface artifact Bornings ThingLab good example methodology Barths GROW environment employ constraint differ ThingLab use restrict form acyclic datum dependency strong separation interface application example    Peridot system develop Myers popularize methodologywhereby designer communicate desire interaction system example paper offer concept behavior abstraction framework graphical specification user interface Behavior Abstraction direct manipulation type user interface relatively small number behavior frequently large number presentation use typically good user interface design methodologywhich adhere theform followsfunction rule user interface object look similar perform similar function user interface object look different implement different function context research termfunction define application orient operation user interface object build perform note difference behavior function behavior describe user interface object operate function dictate object color change button press exemplifie behavior start engine result action representative function consider scroll bar volume control Macintosh direct manipulation environment figure 2 Scroll bar select window content visible case fit entirely screen volume control set loudness internal Macintosh speaker direct manipulation device user drag control box scroll bar knob volume control select percentage value scale object distinct function graphically present differentlywith essentiallythe behavior notion abstract behavior describe analogous concept object orient programming way object orient programming storage instance variable operation method define class abstract object effect particular operation instance object depend local storage instance behavior abstraction abstract behavior instantiate assignment graphical presentation example Macintosh user interface behavior abstraction slider instantiated jresentation Figure 2 Speaker Volume Figure 2 Macintosh volume control b Macintosh scroll bar Behavior abstraction offer benefit object orient basis behavior abstraction conceptually provide foundation composition complex entity object orient programming paradigm object different class combine create new class composite object similarly abstract behavior combine produce sophisticated composite object Macintosh scroll bar provide simple example slider abstract behavior previously describe combine button abstract behavior alternative way move control knob abstract behavior slider include method change presentation current value base know message button like arrow end Macintosh scroll bar send message important concept behavior abstraction like object orient programming reusable component easy produce instantiation behavior save later reuse specialized composed Libraries reusable instance create fast consistent fabrication user interface construction kit like Trillium build retain ability modify enhance system withoutprogramme finally behavior abstraction approach make relatively easy provide intelligent assistance default designer graphical instantiation abstract behavior implicitly define great deal information infer designer intention example presentation rail control knob scroll bar slide implicitly define translation limit knob size rail provide default maximum minimum value slider summary behavior abstraction provide good feature object orient programming paradigm need designer use conventional programming application display GENERATOR ADG currently provide testbe behavior abstraction approach describe ADG implement Symbolics Common Lisp new flavor object orient extension Common Lisp Symbolics 3600 series workstation figure 3 show example ADG program frame partially specify user interface GSS terminology user interface level abstraction display panel object display collection panel object background graphic panel provide mean group logically relate object display execute panel expose hidden demand allow effective use screen space provide information relative user current contexl Objects embed system user interface artifact focus paper specify Objects Specification Presentation specify object little work draw appearance Object orient drawing tool polygon circle cubic spline provide purpose designer select type abstract behavior create menu object give default appear screen label Current Object graphic draw screen associate current object permit nonmodal graphical editing place single display surface allow designer accurately judge visual relationship object display designer need click mouse pointer graphic belong object change current object object visible graphical representation current work object select menu Instantlating Abstract Behaviors instantiate abstract behavior user interface object designer merely specify role graphical object accomplish select graphic element cause selection handle appear click mouse graphic rubber band box selection tool press key produce menu part constitute attribute object Graphics select designer draw role object specify immediately single menu selection designer wish fully specify presentation return instantiate abstract behavior example suppose designer wish build bar type gauge designer select bar gauge menu abstract behavior default Custom Bar Gauge 1 appear screen ADG Current Object Tracking Display Current Display Tracking Display Special Arrange Display Edit Fill General Line Object Panel Situation ILONGITUDE M C1 t ePamel J Zoom o    friend o    Unknowns Situation Table Vehicle Type LEtude LongKude Speed Headin9 RDGcorwand Hete HIrdcopy Gas Mindou Figure 3 ADG display design time current object designer select rectangle tool place rectangle screen designer select role rectangle menu bar gauge part case rectangle classify bar gauge point information necessary create bar gauge specify user interface object test method immediately allow designer observe dynamic interaction object press key bar gauge send test datum cause fill like thermometer type gauge designer perspective extra consideration necessary specify object end user manipulate button slider example desire gesture initiate interaction rest require functionality implicitly define object precede discussion demonstrate specification basic form abstract behavior bar gauge refme produce wide variety bar gauge figure 1 4 part specify gauge include reference mark reference text label indicator designer choice presentation completely arbitrary example designer specify circle bar gauge circle fill like fish bowl fill water fill pattern clip boundary bar case bar close graphic line fill appropriate case scale indicator desire Figure 4 d ADG currently support primitive abstract behavior bar gauge analog gauge map table graph text field button slider Data Flow Editor DFE describe connection interface object application connection different interface object connection graphically form datum flow diagram approach intuitively please use ADG design display component use DFE wire component interface application module DFE call port represent label box dataflow diagram create connection user interface object ADG display DFE present user menu operation method applicable object interface display object appear dataflow diagram box object operation input output interface dataflow diagram use designate datum source represent datum sink user click sink source icon create link DFE Figure 5 exhibit simple example applicationobject objectobject b dataflow diagram Composition complex object achieve ADG help DFE Recall early example slider button ends describe mean produce scroll bar GSS button scroll bar produce independently ADG object connect DFE produce desire result DFE structure transformer turn button push message slide control message slider way output slider attach map table window scroll content map table figure 3 exemplify idea result straightforward powerful mechanism build complex obiect     E IIIIIIItnllnl Figure 4 Example instantiation bar gauge abstract behavior behavior abstraction approach enable ADG supply default provide intelligent assistance designer possible information designer specifie reference construct ease default example size bar pixel default maximum value gauge zero default minimum value system display intelligence sense designer classifie textual graphic reference text gauge ADG collect numeric graphical reference text label sort use large small maximum minimum value gauge Additionally specification object role abstraction relieve designer tedious task draw scale gauge Bar gauge tick mark example draw automatically designer specify bar gauge default infer attribute object overridden designer specifyingthe desire value attribute form conclusion experience ADG show wide variety user interface artifact construct basic set abstract behavior limitation aircraft horizon indicator effectivelya ball roll liquid example type object difficult impossible construct restriction identify important area research formally specify range type user interface artifact create extend approach include dimensional abstraction interface flexibility give designer raise important research issue behavior abstraction allow designer complete freedom choice presentation behavior sense example designer choose circle indicator analog gauge ADG happily oblige spinning circle axis response input instantiation analog gauge abstraction little sense Investigation warrant methodology aim provide designer high level intelligent support form user interface design assistance consistency check experience current prototype implementation ADG indicate behavior abstraction easy touse flexible paradigm empower nonprogrammer ability graphically specify embed system display behavior abslrac    tion paradigm share characteristic object orient programming prove provide substantial benefit traditional programming paradigm generalizable area graphical design specification outside realm embed system application acknowledgement author like thank Lockheed Software Technology Center funding guidance research contributor past present GSS effort Texas special thank Mark Lease help support
28,1989,ABSTRACT bayesian reasoning update subjective probability light new information notoriously difficult factor contribute difficulty lack mental model combine key parameter bayesian problem experiment conduct contrast representation Bayesian problem type diagram contingency table representation lead extremely good performance bayesian task advantage extend superficially dissimilar task alsq persist day training suggest graphic tabular representation lead flexible durable change way people think problem introduction update belief hypothese light new information daily research suggest poorly subjective probability judgment moment car year require major repair Suppose suddenly notice whine noise come wheel probability change way reasoning study psychological laboratory set precise information give precise answer solicit classic research employ diagnosis paradigm subject tell key parameter laboratory test prevalence disease question ask estimate probability person test positive disease cite example Casscells Shoenberger Graboys test correctly detect disease d 95 time disease present test sensitivity correctly clear 90 patient disease absent test specificity disease D occur person thousand prevalence disease probability randomly choose person test positive disease Research college undergraduate physician show numerical probability answer give condition wildly odd answer compute method derive Bayes Theorem typical answer Harvard physician 90 high correct answer 1 evidence suggest way improve probability estimation subject performance improve practice experience Drawing subject attention prevalence base rate improve performance supply concrete medical explanation abstract statistical parameter sensitivity specificity prevalence improve performance furthermore Christensen S7alanski Bushyhead find physician make decision real world set far responsive prevalence subject laboratory experiment Nonetheless manipulation remove error performance reduce measure performance experiment solely degree prevalence take account ignore subject use sensitivity specificity performance improve subject have superficial grasp bayesian reason subject merely average parameter notion subject improve adopt distinctly non bayesian strategy confirm finding Medin Edelson show subject learn experience prevalence account reliably use prevalence exactly opposite way certain experimental condition Christensen    S7alanski Beach argue subject behave bayesian manner fact rely perception memory actually compute answer base insightful awareness combine key parameter people fail achieve insight Bayesian problem help clearly failure task sheer information overload failure instead inability create appropriate mental model task situation maybe subject present parameter comprehend clearly parameter isolation lack way create ground interact failure able perform bayesian reason inadequate mental representation possible well visual representation bayesian task greatly improve reason 78 experiment perform way represent bayesian reason contrasted effect accuracy flexibility understand representation employ display Table 1 figure 1 3 figure 1 3 discuss extensively Signal detection curve figure 1 probability map Figure 4 discuss early SIGCID paper DISEASE yes SYMPTOM Yes Table 1 Contingency table representation Casscells et al problem Symptom equivalent positive test result number round near digit despite fact 90 nondisease 95 disease classify correctly clear label positive 99 fact nondisease low    Test Result high negative positive Figure 1 Signal detection curve representation Casscells et al problem horizontal axis show score diagnostic test population people nondisease diseased show distribution score diseased average higher nondiseased average vertical line indicate point test score high consider positive clear label positive fact nondisease interpret irregularly shape area precise estimation difficult test Result negative positive figure 2 Disease detection bar representation Casscells et al problem similar signal detection curve exception attempt display distribution shape seldom know second patient represent countable box irregular open area diseased patient 1000 display horizontal axis contain dot disease box s s s 1is s s s s s s ss ss s s s s s ss ssss ssssss s s s sss1ss s s s s ss figure 3 Probability map representation Casscells et al problem grid show 1000 people view person disease contain horizontal dash cell symptom positive test result contain letter s clear 101 people positive test result symptom disease representation contingency table signal detection curve detection bar contain horizontal vertical line divide disease nondiseased test positive testing negative difference lie result proportion people represent digit irregular area curve box Contingency table represent proportion people possible classification cell hit miss false alarm correct rejection simply number case table 1 number sum imaginary population 1000 people Signal detection curve represent people fall class area pair curve horizontal axis represent extremity test result Disease detection bar similar signal detection curve pretend represent actual distribution shape furthermore represent people individual countable box irregular continuous area curve Probability map contrast representation use quarter visual space probability map similar Venn diagram factor presence disease presence positive test result symptom see overlap area positive test result fill diseased people likely person test positive disease question ask experimentally follow representation sort diagram contingency table improve bayesian reasoning practice second special advantage graphic representation finally improvement bayesian reasoning task transfer superficially different bayesian task deep flexible understanding understand limited particular task METHOD subject 90 undergraduate psychology course Carnegie Mellon University participate fulfill course requirement Stimuli 8 problem bayesian reasoning create problem contain key parameter sensitivity specificity prevalence problem comprise factorial combination high low value parameter word problem involve high sensitivity high specificity high prevalence problem involve high sensitivity high specificity low prevalence high sensitivity specificity define 090 Low define 010 high prevalence define 070 low 030 stimulus file create base 8 problem file compose random ordering repetition 8 problem total 16 trial PROCEDURE phase Understanding task explanation bayesian reasoning take place classic Casscells Schoenberger Graboys problem present subject order absolute baseline compare early research subject gradually introduce concept update reasoning specially create Hypercard tutorial run Macintosh computer tutorial quickly focusse update probability disease light positive test result Phase II Understanding parameter follow initial explanation update reasoning subject see brief tutorial parameter involve diagnosis sensitivity specificity prevalence Phase III pretraine baseline 16 stimulus trial present Macintosh trial parameter appear blank space subject type probability patient disease follow subject response second pause screen blank new trial ruplaye performance 16 trial indicate subject understand sensitivity specificity prevalence receive training combine feedback kind give phase experiment Phase IV Tutorial representation tutorial shown design acquaint subject parameter combine order reach appropriate conclusion training tutorial contingency table signal detection curve detection bar probability map control control tutorial merely remind subject parameter important phase v training 16 stimulus trial present time response subject receive numerical non control subject graphic feedback correct posterior probability disease graphic feedback representation consistent tutorial condition subject receive Control subject receive numerical feedback subject instruct view numerical feedback view graphic display anx consider answer initially give improve trial important note moment subject give response graphic representation problem visible task task involve interpret currently visible graphic representation task subject use knowledge derive previously display representation judgment Paper pencil available subject draw diagram construct contingency table see fit Phase VI Final Problem completion 16 trial subject thanked ask problem pencil paper Bayesian problem different superficial form present subject ask circle option final problem ask subject decide condition particular disease prevalence improve specificity improve sensitivity test increase total number correct classification ie total hit plus correct rejection half subject tell prevalence relatively high 070 case correct answer sensitivity half tell prevalence relativelylow 030 case correct answer specificity final problem intend test robustness flexibility subject learn RESULTS Absolute Baseline Phase absolute baseline obtain present classic Casscells et al problem previous research present subject grossly overestimate posterior probability far frequent response problem 95 probability disease few 10 subject respond correct answer probability disease 1 pretralnlng Results Phase iii pretraine baseline phase present Figure 4 Open circle mark answer perfect Bayesian reasoner Perfonnance replicate previous finding subject commit base rate fallacy Casscells problem quickly learn base rate prevalence account pretraining phase problem present sequentially high prevalence lead high subjective probability disease present t89 62 p 001 note point experiment subject treat alike breakdown perfonnance representation condition 6    l o sensitivity Specificity v9 Bayes Bayes 1 bserve    ve Low hi low h Low Low High High Low Prevalence High prevalence figure 4 pretraine baseline performance 90 subject high prevalence lead increase estimate probability disease increase sensitivity lead increase estimate probability disease increase specificity experience influence use sensitivity specificity information give value sensitivity specificity experiment raise sensitivity exactly impact raise specificity Raising substantially impact raise bayesian function rise low posterior probability sensitivity specificity low plateau sensitivity specificity increase rise increase way subject react Sensitivity test overinfluential overinterprete sensitivity go 010 090 subject respond raise subjective probability Specificity hand underinfluential underinterpreted specificity increase subject raise subjective probability Furthennore sensitivity specificity increase subject react sensitivity increase pattern confirm computation 95 conrfidence interval respective sample mean Training figure 5 9 performance second repetition 8 problem phase v training phase Overreliance sensitivity persist experiment subject representation control group Sheer practice feedback correctness eliminate overreliance sensitivity contrast representation group show extremely good perfonnance end training phase little evidence overreliance sensitivity specificity correctly impact sensitivity combination sensitivity specificity correctly see important sensitivity BayesiBIJ Observed Low Prevalence High prevalence figure 5 performance end training phase 18 control subject performance unchanged important way Figure 4 OJ o     50 Sensitivity Specificity Bayesi Bayiart p Low Prevalence High prevalence figure 6 performance end training phase 18 contingency table subject raise specificity impact raise sensitivity Raising significantly impact raise OJ i5 Sensitivity Specificity Bayesiart9 low Prevalence p Bayes FI bserve d High prevalence figure 7 Performance end training phase 18 probability map subject Figure 6 raise specificity impact raise sensitivity Raising significantly impact raise o    Sensitivity Specificity 9 Bayesiart p Bayes serve Low Prevalence High prevalence figure 8 performance end training phase 18 signal detection curve subject result echo result table map condition o    Sensitivity Specificity Bayesiartp Low Prevalence High prevalence figure 9 Performance end training phase 18 detection bar subject result echo result table map curve condition Flnal Problem Table 2 present proportion correct final problem problem increase overall accuracy improve sensitivity specificity test prevalence high correct answer sensitivity prevalence low correct answer specificity appear overall performance table 2 poor 50 correct observe merely toss coin decide pick sensitivity specificity 50 correct baseline Naive untrained people present problem 50c50 split choose improve sensitivity vs specificity test sensitivity overwhelmingly prefer low prevalence condition previously collect data 500 student show exact scenario present low prevalence condition 35 vote improve specificity 65 vote improve sensitivity representation control group mirror naive performance 32 trial experience standard bayesian diagnosis task include 16 trial nuq ierical feedback representation group improve accuracy N 18 subject cell Table Bar group significantly differ expect proportion 033 binomial test p 05 survey datum available time high prevalence condition interesting note representation group perform control group apparently subject receive visual representation Bayesian problem come lot respect importance specificity extent overestimate importance unfamiliar set Loworev high prev Mean Ctrl 33 89 61 table 66 67 66 Curve Bar 44 56 67 56 56 56 Mean 49 71 60 table 2 Proportion correct Final Problem DISCUSSION Practice improve subject ability perform bayesian task sense subject quickly begin prevalence variation account pretraining phase feedback give practice presence feedback eliminate misuse sensitivity specificity information Control subject receive numerical feedback training continue rely sensitivity rely specificity present representation improve performance improvement result practice end training phase performance close perfect representation group ceiling effect mean impossible decide present datum diagram representation provide well training contingency table representation Non control subject show evidence transfer different task imply understand simple conditioning basis observe improvement performance ceiling effect observe present data point need research involve difficult task sensitive measure necessary determine diagrammatic representation superior tabular representation followup research example note person create solve problem take away problem present order force great reliance memory potentially sensitive measure reaction time datum long term ret datum reteste subject week retention interval collect remain unanlyzed CHI designer note efficiency graphic method represent class problem type problem crop specialty area daily life regard cognitive psychology finding suggest reason people fail perform attempt bayesian reasoning task lack useful mental model simply mental picture mental ground parameter interact understand parameter isolation know employ order arrive correct conclusion sufficient change physical representation problem appear aid formation useful mental representation medical educator note subject learn advantage specificity information learning appear involve flexible understanding apply new superficially different situation evidence date standard medical school education result deep understand Bayeisan reason acknowledgement research support New Investigator Research Award R23LM04517 National Library Medicine DHHS computer programming handle James Stewart Janet Davidson collaborate conduct data collection final version paper influence extensive comment provide Jackie Snell
29,1985,abstract paper describe case study Human Factors design development testing computer base financial analysis package project apply usability goal method propose Bennett 1984 structure definition design testing new system Learnability define key attribute product concept salience user perception system quality learnability attribute assign operational definition term time mastery error avoidancerecovery strategy Didner Butler 1982 apply design menu Empirical testing user performance sample problem alpha stage indicate new system surpass learnability objective lesson learn case study concern leverage get well managerial attention Human Factors consideration development project clear structure direct need research introduction currently little guide structure help developer interpret apply result cognitive science research software project lack structure obstacle cognitive science researcher wish report finding manner pertinent easy use developer software development methodology publish usually address Human Factors issue ad hoc manner place outside mainstream project activity notable exception generality Bennetts 1984 strategy manage development office system meet usability goal paper describe case study project apply Bennetts usability goal method development software base financial analysis tool study illustrate methodology beneficial result learnability user interface leverage gain well management attention Human Factors consideration Usability Goals Methodology Bennetts method base Gilbs 1977 proposal use measureable goal plan control software development fundamental assumption usability goal method development project likely produce usable system design objective closely tie empirical definition desirable user performance approach divide development project distinct stage 1 specify user performance objective product definition stage 2 Applying Human Factors principle guideline method design implementation stage 3 perform empirical testing user performance evaluate product satisfie user performance objective alpha stage Stage conceptual definition system develop term attribute relate overall purpose system attribute include functionality technical specification capabilite offer user Attribute tradeoff study propose Milne Weber 1983 method define software product stage 1 attribute pertain ease use define term task user system usability attribute give observational definition empirically measurable user performance objective User performance objective allow later monitor progress achieve design goal author recommendeddrive design user intefface measurable performance objective Raduchel 1984 focus probability task completion quantifiable measure user friendliness Didner Butler 1982 describe strategy design D S drive model desirable user decision process HoweverBennett i984 identify nain dimension user performance comprise usability learnability throughput attitude develop product profile tradeoff dimension usability weigh overall purpose system technical economic consideration stage 2 design group specifie system function implementedin manner satisfy set desire attribute Tracking progress iterative design facilitated availability objective definition attribute Stage 3 th testing evaluation new system include make empirical observation user performance key task Judgement new system possess tile require ease use attribute compare test observation user performance objective define Stage 1 CASEHISTORY Stage Market Product Definition project overall goal develop software product financial analyst access compute remote 3270 type terminal input system analysis market research Human Factors combine develop profile product attribute financial analysis tool market research define functional emphasis tool business modeling Ease learn specify key attribute product profile research indicate salience end user perception quality software system Dzida Herda Itzfeldt 1978 ease learn operationally define user performanceobjective basic problem solve mastery 180 minute self instruction qualified user qualify user define familiar business modeling concept capable articulating problem fundamental typing skill 3270 familiarity secondary objective interface allow experienced user select alternate mode involve few screen keystroke lhese objective write requirement document drive design user interface Stage 2 Design Implementation goal design effort specify set menu orient operation display 3270 type terminal cover functionality satisfy user performance objective apply strategy design Didner Butler 1982 f r s t major design task user interface construct organization commandsto control system functionality figure show actual help panel give user high level description organization figure 1 Model ACtivity DEfine ANalyze REPort Equations SOLve SELect DAta Whatif Format REAd SENsitivity Display SEEk GRaph Input CAse Block Time REFerence CRiterion hierarchal organization derive input process output trichotomy intend build knowledgebase experience business modeler hierarchy represent conceptual decision space business modeling analysis Alternate menu access path available require user specification menu hierarchy view corresponding choice node decision space Eachmenuwas design    Instruct user decision    list choice operation good likely payoff    Provide system information facilitate choose    provide convenient consistent procedure executing choice    present feedback success attempt operation allow error correction accordance recommendation Miller 1981 depth menus limited level Screens low level provide variable datum entry extend numberof choice list level guideline Engel Granda 1975 Peterson 1981 apply determine screen layout Figure 2 illustrate samplemenu figure 2 N l Y Z e MODEL enter SCREEN selection PRESS PE2 SOLve Simuffaneous Relationships Whatif Data andor Equations Change SENsitivity Ranges Data Assumptions SEEk Specific Target Variable CAse Analysis BestWorst HELP PF1 GO10SEN PF2 QUIT PF3 keyword PF4 VARIABLES PFS EIS pf6 Stage 3 lest Evaluate User performance testing conduct alpha phase determine new system satisfy learnability objective record user perception system feature general approach user performance testing straightforward seven test user give introductory level problem solve left copy user guide 3270 terminal log system test plan specify requirement document time datum average fast seven user 90 confidence interval compute mean user performance objectiv consider satisfied 90 confidence interval mean completion time include 180 minute objective 2 user encounter system state error recover assistance test problem prepare accord criterion represent typical business modeling application novice user like begin learn solve computer system conceptually simple user grasp allowable time limit constitute productive valuable task sample representative set feature functionality user interface seven qualified user volunteer serve test user test systemsepa    rately solve problem order help reduce anxiety embarrassment make error verbal instruction emphasize software evaluation test user user complete test excuse prototype system went bring time complete session result user learning performance summarize Table 1 Table 1 Test Users Learning Times YEARS TESI COMPUTING PROBLEM LEARNING USER EXPERIENCE test TIME 1 14 Breakeven 150 2 4 New Product 120 3 2 income 90 4 6 New Product 95 5 5n7 Breakeven 154 6 14 income 134 mean learning time 1238 minute standard error mean 272 minute result user performance test new system surpass learrability objective substantial margin user successfully complete problem self instruction average 1238 minute reach solution table show trend computing experience match fast learning time effect statistically reliable effect datum consider significant small sample size questionnaire study user reach solution administrator verify accuracy solution give debrief questionnaire accordance recommendation Root Draper 1983 questionnaire concentrate specific exist feature system user ask rating quality feature importance rating feature test user give system high rating question general category user friendly useful versatile offer productivity gain test user respond yes question tool available organization want use lhe result questionnaire view complementary user performance testing identify important feature user interface improvement gain despite having achieve criterial learning performance special concern feature rate high importance receive high rating ease use feature principally help screen user guide error message user critical comment feed design team provide basis making improvement discussion inference draw case study necessarily limit large number uncontrolle factor present study real world activity valuable information gain term lesson learn apply method addition experience apply structured approach reveal area knowledge gap exist research direct lesson learn major benefit usability goal method evolutionary revolutionary Human Factors recognize term confusion involve design develop system satisfy predefine objective familiar engineering concept Generalizing include user performance objective understandable approach developer especially view requirement successful marketing addition knowledge usability new system evaluate objective measure create incentive project manager seek need Human Factors assistance Goulds 1983 point system designer fail advantage available Human Factors engineering method relevant usability goal method apply successfully twice project describe small effort observation systematic approach incorporate usability criterion requirement document allow well understanding s go concerned researcher manager programmer Human Factors professional likely agree objective satisfied operationally define empirically test conversely vulnerability usability goal method tie user performance criterion need specify requirement important limitation use situation requirement definition take place fly Identified Needs Research Research need see stage method Stage 1 Specification user performance objective clear understanding need relationship human factor design market research approach define software product conjoint measurement Wind Grashof Goldhar 1978 Stage 2 Design analytic predictor user performance base design feature need order tradeoff user performance engineering tage 3 Testing Evaluation obstacle type user testing add expense need efficient valid reliable tool measure learnability throughput attitude apply computer system concluding comment software marketplace evolve rapidly year ago project view successful new software capable satisfy stringent system performance criterion satisfaction system criterion necessary long sufficient success extensive user interaction Computing increasingly view tool justification increase human productivity competitive necessity new system satisfy correspond user performance criterion design inherently involve make tradeoff multidimensional choice number benefit associate follow structured method del increased complexity having address user performance criterion system design include user performance objective Bennetts 1984 proposal structure method able cover competitive usability objective User performance engineering recent variation establish theme experience usability goal method report beneficial
30,1989,ABSTRACT Easy learning user interface depend user able generalize successfully Philosophical doctrine recent work humancomputer interaction argue causal analysis interaction support generalization philosophical literature HCI literature provide rigorous theory causal analysis adequate problem humancomputer interaction propose rigorous theory account robust generalization certain general assumption present evidence assumption accept people finally compare theory treatment consistency introduction consider follow command fictitious system El foo baz delete authorization table E2 blee baz delete tenninal assignment table E3 foo bar print authorization table command issue print terminal assignment table probably blee bar sample computer scientist give response answer general term easy sketch Comparison example suggest bazcause delete bar cause printing example foo specify authorization table blee terminal assignment table Mills Methods Induction employ organize analysis causal connection obtain support generalization novel case conclude bar cause print oppose associate coincidentally bar future produce print Generalization interaction causal analysis way discuss examination sketch problem want bar type bar cause print typing bar certainly type bar precede invalid cause print try type bar cause printing system certain state close reason absent original confident generalization Consultation philosophical literature example confirm impression concept causation analyze philosopher adapt reasoning sort problem typical humancomputer interaction Philosophical discussion concentrate causal connection event consider whole need know constituent part event determine constituent part later event troublesome bar printing example constituent role need understand generalize new FRAMEWORK avoid confusion suggest term control specify replace cause describe connection constituent example second word command control operation perform value bar specifie print define tenns domain example draw wish generalize consist collection case present discussion case represent example command description outcome tenninology keep abstract permit application framework domain command outcome direct manipulation interaction sentence meaning space permit discussion Mills Methods Induction derive new framework consider case consist collection antecedent consequent circumstance case collection aspect simply function case domain example second word command aspect map case word operation perform map case operation aspect need define happen attempt print nonexistent file Aspects divide antecedent consequent aspect antecedent aspect discussion aspect command consequent aspect aspect outcome second word command antecedent aspect operation perform consequent aspect assume antecedent aspect case sufficient determine consequent aspect case value antecedent aspect value consequent aspect situation identical command different result deal include system state information antecedent aspect Control relationship antecedent consequent aspect intuitively say second word command control operation perform mean change second word command change operation perform Rigorously definition follow bold low case letter aspect capital case notation eC value aspect e case C Aspect control aspect c case C iff 1 antecedent aspect c c consequent aspec4and 2 c define c 3 contrast case C 3a aC define equal aC 3b ecec antecedent aspect e 3c cc define equal cC requirement aspect define intended exclude situation invalid value antecedent aspect affect consequent aspect independent example change file valid invalid value operation perform command undefined wish file control operation definition example El 3 discuss let use word command second word command antecedent aspect thing operate operation perform consequent aspect apply definition control case El E2 contrast case word command control thing operate El similarly E2 Examining El E3 contrast case reveal second word command control operation perform El similarly E3 assumption NEEDED GENERALIZATION progress unable base generalization control relationship reason control relationship define purely locally fact word command control thing operate El E2 permit assert word command control thing operate E3 wish second gap reason far know control relationship aspect tell value aspect behave know word command control thing operate E3 know replace foo blee E3 produce case thing operate terminal assignment table strong plausible assumption need fill gap assume control relationship find case hold formally assume Al Consistency control control c case c c define case c control c c deal behavior value assume aspect control value aspect associate way formally assume A2 Consistency consequent value control c case C c acac cccc definition support usage say value antecedent aspect specify associate value consequent aspect aspect control El foo specify authorization table baz specify deletion word command control thing operate second word command control operation perform El Armed powerful assumption derive generalization want El 3 gap need know consequent aspect thing operate operation perform define command blee bar rest want follow word command control thing operate blee bar value blee specify consequent value terminal assignment table similarly second word command control operation perform bar specify print assumption ensure consequent aspect define blee bar bet sure word command control thing operate blee bar difficulty real glitch formal machinery real system easily happen blee bar invalid command terminal assignment table print delete E2 ensure print print way object plausible assume irregularity occur implicitly arrive blee bar command need apparently assume value valid aspect situation valid equivalently invalid value context invalid formally define invalid value follow v invalid value c c iff antecedent aspect c consequent aspect c control c c case C aCv ecec antecedent aspect cc undefined state assumption a3 Consistency invalid value v invalid value cat case c aCv case c cC undefined assumption deal El 3 thing operate undefined blee bar blee invalid value word command thing operate E3 replace foo blee E3 thing operate undefined use blee blee baz thing operate undefined E2 false Similarly operation perform define blee bar use bar E3 work work follow consequent aspect define blee baz value terminal assignment table printing require NEED assumption assumption need derive obvious generalization El 3 natural interpretation example require assumption consider follow command outcome E4 z n f archive current audit file classification HOLD ES k n d transmit customer feedback file classification hold command specify classification computer scientist give obvious answer n assumption state far adequate justify conclusion space permit complete analysis need assumption antecedent aspect E4 control classification state general A4 free consequent define consequent aspect case control antecedent aspect need follow assumption A5 aliase control c c c cccc aCaC a6 extra baggage define antecedent aspect case control consequent aspect A1 consequent antecedent antecedent aspect c control consequent aspect willing accept violation 7 follow analysis E4 S OK z k aliase classification HOLD n letter control operation file operate 7 suffice rule interpretation n specify classification assumption need justify obvious interpretation 7 need rule possibility aspect example addition middle letter control classification assume directly multiple control consequent aspect control antecedent aspect EMPIRICAL study argument give natural generalization depend strong plausible assumption domain people use assumption explain generalization evidence assumption indirect seek direct evidence ask computer scientist faculty graduate student computer science University Colorado choose contrast explanation group example command assumption als devise example provide explanation consistent assumption second violate select assumption satisfy remain one Figure 1 show item devise participant ask explanation regard likely result summarize Table 1 see participant reject explanation violate Al Consistency control A2 Consistency consequent value aliase a6 extra baggage multiple control Assumptions A4 free consequent A7 consequent antecedent favor participant attach weight pvalue show sign test Assumption A3 Consistency invalid value strongly support participant participant ask explain preference provide justification choice a3 item resemble a3 possible people arrive common generalization El 3 alternative a3 assume directly value consequent define absence indication contrary generalization base assumption natural robust assumption false situation participant discuss aware ask reject explanation actually impossible participant indicate explanation impossible violation A2 Consistency consequent value call impossible participant assumption violate real system example operation symbol denote different arithmetic operation different datum type programming language course case user think different operation addition Ada possible assign unrelated operation identifier choice operation dependent type parameter people aware violation assumption possible reliance assumption heuristic value People prepare deal violation assumption respond violation remain explore evidence people work avoid confront violation reinterpret apparently deviant example way preserve assumption Robert Mack personal communication find participant ask view report demonstration use text editor say miss action select insert mode fact system question insert mode action show participant apparently see insert mode consequent aspect need control antecedent aspect work ask participant recall explain sequence screen content command include show figure 2a 2b thirty participant explain sequence figure 2a provide role seemingly superfluous z propose z helped identify instance p delete specify p follow Z seven different thirty participant see sequence figure 2b manage connect apparently excess consequent deletion p antecedent value Z describe operation remove Z follow letter user nearly develop generalization kind discuss system designer strive support clearly designer system El 3 draw trouble command print terminal assignment table blee bar Design support generalization go head consistency framework see provide specific analysis consistency mean designer produce consistency honor assumption Al 8 assumption violate user generalization successful analysis consistency differ previous one connect consistency directly generalization process intend support Reisners use formal grammar analyze interface work task action grammar Kieras Polson use production measure overlap require knowledge task illuminate regularity promote actually construct generalization Assumption aliase example assumption status clarify present analysis early analysis suggest alias undesirable user learn use extra grammar rule production need describe alternative command analysis suggest alias broadly difficult learning example include alias hard second possibility alias complicate analysis example alias actually involve see E4 5 direct evidence assumption draw sophisticated population assumption relevant design naive user indirect evidence argue Recall assumption develop support certain robust natural generalization anybody sophisticated make generalization need assumption doubt assumption reinforce experienced user fact mean find true expect find naive user implicitly rely assumption possible relation kind assumption explore VanLehns work call felicity condition case evidence kind implicitly hold constraint assumption conclusion work present formal framework deal causal analysis report evidence suggest assumption need support generalization framework accept people domain computer command language direction future work implication design sketch need explore context real interface second robustness assumption generalization mechanism describe need determined note reason speculate naive learner sophisticated test participant use assumption similar assumption underlie generalization domain unrelated computer Table 1 Assumption Prefer explanation consistent w assumption Prefer p explanation preference violating assumption Al Consistency 9 control A2 Consistency 11 consequent value a3 Consistency 6 invalid value A4 free consequent 8 A5 aliase a6 extra baggage 11 a7 consequent 7 antecedent A8 multiple control 9 Figure 1 Item assess acceptance A8 multiple control command ExPox explanation ghu fli wef nhe fli wef ghucvewef Explanation 1 command delete file wef second command print file wef command archive file wef Explanation 2 command delete file wef permanently second command delete file wef provisionally command lock file wef permanently explanation think likely figure 2a Sequence recall explain text Contents screen DZP Command remove ZP Contents screen DZ ACKNOWLEDGEMENT research support Office Naval Research Contract n00014 85 k 0452
31,1989,ABSTRACT Programmable User Model PUM psychologically constrain architecture interface designer invite program simulate user perform range task propose interface provide novel way convey psychological consideration designer involve designer process make prediction usability development idea lead complementary perspective PUM interpreter instruction language methodologyuse research involve use concrete HCI scenario assess different approach cognitive modelling research finding include analysis cognitive process involve use interactive computer system number issue resolve future cognitive model introduction potential tool interface designer analytical model user appear purpose HCI 1 term outcome perform predictive evaluation ie tell designer usability propose design actually build 2 term benefit designer experience apply draw designer attention issue usability provide way think assumption share model well design result question usability consider early design cycle possible instead leave necessarily late stage prototype evaluation assumption uted direct commercial advantage acm copyright notice title publication date appear notice give copying permission Association Computing Machinery different available model exhibit considerable somewhat confusing diversity card Young 1984 Simon 1988 paper describe key notion underlie new class model know programmable User Models PUMs address objective mention PUM constrain cognitive architecture program eg interface designer simulate hypothetical user perform range task propose interface PUM act analytical model computer user cast form interface designer program certain aspect user intend behaviour pum explore novel approach problem build predictive model complex human behaviour accessible professional case interface designer probably specialise train human psychology pum intend effective way convey psychological consideration designer virtue involve himher actual process building model make predictive evaluation base designer position prediction come factor depend pum unfamiliar notion good way describe present particular view methodology modelling technique employ lesson leame flavour pum probably close Cognitive Complexity Theory Kieras Poison 1985 especially form emerge hand Bennett Lorch Kieras Poison 1987 having mould consideration applicability pum different approach actual modelling focus primarily knowledge intensive heavily proceduralise behaviour 0 Tony Simons present address Department PsychologyCarnegie Mellon University Pittsburgh PA 15213 PUM CONSTRAINED ARCHITECTURE predictive evaluation consider situation arise easily present state HCI interface designer colleague Human Factors marvellous new interface people find wonderfully easy use Human Factors advisor reply confuse design people wo nt able use happen HCI expertise base primarily simple guideline empirical evaluation explicit scientific basis assessment fail designer specific guidance wrong designer reject judgement simply advisor word designer find genuinely unhelpful lack specific diagnosis guidance example wellknown case limit human capacity store dynamic information guideline indicate like Users retain item change information design interface need store guideline give indication estimate memory load propose design detect overload suppose instead present designer programmable architecture slot dynamic information exactly handle real PUM designer program PUM respect constraint model error run arrangement accessible designer tell memory load overload furthermore designer position design option available overcome problem equally importantly user option avoid problem change strategy pum propose interface designer constrain programmable architecture think design great program architecture behave like user interface perform task find straightforward satisfactory thing suggestive evidence interface easy use find aspect give trouble evidence people difficulty aspect approach well 1 ask software designer good devise program strange beast 2 show designer prediction come help option note pum useful feedback designer distinct time firstly engage programming PUM secondly model actually run prediction Bennett et al similar point suspect value come time provide designer mean consider propose design user point view User Programs perspective pum derive work Runciman Hammond 1986 point interactive system processor involve computer user software engineer build refine program run computer time implicitly specify user program Runciman Hammond argue well activity explicit order correct present imbalance focus basis design ensure usability result computing system designer need know user program executable human processor satisfactory bug free way end course bring previous story immediately raise question architecture human cognitive processor repertoire instruction way notion user program introduce usefully extend understand pum provide altemative view PUM executor user program pum help clarify unfamiliar notion PUM useful counter explicitly possible misconception PUM artificial user cognitive architecture regard partial model designer supply part present psychology provide doubt acceptability utility designer artificial user assume ideal predictive modelling complete model predict real user behave propose system believe apart sheer impossibility building thing ineffective communicating usability consideration designer reason sketch early envelope calculational model approximate model right cognitive model primarily calculational guess application project require fair commitment effort s true simple Keystroke Level Model Card Moran Newell interface design kit find place software development environment way forward clearly depend find mean integrate pum iterative process software design PUM tool construct model user system course deny provision constrain toolkit well know Apple Macintosh toolbox Chemicoff 1985can way improve quality interface design pum represent different line research Expert System designer assistant tool construct model user simulation expert designer intend aid interface designer fulfil role actively offer advice serve draw designer attention consideration constraint affect usability PUM instruction LANGUAGE aspect investigation require implement PUM address question involve programming clearly order PUM desire characteristic constraint embody architecture reflect valid psychological property consequence pum programming language unlike conventional procedural language example default sequence tell model b simply write step sequence people ability carry arbitrary sequence step command instead PUM programmer ie interface designer specify explicitly user know b have similarly programming language allow access unrestricted global variable people remember arbitrarily tag piece information unlimited period time instead item information recall PUM programmer specify explicit mnemonic retrieval route way approach question consider PUM supply relevant background knowledge knowledge library know particular device task instruct kind instruction take form specify relevant conceptual object operation provide method hint indicate background knowledge applicable giving instruction sense resemble build knowledge base conventional programming emerge investigation perspective pum view PUM interpreter instruction language perspective complement extend initial understanding pum interpreter look like certainly distinct flavour Artificial Intelligence regard engine apply knowledge situation order generate behaviour example capability mini plan instruction unlike program supply detailed information need execution need PUM incorporate simple planning mechanism help bridge gap instruction concrete situation fill detail instruction ideal PUM automatically people find obvious context tell likely year thing run PUM worth report early project industrial partner find thinking interface design problem term user program instruction language provide approach design help designer conceptualise interface user point view guess reason unexpectedly early piece technology transfer point contrast pum approach usual kind HCI advice form guideline Interface designer frequently urge consider interface user viewpoint recommendation good advice accept designer fall short helping designer know actually pose question instruction order know use interface provide designer concrete practical mean mentally step user shoe PUM ISSUES modelling aim PUM research develop new cognitive architecture scratch effort save capitalise exist work Cognitive Science constrain architecture framework model methodology project critically examine assess different approach model offer research contribution right Young Bamard 1987 use number scenario concrete detailed instance fragment human computer usage scenario select sample number basis relevant HCI different cognitive resource different kind interface different sort task take set scenario conceptual filter bank explore scope adequacy approach model HCI scenario base analysis reveal complementary strength weaknesse different modelling approach deep connection example wide class rule base architecture exhibit tendency certain kind termination error Young Bamard 1987 modelling approach emerge work inspire primarily SOAR Newell 1989 Laird Newell Rosenbloom 1987 problem solve architecture realise series nest problem space framework available SOAR closely approximate description give instruction language interpreter engine apply knowledge situation order generate behaviour contraining happen enforce good approximation contraint mention default sequence global variable SOAR come builtin mechanism learning call learning chunk tightly entwine problem solve mechanism effect constrain architecture allow model initial rapid learn characteristic interaction software system purpose SOAR right stand approach incorporate idea model framework examine ACT Anderson 1983 interact Cognitive Subsystems Barnard 1987 Task Action Grammars Payne Green 1986 lesson learn exercise concern involve take general purpose architecture SOAR seek apply particular domain human computer interaction identify attempt clarify number issue arise mention mini planning describe early connection interpretation instruction language Mini planning way PUM supply limit Artificial Intelligence job user modelling lead analyse role planning HCI especially partial reactive nature Young Simon 1987 Simon Young 1988 issue interactivity framework draw develop originally model purely internal cognitive process try apply model behaviour include tight interaction outside world case HCI give rise number unsolved problem concern representation control perception action relationship perceive imagine version information operation Simon Polk Young card 1988 role converge evidence ubiquitous HCI Users decide action need gather weigh evidence number different source line reason previous experience system remember instruction perform current task analogy task everyday behaviour information derivable screen example manual similar issue arise multiple intemal form procedural knowledge include plan base method base representation Young Lewis Simon Tang 1989 nature SOAR lend model evidence gather way find make capability available PUM need conclusion pum project represent line research take step simply recognise desirability have user model available designer acknowledge psychology position provide readymade user model shelf model necessarily suitable role intend realistic expect interface designer engage user modelling tool currently available pum offer promise resolve dilemma look psychology provide appropriately constrain architecture devolving responsibility certain aspect model designer offer prospect class aid tailor need interface designer deliver benefit conventional mean output model virtue activity designer lead acknowledgement grateful Rod Rivers comment especially Philip Bamard magnificent job reconstruction early version paper pum work alvey fund collaborative research project MMI112 UK Medical Research Councils Applied Psychology Unit Logica Cambridge Ltd STC Technology Ltd
32,1986,abstract field study use integrate business software business professional find characteristic real world situation lead underutilization integrate software importance human factor professional work heterogeneous software environment fill practical problem follow satisficing strategy suboptimal usageand problem migrate advanced use current level software integration adequately easily support task integration requirement real task ashandle small thing 1 introduction reasonsfor want study integrate software business professional certainly important issue practical point view integration trend current software business professional represent huge potential make productive use computer system area important study basic research perspective single popular vehicle research computer human interaction tong time text editor clerical task Integrated business software contrast represent knowledge orient type computer use complex task software support eg spreadsheet shall seea complicated real world environment 2 Integration Software integration refer aspect computer environment essenceit refer approach republishrequire feeandor specificpermission cb 1986 acm o 89791 180 6860400     0162 0075 minimize eliminate boundary component environment ie system application medium historical technical reason software tool professional evolve separate element eg program recently aspart unify system kind fragmentation system relevant consider integrate piece dimension classify follow Application integration Easy accessto multiple application result program eg number spreadsheet build business graph Media integration composite document consist multiple medium eg text graphic interface integration Uniform interaction different part system Systems integration Use multiple computer system work Documentation integration manual help information tutorial etc online accessible application outside integration interface nonelectronic world eg paper base information certainly thing impossible difficult computer type integration discussion issue Seybold 1984 Lu 1984 Carter Tubman 1984 tiack Nielsen 1986 integration solution problem show follow section 3 Field Study Methodology Jakob Nielsen Department Computer Science Technical University Denmark DK 2800 Lyngby Denmark BITnetEARN DATJNNEUVMl CSnetArpaNet datjnneuvmlbitnetcsnet relay 21keith H Bergendotff Department Psychology Box 512 Baruch College CUNY 17 Lexington Ave New York NY 10010 Cl i186proceeding April 1986 Budget purchase control invoioe processing maintain content market analysis database estimate market potential tracking sale manage advertising Maintaining datum base corporate organization analyze opinion survey figure 1 function perform people interview datum conclusion discuss large ongoing study software usage problem need professional work place decide important understand actual user role software integration play actually potentially traditional experimental study specific interface issuesassociate integration field study consist combination write questionnaire administer mail volunteer followup interview schedule subject convenience conduct hour time limit interview probe professional work detail possible survey sufficiently short unduly impose professional survey interview business professional work corporate function figure 1 list business function professional interview Professionals function include number specialize user support staff computer support tend mainframe base personal computer important recent year 200 business professional contact 62 request survey 54 ultimateIy complete survey visit 12 respondent followup interview discuss section 41 business professional computer usage span large heterogeneous universe specific circumstance likely different group believe general conclusion apply user community Basedon pilot sample questionnaire evolve 25 question multiple part consist primarily checklist rating eg indicate importance specify activity list integration activity give work accord follow scale 1i5 scale 6 open ended question eg briefly describe biggestproblem experience computer software refer possible specific experience application survey topic include question job computer experience type integration support computer big computer relate problem advantage computer support respondent productive learn method favor interview question cover similar topic survey focusse primarily work analysis 1 goal 2 subtask later ask question recursively subtask 3 follow manner mention alternative way critique subject work method intend rationale choice method actually 4 precondition 5 result 6 work product 7 error occur 8 discover correct error debug figure 2 question checklist work analysis interview ask subject describe major job responsibility perform process keep question list figure 2 mind checklist ensure get complete picture buestion informal high level work content analysis identify main goal subtask method prerequisite subtask rationale interviewee alternative way possibly involve integration computer use productive ask actual work product useful clarify issue prompt question ask try formal method ask question figure 2 strictly systematic recursive manner adapt technique develop Graesser 1981 analyze mental representation story procedure decide rely informal method describe becauseit well suited nature sample interview ie business professional tolerate systematic quizzing possibly hour informal method rely heavily fact interviewer basis knowledge integrate business software human factor issue able identify important issuesduring interview ask relevant question 4 Aspects Actual Use 41 Heterogeneous World considerable variety type user task integrate software support user study represent wide spectrum educational background job history marketing business job programming software engineering position perform different kind function indicate Figure 1 74 user survey characterize asexperienceduserswhile 26 place category nonexperience user novice casual user etc percent user survey kind software personal computer mainframe respectively Personal Main Computer frame Spreadsheets etc 47 17 Word process 57 47 business picture graphic 46 41 electronic mailcommunication 4 84 Data basis 47 65 figure 3 Main type software computer usageitself heterogeneous 52 user survey total 92 different software package different computer system personal computer mainframe mean number package user 5 distribution 3 11 figure 3 describe main type software 5 program account 42 use program professional 8 92 program 10 respondent substantial difference knowledge user computer system motivation find difference exist work group user essentially job accessto computer facility user guru understand considerable technical detail system colleague use initiative learn rest group prefer know little possible system example work group study consisted professional samekind market analysis user work computer support computer essential task user study especially high proportion guru user programmer report superuser group Petrosky 1985 lead believe guru general phenomenon 42 Integrated Software Underutilized survey interview show professional computer software relevant possible use key reason knowledge worker exercise discretion decide use computer delegate aspect work secretary specialize personnel graphic shop enable offload work feel worth reason subject say learn word processing secretary well concentrate real work survey evidence come mean estimate surveyee 55 range 11 95 17 business task relevance ask evaluate entailed delegation task anecdotal evidence interview underutilization occur problem experience attempt use software professional example try learn use word processor program encounter difficulty give discretionary user motivate learn use spreadsheet succeedin subject complain expertise require need learn start program perception necessity acquire huge knowledge start keep subject step beginning use new software problem explain current wisdom trade literature Seybold 1984 view approachability important attribute integrate system nt know exactly make user perceive system approachable unapproachable negative factor large manual user complain lot casesuser choose use nonintegrate system instead integrate one example 41 professional mainframe system integrate administrative function include text processing electronic mail calendaring function 34 actually word processing rest system primarily electronic mail documentation preparation separate personal computer word processing system despite problem incur download uploading file 30 professional survey personal computer application spreadsheet graphic graphic heuristic analysis purpose make graph delegate specialized graphic shop professional graphs presentation purpose delegation entail inconvenience result well quality graph example presentation graph show key reason lack use integrate package seemsto lack functionality compare specialized standalone application program caseswe find user simply need add functionality specialized program application theoretically available integrated package typical example user word process specialized program offering feature spelling check instead limited word process integrate package spreadsheet application involve group individual aseg form electronic mail underutilization result lack sufficient critical mass user interviewee accessto calendar system design include coordination departmental schedule use purpose everybody de partment system system keep individual calendar benefit integrate departmental calendar 43 satisficing strategy satisficing satisfy critical requirement sufficiently handle problem hand necessarily optimize solution Simon 1969 seemsto fair description strategy user survey agreement early result show use suboptimal command set standalone application rosson 1983 example half interview participant calculation program database spreadsheet calculation 3 use datum base component create problem reduce advanced eg query relational datum base kind program case guru work internal support group develop interface set function provide colleague datum file relate business planning user point view specify variety file ahigh level menu drive language system actually consist variety program job necessarily optimal datum base query purpose eg mainframe statistical analysis program ideally user community need relational database highly intuitive query interface linkage diverse set corporate source market salesdata Lacking professional adapt know solve problem satisfice strategy suggeststhat adopt method nonoptimal point view optimal broad perspective well cope spend resource find exactly good solution narrow sense ideal solution conceptually possible level usage observe result clear perception great productivity professional compare noncomputer method 5 problem find large number problem keep user take advantage computer fairly predictable solve advance technology need behavioral research problem discuss depth find traditional usability complaint eg use computerese large manual 51 Interface problem 53 surveyee complain inconsistency present system somewhat surprising 89 user complain low level feature inconsistent assignment function key application 32 complain high level semantic inconsistency user problem workspace squeezeof computer display large hold information necessary perform task result strategy ordering hardcopy printout computer base information integration occur spread paper base information physical desktop problem simply sheer lack real estate screen problem seemedto relate keep track small piece information retrieve piece easily right time attribute organization workspace presently well implement piece paper desktop spatial layout potential cue provide organizational context manage element work environment cf malone 1983 52 Coping NonIdeal World ideal world user complete date computer system resource necessary carry job hand everybody know live ideal world purely practical problem seemedin large number casesto impediment well integration user want connect personal computer mainframe system able use datum store problem actual cable connection wellknown problem observe include have little computer memory run spreadsheetsaslarge asthose require task have free hardware slot personal computer installation graphic card problem similar one thing perfectly feasible example lack graphic card prevent user start make business graph potentially lead advanced type text graphic integration problem special interest trivial determine solve support staff group study working solve note practical problem keep user benefit advanced computer capability practical problem take classof problem actually important issue human factor ofcomputer solve specific practical problem time likely way practical problem nonideal world new one appear solve old one learn cope fact user satisfice strategy response situation need form graceful degradation computer system ideal configuration represent satisfice solution ie behave reasonably user friendly manner provide productivity gain perfect circumstance CH186Proceedings April 1986 53 outgrow Initial Solutions find example professional difficulty migrating system suitable small uncomplicated application suit large application interviewee originally start store datum market performance product spreadsheet work fine begin comfortable work way spreadsheet big add datum need real data base program say interview becausehe time find alternative want capability spreadsheet give easily calculation datum hand need data base function selective data analysis thing know apparently influence decision stay spreadsheet generalizing observation professional fist start computer deal small relatively simple collection datum handle give thought problem data base design function time experience professional accumulate progressively datum discover complicated thing data point process initial organization datum sufficient situation business pro fessional adopt ad hoc solution sustain additional time user familiar system have mature system problem hurdle getting start new system solve problem grow require everybody use sufficiently advanced solution begin outgrow boundary instead need provide migration path introductory system advanced system 6 integrate small thing interested identify situation software integration benefit user way feasible easy give state art integrate system find case half professional point scenario Integrating link small thing example professional need develop workproduct compose large number small object composite workproduct reflect standard integration capability eg integrate graph text spreadsheet number graph easily fit exist capability user statistical analysis opinion poll write interesting result report want section report include single number huge table output statistic package transfer number computer instead write piece paper retype experienced user programmer simply come conclusion easy track datum need task paper professional multiple data basis need link part case database exist information aspect market analysis information management database delegate different staff person expert aspect datum point professional collect relevant information rekey spreadsheet program print convenient format typically additional calculation Graphs usually rekeye datum independent graphic package professional rekeye data datum extensive ask common task reply work involve integrative small task like professional express similar requirement productivity improve greatly capability information source destination information usable application use scenario suggest implication overhead merge link datum important advantage computer base manipulation large modification difficult small one need computer base operation easy note number piece paper design operation manipulate small piece data extremely low overhead typically current approach merge datum consist structured fide transfer method involve procedure copying segment file eg find mark thing wish output file special clipboard buffer exit current application start target ap    plication find mark datum effect insertion procedure work fine integrate large object simply carry overhead support integration small thing base interview believe user have task require kind integration likely achieve noncomputer method Contrast computer base integration characteristic paper base manipulation information people exploit scenario small modification carry extremely low overhead flexible sense easy specific small modification require professional express need flexibility datum transfer flexibility control datum merge new environment integration approach certainly able low overhead integration somewhat example have window concurrently active document process exit application start convenient time row switch follow reduce move window CH186Proceedings April 1986 CH186Proceedings April 1986 approximation need evolve call mini integrator desktop popup accessory like notepad scrapbook calendar cut paste capability easily accessible easily terminate carry relatively little overhead know behavioral evidence suggest range datum merging task require evidence current approximation meet requirement flexibility low overhead 7 conclusion see integrated software tend underutilize reason Business professional discretionary user use software perception unfavorable instead follow satisficing strategy lead continued suboptimal use system familiar practical problem form barrier expand successful computer human interaction generalize task scenario given believe relevant professional usersis necessarily product integration tusk integration Task integration look datum manipulation data match requirement user task task requirement match application boundary current integrate system type integration define section 2 certainly important minimizingthe mismatch different part computer system task integration aim minimize mismatch result computer system user task requirement professional express view follow way Software developer handle program integration task integration want task integration nt care product integration large number different program show section 41 professional survey indicate adaptation currently available software task integration professional pick choose well set heterogeneous program integrate way approach integration refer asloose integration suit integration requirement eg integrate small thing awkward type integration characterization task integration intuition point formal way assess match mismatch task software capability Office task analyse eg Sasso 1985 Sirbu Schoechet Kunin Hammer Sutherland Zarmer 1983 aim believe current analysis develop category representation adequate identify task requirement integration Reitman Olson 1986 discussion similar point believe achieve match require achieve type integration section 2 principle achieve task integration integration problem solve accordance implication discuss Solutions cope nonideal world enable user outgrow initial solution integrate small thing conveniently important favorably perceive user population limit satisfice overcome acknowledgement thank John Black useful discussionsabout adapt technique cognitive psychology analyze work content thank John Richards useful discussionsof role integration professionalwork environment Wethank Jack Carroll John Richardsfor helpful commentson early ver    sionsof paper
33,1989,ABSTRACT Video datum thirty case advice seek give follow behavior graphical computer interface analyze detail evidence indicate client follow prescriptive advice effectively efficiently slightly half case case client perform twice action need time time reach prescribe state hypothesis observe advice follow difficulty correlate advice abstractness support advice match client knowledge system particular isolate detail 2 introduction presupposition client follow advice underpin belief utility advice issue deserve investigation false Mack Lewis Carroll 1983 cite evidence word processor user difficulty follow action prescription numerous study point difficulty textual instruction follow issue question advice effectiveness efficient follow good advice mean effective advice inefficient follow good advice render advice ineffective early study observe advice seeker follow appear high quality advice determine look carefully video record early study estimate quantitatively large problem seek insight occur uted direct commercial advantage acm copyright notice title publication date appear notice give copying permission Association Computing Machinery 3 METHOD exist datum datum available early study include video record client work perform statistical task creation roleplay Consumer Reports magazine datum analyst year college level statistic assume adequate statistic knowledge touch typing skill client individually tutor use Visual Statistics direct manipulation interface particular seek receive advice help key Visual Statistics help system work follow press help key client type english question send hide operator advisory system ten second english response appear client screen client know advice generate human expert scene Policies limited initiative ie client initiate advisory exchange license continuance ie advisor continue exchange question request offer client introduce topic enforce policy deliberately choose initial study limit advisory phenomenon simple case videotape record session supplement mouse mouse mouse click mouse click activity script representation client work think aloud protocol advisor advice justification order maintain ecologically plausible set original study interrupt client think aloud expectation question session result lack protocol evidence permit inference respect impact individual piece descriptive advice ie description interface prescription interface client comprehension system case prescriptive advice video record activity script client post advice action available characterize relationship action prescription offer advisor client prescription term behavior interface Requests prescriptive Video Screen Sketch screen look llke cllent follow advlce Tape Screen Sketch 2 screen look like client close approximation Compare Identical Identical Different w Click Keystroke Text Record ActivityScrlpt Canonical Event Level Description Advice Texts ACtN ACtNl ACtN2 Clients Subsequent Actions Enumerated Clausal Action Prescriptions k Translate Event Level t Compare Identical Different Different Effective Efficient follow effective Inefficient follow Ineffective Inefficient Following Figure 3 1 Diagram Data Derivation advice constitute 87 observed request able measure advice effectiveness majority advisory exchange observe order clarify quantify prescriptive advice follow behavior video activity script follow create new datum Consulting video tape necessary analyst perform datum augmentation task prescriptive instance advice 1 sketch interface screen state 2 deconstruct give advice individual action prescription 3 mark client subsequent action sequentially 4 note time sketch produce video tape activity script capture screen state crucial configuration 1 idem screen screen look like advice follow perfectly 2 screen look like client behavior bring screen approximate closely ideal screen prescribe advice second deconstruct advice individual action prescription grammatical clause advice prescribe action underline isolated clausal action description sequence event level action 1 necessary perform prescribe action determine ideal sequence event level 1a predetermine level interface action exist express possible action sequence interface action form basis comparison event level action actually perform client client actual event level action occur time advice receive time client screen closely approximate ideal screen state implicitly prescribe advice collect analysis collect client action compare ideal action prescribe advice mark correspond correspond prescribed action fourth time close approach ideal screen note Figure 3a1 illustrate derivation new datum old new datum inform judgment presence ie prescribe action miss sequence ie prescribe action complete prescribe order insertion extraneous action8 ie unprescribed action perform faulty trandation8 action description8 ie prescribe action perform incorrectly time ie long advice follow behavior achievement ie relation client screen state bear ideal implicitly prescribe screen state armed datum concern relationship prescribe action perform action begin characterize advice follow difficulty previously observe formal way categorization advice follow behavior sequence Presence sequence extraneous action insertion faulty action translation time achievement judgment enable categorization advice follow behavior sequence effective efficient follow table 3 1 Summary Advice follow Client Session Total Advisory Episodes Total Prescriptive episode Exact follow Exact Screen Rearrangement Exact Slip Effective Efficient follow effective Inefficient Following Inefficient Ineffective follow effective inefficient follow inefficient ineffective follow threefold categorization operationalize rule rule decide client action effective ineffective advice follow sequence achieve prescribed state categorize effective advice follow classified ineffective follow second rule decide client action efficient inefficient advice follow sequence contain prescribed action order extraneous action insertion faulty version action categorize efficient follow classified inefficient follow Exceptions rule instance move icon screen form neater proportion configuration slip 2 difficulty sequence action 4 result Table 3s1 summarize frequency advice follow categorization selected client participate total 39 advisory episode 34 87 prescriptive nature effective follow case advice contain average 15 prescribed action description phrase translate average 59 event level action client take average 85 second follow advice case extraneous action introduce effective inefficient case inconsequential take average second 3 ineffective inefficient follow case advice contain average 25 prescribed action description translate average 69 interface event level action average 139 action client take average 264 second reach close approximation ideal screen state Ideal screen state contain average 115 object icon link average ineffective inefficient case client close approximation lack 13 necessary screen object contain 21 extraneous screen object expect practice advice client advice follow performance improve session central issue study figure 3 2 illustrate production extraneous action observe decrease function time r 30 accord observed correlation session start 55 advice follow action expect inefficient hour half later end session average expect proportion fall 18 evidence indicate client follow prescriptive advice effectively efficiently slightly half case case client perform twice action need time time reach prescribed state go wrong case 2it appropriate classify tidiness action extraneous slip occur client open menu quickly move mouse cursor item menu slip menu edge automatically close menu client immediately open menu move mouse cursor item slowly time select 3once client open wrong menu close slip client sweep half complete link screen client highlight icon marginally associate prescribed step 00 1 r tt Seconds Session Figure 3 2 Scattergram Proportion Extraneous Seconds Session Advice follow case 2 Figure 3 3 Proportion Extraneous Actions Advice follow Scattergram Proportion Extraneous Advice Abstractness Advice follow case advisor poor advisor answer objection advisor expert master teacher mean domain expertise master teaching ability imply perfection advisor advise poorly occasion interaction possibility enable type english exchange limit initiative restrict continuance rich mediate assistance effectively probable typed exchange facile spoken conversation hypothesize difficulty abstractness advice measure ratio number action prescription advice number interface event level action translate evidence support view consider case advice follow slight negative correlation r       016 abstractness advice proportion client action extraneous respect prescription figure 3 3 Failed prerequisite presupposition Detailed analyse advice follow action action relation individual action prescription relevant advice reveal pattern fail prerequisite presupposition8 advice generation Records advisor think aloud advice justification story confirm failure Prescriptive advice fail violate Blooms masterff learn thesis importance prerequisite advisor presume client know client actually know failure case client lack small critical detail hinder advice follow Table 3l2 exhibit fail prerequisite presupposition advisor episode result ineffective inefficient follow Note Client 2 episode 34 advisor continue produce advice accordance fail presupposition client know port link Client 2 episode 567 advisor continue fail presupposition client knew mean datum column Client 3 Episodes 2 4 advisor continue fail presupposition client know link icon create previously observation suggest expert human advisor marshal relevant available behavioral evidence reformulate fail prerequisite presupposition perform time critical task advice production 5 discussion implication SYSTEM construction advisory system construction significant implication stem poor advice follow behavior advice giver fail prerequisite presupposition result study suggest roughly half request plan type information end deficient follow behavior issue license interaction style major system architecture second mechanization advice generation suffer great different limitation human cognition human advisor fail account mount client behavioral evidence machine program fail evidential reasoning weak way point small niche mechanically produce advice consistently salient quality advice produce cognitive limit human expertise memory load importantly sure ahead time presupposition ground advice correct wrong advisory system build aspiration actually help half time Table 3 2 advisor fail Prerequisite Presuppositions Ineffective Inefficient Advice follow Episodes Client 1 Episode 1 advisor presume client knowledge necessary follow scratchpad method dataset copying Client 1 Episode 11 advisor presume client perceive critical space character expression Client 2 Episode 3 advisor presume client know icon port link attach Client 2 Episode 4 adviser presume client know icon port link attach Client 2 episode 567 advisor presume client know datum column Client 2 Episode 11 advisor presume client know appropriate dataset N Client 2 Episode 13 advisor presume client know port select column icon link constant price n appropriate dataset Client 2 observe Client 2 Client 3 Client 3 Client 3 Client 3 Episode 14 advisor continue presume client know port link time advisor ha instance indicate client nt know Episode 19 advisor presume client know create procedure link Episode 1 advisor presume client know datum column episode 2 advisor presume client know create procedure link Episode 4 advisor presume client know create procedure link Episode 5 advisor presume client properly perceive relevant aspect give constant expression construct way fact seriously4 domain advice engineer system rationale base immutably correct presupposition kind continuance recognition fail prerequisite presupposition 5 option limit tractable domain toy problem leave second option come surprise find advisor make faulty presupposition face face advisory exchange deal fail prerequisite presupposition way experiment forbid Face face advice overcome cognitive limitation conversational repair 4this claim consistent Brown Newman 1985 advocacy design management trouble 5this recognition work perform client machine client case interaction technique available client express recognition faulty presupposition machine ease logic produce communication spawn Ndeteetive process watch failure presupposition ground produce communication iterative process presupposition refinement realistic manmachine interaction iterative presupposition refinement frontier human computer interaction research feasible immediate approach leave recognition unsatisfactory advice fail prerequisite presupposition client provide meaningful easily accessible continuance current advice elaboration action description definition term advice deictic reference term demonstration example continuance class piece advice continuance Intelligent Users Assistance Group MCCs Human Interface Laboratory construct advisory system incorporate approach empirical evaluation underway 6 6jean MeKendree MCC begin empirical study efficacy version advisor system incorporate continuance approach Loren Terveen University Texas MCC investigate feasible man machine conversational pattern cope fail presupposition general 6 acknowledgment thank Jim Miller Mike Masson Tim McCandless Loren Terveen Jean McKendree numerous helpful discussion Jim Hollan Elaine Rich Peter Polson read early draft paper Susan Cook Maria Nasr assistance analyze datum
34,1985,ABSTRACT past computer graphic effort researcher demonstrate polygon model produce image curve surface appear smooth accurate author know attempt appraise imagery multiple human observation rating effectiveness curve surface imagery generate polygon model investigate judgment study Research subject evaluate sphere model imagery derive polygon density shade procedure include flat shading shade interpolation Gouraud normal interpolation Phong Results evaluation indicate little gain reduce average polygon area approximately ii0 pixels polygon sphere 95 pixel radius display 512 x 512 resolution monitor Evaluations shade normal interpolution place polygon image quality reasonably close ideal image evaluation indicate normal interpolation slightly superior shade interpolation shade interpolation require significantly computation significantly result study provide strong support notion polygon effectively produce smooth shaded imagery curve surface model 1 BACKGROUND base speed complexity criterion application polygon approximation curve surface model recommend display operation order quantify effectiveness imagery derive polygon approximate model sphere imagery derive polygon density shading procedure evaluate form faithfulness aesthetic appeal paper begin presentation background information discuss polygon approximation curve surface lighting model polygon render technique ii POLYGON APPROXIMATION CURVED SURFACES system utilize curved surface represent parametric form surface describe set bivariate equation map uv value typically range 0 parameter space infinitely thin surface dimensional XYZ Euclidean space mapping illustrate figure parameter euclidean representation side topology Parametric Space Euclidian Space v Y x FIGURE Parametric Surface Representation easy way subdivide parametrically define surface polygonal area define subdivision parametric space easily accomplish define grid uv point fall surface parametric space transforming point surface function euclidean space point iteratively connect form set sided polygon approximate form surface straightforward way extend concept parametric subdivision approach use euclidean space criterion define location parametric subdivision grid point example arc length equally subdivide subpatch boundary curve iterative curvature arc length procedure basis equal subdivision subpatch boundary curve technique serve place polygon surface area high curvature order render parametric surface image resolution accuracy Catmull develop subdivision technique base size location individual picture element Subdivision perform Catmulls algorithm order generate polygon instead parametric subdivision recursively calculate subpatch region consideration fit single picture element result imagery smooth possess accurate shading process computatiqnally expensive approximation recalculate new image paper orient polygon approximation transform display effectively minimal computation 12 surface shading shading procedure polygon base utilize lighting model order determine shade display give image pixel recent year study lighting model receive great deal attention computer graphic world produce beautifully realistic imagery goal select realistic lighting model efficient suited interpolation polygon vertex assume accurate geometry shade relate information define polygon vertex utilize knowledge surface light source environment characteristic lighting model derive order simulate visualization effect synthetic image lighting model compose essentially component ambient reflection diffuse reflection specular reflection recent ray trace algorithm develop mathematically follow path light ray reflect refract absorb object model reasonably accurate value light display derive algorithm produce spectacular result computation time image generation great measured cpu hour cpu day order reduce cpu requirement reasonable level approximation base general assumption 13 polygon rendering general technique generate shaded surface image polygon approximate model curve surface order increase computation flat shading shade interpolation surface normal interpolation shading technique utilize lighting model describe previous seDtion imply flat shading utilize single intensity value visible polygon surface area computationally light model calculation require polygon single shade value need store display process Curved surface render manner tend strong faceted appearance result cluttered visual interpretation cluttering effect intensify Mach band effect cause accentuation perceive edge facet large difference shade accurate surface normal information provide polygon vertex shade calculate vertex desire lighting model utilize accurate value procedure interpolate shade desire point polygon result smoothly shade image accurately represent surface model enhance perception reduce image complexity popular method shade interpolation commonly refer Gouroud shading use step interpolation approach easily adapt scan line base procedure scan line application Gouraud method intersection line segment scan plane polygon bre find shade value segment endpoint interpolate associated polygon vertex shade value Subsequently shade interpolate pixel locate segment endpoint shade interpolation linear Mach band effect appear particularly boundary large polygon area great curvature addition highlight miss polygon face light source vertex normal improve shading accuracy attain interpolate polygon vertex normal precalculate shade value Mach band effect reduce lighting model apply point reduce linearization normal interpolation Phong shading allow surface highlight faithfully reproduce polygon face light source unfortunately compute cost greatly increase value normal vector interpolate instead shade value light model calculation perform visible surface point additional storage requirement consider 2 hypothesis purpose study analyze relative value polygon density shade technique term human preference preference express way aesthetic appeal faithfulness form hypothesis test evalution procedure quality imagery improve flat shading shade interpolation shade interpolation normal interpolation 2 high density polygon produce well imagery second hypothesis predict curvature response line polygon density rating objectively high density polygon produce well imagery subjectively image accuracy increase point diminish return reach increment accuracy produce denser polygon approximation surface result small increment relative judgment possibility test quadratic component subject rating additionally curvature response line polygon density rating produce basis rough indication level polygon density recommend reasonable image quality 3 METHODS total 27 sphere image derive 9 polygon model evaluate participant test run computer graphic laboratory General Electric Corporate Research Development day period participant require minute evaluate 27 image 31 subject thirty subject ask study work vicinity author PR Atherton employ General Electric subject typically engineer math physics background range year college phd graduate approximately subject work area dimensional computer graphic solid modeling participant work area like robotic automate inspection artificial intelligence age subject range 20 34 year female 32 STIMULI sphere vary polygon size select test model constant curvature characteristic sphere allow influence polygon size versus curvature relationship exist single image addition familiarity sphere shaped object offer physical basis people evaluation Sphere polygon model generate parameterically subdivide    bicubic patch sphere model equal uv increment total polygon model different polygon density produce test image polygon model generate flat shading shade interpolation normal interpolation procedure relatively simple shading model select order minimize computation produce area highlight range 256 grey level intensity ambient light level 55 image calculate 512 x 512 resolution average 2 x 2 pixel basis result 256 x 256 resolution image reduction process allow image display screen time purpose comparison Characteristics photograph test image present Figure 2 subject compare 27 test image high low quality anchor image enclosure 16 polygon render flat shading select low anchor image upper anchor image model polygon pixel appear a11 Number Polygons Average Number Pixels Visible Polygon 1513 CPU second Required Generate Image VAX 11780 Flat Shade Normal ShadinglInterpolationlInterpolation 363 369 372 373 375 385 386 388 390 340 344 354 358 367 368 370 371 375 759 769 772 780 787 789 810 819 825 2 36 polygon 5 144 polygon 7 256 polygon 9 399 polygon figure 2 Characteristics photograph image human evaluation study Laboratory set figure 3 image evaluation setup 27 evaluation image low anchor image upper polygon render technique order generate upper end test image special program write produce unique light model shade value pixel fall sphere anchor image place color video monitor upper leave upper right quadrant screen 27 image evaluate present time low center screen photograph monitor comparison setup test image find Figure 3 33 test procedure participant bring computer graphic lab room position chair color video display monitor figure 3 distraction present room occupant busy work 27 image evaluate present random order subject ask rank image form faithfulness aesthetic appeal scale 0 i0 subject total 54 judgement instruction present video computer terminal response store computer file later access statistical analysis 4 RESULTS tabulation evaluation response find Reference mean value image evaluation graph figure 4 analysis purpose figure 4 aesthethic form faithfulness evaluation separate distinct graph curve graph represent quality evaluation versus number Form Faithfulness Evaluation NormalInterpolation Interpolatlon Aesthetic Evaluation Number polygon NormalInterpolation F l t Shading Number polygon figure 4 Graphics evaluation result polygon shade technique graph predict curvature response line polygon density rating order identify significant effect judgement study 2 x 3 x 9 repeat measure analysis variance plan contrast undertake need description repeat measure analysis study find Appendix result analysis summarize Figure 5 overall significant effect aesthetic form evaluation study contrast polygon shade technique significantly different small difference normal interpolation shade interpolation figure 4 main effect linear component Density 1 show increase rating correlate increase image accuracy predict quadratic contrast indicate significant proportion variance explain flattening curvature response line polygon density rating evaluation curve aesthetic faithfulness graph figure 4 follow similar path relate polygon density image quality term image quality mean increase number polygon important low end polygon density reap minimal advantage high end polygon density particular set image little quality gain go 256 polygon 400 polygon Source Evaluation Subjects x Evaluation Shading 1 Shading 2 Subjects x Shading Density 1 Density 2 Subjects x Density Evaluation x Shading Subjects x Evaluation x Shading Evaluation x Density 1 Evaluation x Density 2 Subjects x Evaluation x Density Shading 1 x density 1 Shading 2 x density 1 Shading 1 x density 2 Shading 2 x density 2 Subjects x Shading x density 1412 29 49 4357 1 4357 664 001 6154 6154 937 001 3811 58 66 66364 1 66364 110607 001 6387 1 6387 10645 001 1398 232 06 282 2 141 16 n 5220 58 90 1810 232 08 785 1 785 516 001 109 109 72 01 7053 464 15 Evaluation x shading 1 x density 1 06 l 06 12 ns Evaluation x shading 2 x density 1 01 1 01 01 ns Evaluation x shading 1 x density 2 54 1 54 104 01 evaluation x shading 2 x density 2 25 1 25 48 05 subject x Evaluation x Shading x density 2413 464 05 Total SSeffect J SSerro 107743 isso     SSsubjecs 108647 Evaluation dr l Aesthetic vs Form Faithfulness Shading dr 2 shading 1    Flat Shading vs Shade Interpolation Shading 2    Flat Shading Shade Interpolation vs Normal Interpolation Density df 8 Density Linear Element Density 2    Quadratic Element 9 Levels Polygon Density Subjects dr 29 30 participant study ss Sum square df Degrees Freedom MS Mean Square F group Variancewithin group Variance P significance Level FIGURE 5 analysis variance summary represent sphere contrast application use polygon model typically require half time storage processing time handle increase polygon density term polygon size evaluation test indicate little gain term image quality decrease average polygon area image space ii0 pixel 71 pixel sphere model 95 pixel radius display 512x512 resolution significant second order interaction effect shading type linear component polygon density Density 1 show evaluation difference type shade different linear component Inspection Figure 4 suggest linear trend strong normal interpolation shade interpolation flat shading appear significant difference image quality shade normal interpolation technique flat shading technique 200 polygon density level little difference cpu time require produce shade interpolate image flat shaded image figure 2 consequently little extra overhead shade interpolation cost flat shading appear worthwhile distinct advantage normal interpolation shade interpolation 200 polygon density level advantage appear percent extra processing storage cost normal interpolation great shade interpolation preferable efficiency minded implementation important observation graph figure 4 evaluation shade normal interpolation technique tend close ideal image value 256 polygon density level observation support hypothesis polygon model produce effective imagery curve surface significant interaction effect indicate repeat measure analysis variance way interaction evaluation shade density little practical importance context present research general utilization curve surface polygon approximation smooth shaded display application useful rule thumb define average polygon size give radius curvature express term screen resolution single experiment provide information deduction subjective judgement experiment utilize different sphere radius perform meaningful trend relationship polygon size radius curvature image quality identify robust analysis involve experiment test variation different image generation characteristic include model geometry lighting color screen resolution 5 SUMMARY subjective judgement aesthetic form faithfulness characteristic polygon base curved surface imagery sphere test object model level polygon density image different polygon shade technique sphere display 95 pixel radius 512 x 512 resolution monitor little evaluated image quality change shade technique average polygon area 110 pixel polygon evaluation close ideal shade normal interpolation technique shading technique normal interpolation evaluate slightly superior shade interpolation shade interpolation effective technique image quality computational efficiency important consideration judgement study result lend great deal credence use polygon approximation curve surface smooth shaded imagery standpoint reduce algorithm complexity improve program efficiency basis human evaluation image quality form faithfulness acknowledgement like thank General Electric Corporate Research Development Rensselaer Polytechnic Institute provide positive environment research grateful Professor Peter Burt help focus polygon density issue subjective testing 30 people take study
35,1987,abstract empirical study examine effectivenesss different version self instruction manual word processing system skeletal version explicitly state essential information inferential version user infer essential information Rehearsal version like skeletal manual add opportunity rehearse explicitly state information Lengthy version add nonessential explanatory descriptive information skeletal version good learning performance obtain inferential approach particularly realistic task introduction spread inexpensive personal computer system issue design effective self instruction manual important Carroll 2 argue minimalistic approach designing instruction manual approach advocate drastically shorten instruction manual eliminate nonessential information advocate immediately involve learner realistic task Carroll devise approach cater kind natural learn style user exhibit learn word processor 3 study Carroll colleague 4 show minimal manual IBM Displaywriter word processor yield efficient learn standard self instruction manual Displaywriter substantial impovement learning effectiveness particularly strike effort improve instruction manual Displaywriter yield little improvement learn 5 minimal approach instruction manual design promise minimal manual previous study differ way standard manual compare possible determinine difference contribute improvement learn goal current research program isolate factor involve minimal instructional design determine contribute improvement learning study report examined factor shortening training manual improve learn provide rehearsal cover material help have user learn material infer effective Manual Versions Comparison investigate relative contribution factor write comparable version self instruction manual IBM Displaywriter different group new user learn use Displaywriter manual version compare learn use system manual version Skeletal Manual basic version write contain essential information system state tersely explicitly lengthy Manual add descriptive explanatory summary information skeletal manual yield manual approximately 50 long version Inferential Manual approximately length Skeletal Manual guide user infer information systemm explicitly state Rehearsal Manual Written Inferential Manual approximately length Inferential Manual point inference prior information manual manual statement lead user think prior information manual state explicitly addition statement lead user tell ie rehearse example manual version distinction clear early topic manual user learn type paragraph note save press END key Displaywriter keyboard section Skeletal Manual succintly tell user press END key save file exit typing area display type TASKS menu inferential manual hand tell user END save file ask question lead user infer typing area exit typing TASKS menu display Similarly Rehearsal Manual explicitly state skeletal ask question cause user review step question lead inference like Inferential Manual Lengthy Manual give information skeletal manual precede section page automatic carriage return follow summary section contain manual version note add information Lengthy Manual filler material potentially useful definitely irrelevant essential omit manual version comparable manual compare Lengthy Manual rest evaluate big effect merely shorten manual compare Inferential Manual Skeletal Manual evaluate have user infer information advantage merely tell information compare Rehearsal Manual Skeletal Inferential manual tell rehearsal effect inferential effect explicit rehearsal Research Procedure Subjects experiment recruit Yale University community student staff pay participate subject completely computer naive computer expert prior experience IBM Dispplaywriter people sort experience computer think appropriate population draw subject subject spend 2 hour go self instruction manual Displaywriter instruct manual proceed manual pace take series test learn total 20 subject different group read manual version training testing subject videotape time stamp obtain main result study tabulate time subject spend training perform assign task result subject eventually accomplish task training testing time complete task error rate measure learn report training time ie time take instruction manual report time complete different kind testing task training time result give Table 1 Table 1 Learnin2 Times Manual Version Time take jn minute Inferential Skeletal Rehearsal Lengthy Subjects Inferential Manual spend time training time spend Skeletal Manual essentially Rehearsal Lengthy Manuals significantly slow Inferential skeletal one significantly different Fl16451 p05 read great material Lengthy Manual rehearsal cover material Rehearsal Manual slow learner simple inference require Inferential Manual take time material explicitly state Skeletal Manual break testing time accord level learn talcing place specifically separately examine time Simple Learning Tasks command task like insert letter word Command Sequence Tasks task require command like center move text realistic task create revise letter memo result breakdown meaningful result differ somewhat different kind learn table 2 give time subject different manual group complete Simple Learning Exercises Table 3 Command Sequence Learning Test Times Manual Version Time take second inferential 266 Skeletal 300 Rehearsal 333 Lengthy 371 show Table 3 subject learn Inferential Skeletal manual shmificantlv well Command Sequence exercise Rehearsal Manual subject fl16674 p05 Inferential Manual subject emerge well overall group clear Skeletal Manual subject Simple Leaming exercise table 2 Simple Learnina Test Times Manual Version Time take second Rehearsal 131 Inferential 133 skeletal 142 Lengthy Table 4 give time subject different manual version complete test exercise involve Realistic task create revise letter memo Table 4 Realistic Task Leamina Test Times Manual Version Time take minute show Table 2 subject learn Rehearsal Inferential Manuals take significantly time complete Simple Learning exercise Skeletal Manual subject Lengthy Manual subject slow skeletal one Fl16594 p05 take Rehearsal subject long cover material training master Simple Learning task inferential subject skeletal subject fast train inferential subject master Simple Learning task Lengthy Manual subject got worst take long train master material group Simple Learning rehearsal sufficient slow training table 3 give time subject different manual version complete test exercise involve Command Sequence Learning Inferential Skeletal Rehearsal Lengthy 113 153 126 166 150 219 188 229 result Table 4 subject Inferential Manual significantly fast realistic task group Skeletal Manual subject bad inferential one significantly well Rehearsal Rehearsal subject significantly well Lengthy Manual subject F9116543 p05 large scale realistic task require overall planning command subject Inferential Instruction Manual superiority manual group Discussion note overall Inferential Manual yield well learn manual version particularly interesting realistic task inferential subject excel interpretation result addition specific procedure accomplish task system group master degree inferential subject acquire general concept system organize function mental model system 6 firm conceptual basis allow inferential subject easy time move acquire advanced topic basic one present instruction manual inferential subject easy time group learn advanced topic subject future research effect worth emphasize particular note Lengthy Manual yield bad performance version appear substantial improvement learn merely shortening instruction manual fairly mechanical fashion surprising subject learn Lengthy Manual try store memory learning memory search look relevant information testing note simple single command learning provide Rehearsal Manual short explicit manual call rehearsal cover material sufficient little long initial learn Inferential Manual want new user gain overall conception system need effectively perform large scale realisitic task designing instruction manual require user learn inference good approach study raise issue research issue Skeletal Manual well expect particularly Command Sequence Tasks suspect despite effort design appropriately explicit Skeletal manual subject engage inference manual well purely skeletal approach yield course speculation point currently investigate possibility group subject verbalize thought learn manual version examine verbal protocol think process learn look case engage inference importantly show inferential approach instruction manual design effective need investigate good design Inferential Manuals current Inferential Manual different kind inference require user example time manual give user general procedure infer specific version apply specific case time manual give user specific procedure case infer analagous specific procedure apply case infer general version specific procedure way future study intend vary systemmatically kind inference require determine well include design Inferential Instruction Manuals addition have practical importance instruction manual design type inference relate important issue model human learning memory example Andersons ACT model 1 stress importance initial learn general specific procedure inference Schanks MOPS model 7 emphasize specific specific inference plan investigation inference type instruction manual address important theoretical issue human learning
36,1987,ABSTRACT automate method synchronize facial animation record speech describe method common speech synthesis method linear prediction adapt provide simple accurate phoneme recognition recognize phoneme associated mouth position provide keyframe computer animation speech parametric model human face linear prediction software implement speech resynthesis synthesis retain intelligibility natural speecli rhythm achieve synthetic realism consistent computer animation Speech synthesis enable certain useful manipulation purpose computer character animation RESUME Cette presentation decrit une methode automatique pour la synchronisation danimation faciale avec un texte pre    enregistre Dans cette approche adapte une methode courante en synthese de la parole prediction lineaire la reconnaissance des phoneme de facon simple et precise Les phoneme identify sont ensuite associe des position de bouche qui seront elle meme utilisees comme image clef dan le processus danimation par ordinateur dun modele de visage humain parametre Le logiciel de prediction lineaire une fois implemente peut aussi etre utilise pour la resynthese de la parole La synthese conserve lintelligibilite et le rythme nature du langage ainsi quun realisme synthetique adapte aux technique danimation par ordinateur La synthese de la parole permet par ailleur des manipulation efficace dan le contexte de animation de personnage par ordinateur introduction viable computer face model developed81 animation employ model date rely nonautomated technique rotoscope ideally artificially expressive end computer face model intelligently translate animation script sequence facial movement expression enact script give animator conceptual model control acting process paper consider limited problem technique describe automatically identify mouth position correspond give speech segment lip    synch approach obtain representation speech time phoneme sequence phonetic script establish phoneme mouth position correspondence order drive parametric face model facial animation system describe Pearce et al include approach synchronize speech approach phonetic script specify directly animator phonetic script input phoneme speech synthesizer achieve synchronize speech approach appropriate desire speech specify textual auditory form quality rulebase synthetic speech acceptable purpose drawback approach difficult achieve natural rhythm articulation speech time pitch define script derive rulebase text speech synthesizer typically prosody quality improve somewhat add information pitch loudness indication script alternative approach obtain desire phoneme sequence analyze digitize speech Pearce et al note current speech recognition technology somewhat error prone fact system capable identify isolate word problem considerably simple recognize speech Speech recognition involve transform speech representation speech formant frequency emphasize pitch information largely remove parse representation identify word task difficult acoustic preprocessing step generally effective require derive phonetic script analysis approach adopt linear prediction parametric speech synthesis model obtain speech parameter identify phonemes limited set correspond visually distinctive mouth position Linear Prediction Speech Model Linear prediction model speech signal s1 broadband excitation signal x1 input linear autoregressive filter weight sum input past output filter ISt OtXt Stk abstract fairly accurate model speech production filter model vocal tract mouth tongue lip position excitation signal approximate acoustic signal produce vocal cord useful model human speech production perception likewise separate pitch determine vocal cord tension phonetic information determine vocal tract filtering illustrate sound fix vowel vary pitch vice versa mouth position vowel entirely independent pitch speech resynthesis excitation signal x1 approximate pulse train result pitch vowel sound uncorrelated noise result consonant whisper vowel depend filter aThe filter coefficient vary time constant short interval analysis frame vocal tract shape assume constant analysis frame time fast track perceptible speech event somewhat long voice pitch period permit deconvolution pitch information analysis frame time 15n20 msec satisfie condition correspond 50n65 framessecond suggest sample mouth movement standard animation rate 24 30 framessecond fast speech event cf Fig 1 purpose synchronize speech animation convenient choose analysis frame rate twice film video frame playback rate case frame rate reduce desire animation rate simple lowpass filter alternative generate animation high frame rate eg 60 framessecond apply filter frame generate animation analysis frame supersample approach reduce temporal aliasing result quantize facial movement keyframe animation frame rate source difficulty previous work Q Solution Algorithm aGiven frame digitize speech coefficient determine minimize squared error actual predict speech number sample number formulation square linear prediction simple derivation result autocorrelation method 7 linear prediction give derivation view speech signal random process stationary statistic analysis frame time expect squared estimation error e e s1    oxt stk J2 minimized set proof determine minimum involve rewrite 2 quadratic form obtain Fig 1 Speech spectrogram second pitch information remove primary vowel formant visible dark band vowel typically extend number animation frame transition area difficult track standard animation frame rate    fEs1 s1    oz1 s1 a1s1 1s1 o kl 1 j p excitation time t uncorre late previous speech signal expectation product oz1 s1 zero expectation term s1 s1 j    k th value autocorrelation function substitution result system p e arj k Rj matrix form l rp 1 r p 2 awhich solve give analysis frame auto correlation function r estimate directly speech signal 11 l E1 L 1 s1 s1 L length analysis frame sample autocorrelation stationary process function R j    k symmetric Toeplitz matrix have equal element diagonal permit use efficient algorithm available inversion matrix Levinson recursion 4 number formulation linear prediction choice particular approach depend largely one mathematical preference reference 1113 provide speech orient overviews autocorrelation covariance formulation 7 exhaustive interesting treatment subject solution algorithm 3 publish Fortran implementation Levinson algorithm give 7 version routine auto include IEEE Signal Processing Library l efficient solution obtain Durbin algorithm make use fact righthand vector 3 compose data matrix algorithm describe 11 present pascal algorithm 13 alternatively 3 solve standard symmetric general matrix inversion routine extra computational cost note pass linear prediction special case Wiener filter computer graphic application stochastic synthesis 6 synchronized Speech aThe coefficient result linear prediction analysis describe short term speech spectrum pitch information convolve analyze speech frame classify euclidean distance shortterm spectrum spectra reference phoneme spectrum obtain evaluate magnitude Hz Po z transform 1 n point complex z plane half unit circle z ej d case denominator 4 effectively discrete Fourier transform negate zero extended coefficient sequence 1 1a 2 ap 00 length 2n permit implementtio FFT resolution eg N 32 appear sufficient linear prediction spectra smooth direct identification aapproach compare coefficient coefficient reference phoneme square identification coefficient perform poorly appear norm require 7 selection reference phoneme involve compromise robust identification phonetic visual resolution Read Lips book book cartooning identify visually distinctive mouth position correspond sound Fig 2 previous synchronize speech animation typically approximately 10o15 distinct mouth keyframe 1252 current reference phoneme set con    Fig 2 portion lipsynch chart vowel indicate sample word hat v heed obtain 1121 popular Read Lips book hoot hug hoe sist vowel word hatehathotheedheadhithoehughoot pronounce american english consonant msf thirty phoneme speak English 3 counting combination sound diphthong reference set include vowel approach speech synchronization profit fact vowel easily identify linear prediction speech model visually distinctive mouth position correspond vowel case Fig 2 consonant generally short vowel find accurate vowel identification possible linear prediction identification approach reference phoneme Currently 20khz audio sample rate p 24 1 number coefficient choose rule thumb 7 cne pole conjugate zero pair denominator polynomial 4 kHz plus extra coefficient model overall spectrum shape semantically important information speech lie 4000o5000 Hz demonstrate intelligibility radio audio sample rate IOkHz sufficient analysis application lipsynch high sample rate allow speech datum manipulate resynthesize reasonably high quality sound track Consonant transition area theoretical difficulty case example p onounce stop consonant t end word mouth remain open follow aspiration period silence lead word purely acoustically base lipsynch technique incorrectly cause mouth close period difficulty nasal m present inverse situation mouth close sound production viability automate lipsynch method depend nature purpose facial representation follow Transmission Presence low bandwidth teleconferencing project MIT Architecture Machine Group 112 include synchronize speech simple filter bank sound categorization method method able reliably distinguish sound sufficient create tolerable low resolution facial animation informal experiment indicate people read lip easily ascertain sound correspond give mouth position demonstrate attempt guess sound represent Fig 2 believe accurate rhythm mouth movement fundamental lipsynch accuracy mouth position necessary closeup view face Face Model lipsynch system develop employ parametric human face model describe 98 model recently extend head version parametric modeling approach allow face directly intuitively manipulate limited fairly natural set parameter bypassing effort involve model digitizing keyframe keyframe base approach face model parameter relevant mouth positioning lipsynch include control jaw rotation lip opening raise upper lip low lip tuck fv sound movement corner mouth parametric model allow expressive structural parameter manipulate animate independently compute script include lipsynch expressive parameter apply available character employ model Fig 3 show face model character t square Figs 4 5 F hoe vowel position face Linear Prediction Speech Synthesis linear prediction software implement resynthesize original speech enable manipulation useful animation faithful synthesis approach difference signal residual original speech output linear prediction filter synthesis excitation signal x1 s1     s1 residual signal approximate uncorrelate noise consonant whisper vowel approximate pulse train voice vowel linear prediction analysis residual encode information original speech synthesize speech highly intelligible retain original inflection rhythm subtle synthetic quality appropriate computer animation Variations form synthesis commonly speech compression reader haq doubt hear example produce dedicated linear prediction chip fig 3 Face model t square character Vocoder quality robot speech obtain excitation signal synthetically generate pulse train random sequence Levinson Durbin algorithm return frame prediction error magnitude compare threshold determine form excitation use eg normalize error great 03 typically reflect consonant whisper voice important manipulation easily possible case synthetic excitation speed slow speech accomplish simply access coefficient frame fast slow rate voice pitch control excitation speech rate change produce Mickey Mouse effect linear prediction software implement general purpose Lisp base computer music system ii4j additional sonic manipulation reverberation genderage change spectrum shift etc directly obtainable Evaluation expressive character animation promise provide human impact generally absent computer animation automate lipsynch speech manipulation technique step goal automate lipsynch necessarily inferior rotoscope adequate purpose probably preferable non rotoscope manual lipsynch cartoon animation provide pass desire movement case manual improvement require computer aid character animator fight strong perceptual effect character model realistic remain flaw prominent disturb fully expressive semiautomate character animation require lipsynch means automatically generate characteristic head movement prosodic nod eye movement expression etc speech problem easy speech synchronization respect head movement likely atypical simply wrong respect appear difficult Acknowledgements work draw experience obtain MIT Transmission Presence project like thank reviewer helpful comment
37,1986,CH I86 Proceedings April 1986 Designing Quality Voice Analysis Listeners Reactions Synthetic Voices Mary Beth Rosson IBM Thomas J Watson Research Center Yorktown Heights New York J Cecala Yale University New Haven Connecticut subject listen set synthetic voice reflect crossing voice quality head size pitch richness smoothness listener evaluate voice sixteen perceptual scale judge voice appropriateness voice output scenario Factor analysis perceptual rating recover factor fullness clarity similar analysis appropriateness rating reveal situational factor information entertainment feedback analysis indicate voice quality associate situational factor different suggest way optimize voice particular purpose Spoken language convey linguistic information contain quality voice speak style enable identification speaker result interpretation color listener knowledge speaker unknown speaker voice perceptual quality influence listener aesthetic reaction voice result attribution speaker current affective state personality believe subjective reaction play important role acceptance voice output application result research goal development use high quality synthetic speech understand implication specific perceptual quality appropriateness voice different communicative context evidence consequence listener reaction synthetic voice mount numerous anecdotal example course typical housewife refuse listen telephone questionnaire administer machine voice time listener laugh hard silliness voice comprehension impossible systematic evidence report Rosson Mellen 1985 experiment user rating 0075 usability simulate voice output application relate evaluation synthetic voice success system understand variable contribute reaction critical success voice output system analyze voice characteristic simplify distinction quality voice conceptualize inherent timbre style voice function manner word produce intonational durational characteristic example expect set characteristic influence listener reaction eg Walden Montgomery Gibeily Prosek Schwartz 1978 difficult analyze effect wide range voice variation initial effort elect focus effect voice quality characteristic previous work voice quality direct identify source perceive talker similarity body work difficult summarize researcher tendency use acoustic measure perceptual rating predictive measure case acoustic measure appear tat fundamental frequency formant space important cue identify talker Carrell 1984 Kuwahara Ohgushi 1984 judging voice similarity Murray Singh 1980 Voiers 1964 fator analysis technique perceptual rating find v01ce tend group function magnitude clarity roughness animation study suggst whih voice identify compare provide information listener reaction different kind voice relevance present research goal work dicte uncovering implication different voice qual    1t1e ost direct identify personality attnbutjon listener speaker example Addington 1968 conduct comprehensive study examine relationship number perceptual rating train judge personality attribution naive listener factor analysis identify structure listener attribution find listener evaluate man term physical emotional power variable woman term social faculty analysis relationship April 1986 rate perceptual variable personality attribution consider individual correlation perceptual personality rating difficult interpret recent work Streeter MacDonald Apple Krauss Galotti 1983 find reliable effect voice quality difference fundamental frequency amplitude listener rating speaker stress researcher find evidence glottal excitation function impact listener rating voice naturalness Carrell 1984 Holmes 1973 Rosenberg 1970 finding good starting point selection voice appropriate give situation actually examine appropriateness implication study Cox Cooper 1981 contrasted appropriateness different voice telephone announcement task predictive measure factor derive set personality rating find factor agreeableness assertiveness important judge appropriateness clear perceptual quality drive personality attribution sum previous work address component current question direct attempt understand implication specific perceptual quality appropriateness voice different situation work initial step filling gap synthesize voice vary voice quality dimension obtain perceptual appropriateness rating listener factor analytic regression technique map relationship voice quality perceptual apilro    pria teness measure Method Subjects Listeners english speak adult male seven female unfamiliar synthetic voice subject recruit temporary hiring agency pay time datum subject incomplete equipment problem include general analyse Synthetic Voices Thirty voice design commercially available formant synthesizer synthesizer provide number standard voice number modifiable voice quality dimension choose average male voice default orthogonally varied voice quality factor head size average pitch richness smoothness produce voice set quality dimension select informal process experimentation identify dimension produce large perceptual effect level choose maximize perceptual difference remain range normal voice head size variable realize acoustically change formant positioning amplitude set 90 normal 100 110 average pitch set 90 120 150 Hz richness quality appear associate appearance low amplitude nasal formant set minimum maximum 0 100 smoothness quality realize acoustically attenuation voice energy high frequency set minimum maximum 0 100 voice hear utter sentence new information available sentence choose relatively neutral mean reasonable utterance context speech output situation describe section Perceptual Situation Judgments Perceptual Scales number perceptual scale choose draw previous literature especially Gabrielsson Sjogren 1979 von Bismarck 1974 Voiers 1964 add modifying scale order increase range perceptual judgment dimension represented set bipolar adjective pair eg BigSmall pilot testing employ converge set 16 judgment appear reliably 36 voice Table 1 include global judgment intelligible Unintelligible Pleasant Unpleasant Human MachineLike intend assess general effect voice quality manipulation judgment reference 7 point scale end label indicate extreme position dimension question center neutral position Table 1 Bipolar Perceptual Rating Scales 1 RichThin 2 SolidHollow 3 BigSmall 4 EffortlessStrained 5 DynamicStable 6 SoothingShrill 7 MellowHarsh 8 NasalizedNormal 9 BrightDull 10 ClearMuffled 11 PowerfulWeak 12 HeavySoft 13 ContinuousChoppy 14 Polished coarse 15 HighLow Pitch 16 SmoothRough Situation scale develop set voice output scenario take advantage previous work eg Nusbaum Schwab Pisoni 1984 voice output application relatively novel find necessary add significantly suggest previous work order cover broad range situation possible generate exemplar variety domain include office application public information system entertainment advertisement feedback warning system yield total 20 context table 2 restriction fix utterance new information available interpret April 1986 Table 2 Communication Scenario Descriptions Scenario Description Video Game voice s new video game describe option result action move Dial Clue phone detective game new puzzle prize weekly Weather public phone service provide hourly weather update general news Quotations stock market service report cur rent stock quotation activity Sports Report sport event service report late result varietyof sport cate gorie Airport airport announcement service broadcast information ground transport baggage pickup forth direction public service number call phone booth NYC fast route place traffic traffic service able monitor position traffic guide good route tGward destination Computer computer status system tell computer program finish describe problem come Body Function body function monitor analyze pulse blood pressure help exercise efficiently safely factory automate factory system port performance warn problem need human intervention Air Traffic flight control system speech output add graphic display Radio ad radio advertisement powerful home computer system Catalog automate retail catalog provide product description price order ing service phone travel automate travel agent able de scribe book travel package Phone Machine superfunction answer machine take forwards reply call calendar calendar service schedule remind important event Tutor Computerized instruction new owner personal computer financial financial advice system able ac cess personal financial informa tion sound investment advice Analysis business analysis system produce voice annotate chart table pragmatic context imply scenario situation describe single sentence intend evoke communicative context listener actual judgment reference 7 point scale 1 signify Extremely Unappropriate 7 extremely Appropriate Procedure Voice generation scale presentation datum collection control IBM PCXT screen scale display normal number key judgment entry voice hear STAX SR stereo headphone set constant comfortable listening level subject run individually perceptual judgment voice fill short speech background questionnaire listener provide write information concern purpose experiment detailed instruction use rating scale trial initiate press enter key Alis    tener see judgment display screen hear voice allow time necessary type number judgment voice repeat time Judgments block voice subject receive different random order voice different randomization scale voice perceptual judgment include total 684 trial 19 scale pair voice listener give break set 200 trial encourage break time feel necessary judgment normally period 15 2 hour voice appropriateness judgment follow typically lunch break include total 720 trial finish 15 2 hour separate set instruction provide appropriateness judgment    instruction discuss concept voice appropriateness offer listener global orienting question help imagine different situation result goal analysis twofold understand structure perceptual situation judgment factor analysis second understand relationship voice quality variable judgment voice perceptual quality appropriateness different situation regression analysis analyse base datum macro subject create average listener von Bismarck 1974 additional analysis concern acoustic correlate voice quality manipulation pattern effect associate Intelligibility Pleasantness MachineLike judgment exclude interest brevity simplicity CH 186 Proceedings April 1986 Perceptual Appropriateness Structure factor analyse perceptual appropriateness judgment employ standard procedure recommend Thorndike 1978 Kim Mueller 1978ab factor retain eigenvalue factor account variance single variable Varimax orthogonal rotation render principal component factor interpretable perceptual judgment analysis base macro subject score 16 scale intelligibility pleasantness machinelike include 36 voice analysis yield factor solution account 767 total variance factor contribute 486 second 281 Examirtion factor loading indicate scale strong contributor factor strong scale BigSmall LowHigh Pitch RichThin HeavyLight suggest factor well characterize bigness fullness dimension remain scale contribute strongly second factor large contributor clearmuffle PolishedSloppy SmoothRough suggest factor characterize clarity dimension Appropriateness judgment similar analysis perform appropriateness score 20 situation 36 voice analysis yield factor solution account 733 total variance 396 factor 178 second 159 Interpretation factor straightforward case perceptual judgment factor general information provision factor variety information scenario contribute strong contributor Phone Machine Tutor Catalog scenario second factor represent type entertainment dimension Sports Report Dial Clue situation load strongly final factor somewhat difficult interpret strong contributor Video Game situation suggest dimension related entertainment examination contributor body Function Air Traffic Factory scenario suggest dimension feedback Video Game contribution listener belief audio video game serve largely feedback purpose predict Perceptual Appropriateness Structure order examine relationship voice quality parameter perceptual appropriateness factor examine relationship set factor factor score generate voice perceptual appropriateness solution regression method Kim Mueller 1978a Tucker 1971 voice associate voice quality parameter head siie pitch richness smoothness perceptual factor score fullness clarity appropriateness score information entertainment feedback result report reflect conservative regression procedure model accept include effect unique contribution variance perceptual structure regression analyse perform perceptual factor score voice quality parameter way interaction predictor fullness dimension analysis indicate effect unique contribution multiple regression model incorporate effect account 84 variance factor score F332 5731 p 00001 strong contribution Richness variable voice high richness have high score factor Head Size associate fullness perception large head size produce high score finally strong interaction Head Size Pitch Head Size effect especially strong pitch low voice have high factor score large head size low pitch similar regression clarity factor reveal different pattern effect effect contribute unique component regression model incorporate effect account 64 variance factor score F431 1389 p 00001 large effect associate smoothness voice high smoothness have high clarity score relative contribution Pitch variable case direction effect opposite fullness scale high pitch yield high clarity score final effect interaction Richness Head Size Richness Pitch interaction positive effect Richness present voice large head size low pitch respectively Appropriateness structure set analysis conduct factor score derive situation factor assess degree appropriateness factor score predictable score perceptual factor second examined relationship voice quality variable appropriateness factor score result set analysis fairly straightforward Scores fromthe information factor predict score fullness factor clarity factor interaction model account 59 variance F332 1536p 00001 appear listener feel voice serve information provision goal optimize fullness clarity good voice high score factor contrast situation factor relate perceptual factor structure discover Scores entertainment feedback fator relate score fullness factor variable account relatively small portion variance 17 entertainment ch 186 Proceedings April 1986 factor score fl34 687 p 005 14 feedback factor score Fl34 542 p 005 analyse voice quality variable predictor provide additional information difference situation factor regression information factor score reveal large effect Richness marginal interaction Richness Pitch model incorporate effect account 53 variance f233 1859p 00001 voice judge appropriate type situation high richness tendency richness important voice low pitch analogous regression entertainment factor score reveal different pattern effect Richness contribute variable Pitch Head Size account portion variance marginal effect smoothness model incorporate effect explain 28 variance F332 423 p 005 general effect expect    decrease pitch increase appropriateness score factor increase head size smoothness increase score result analysis feedback factor complex seven variable contribute regression equation model account 54 variance f728 471 p 0005 voice quality variable associate score factor general increase Head Size Smoothness Richness associate increase factor score decrease Pitch Interpretation main effect temper light significant interaction involve Head Size variable interaction reflect reversal effect Richness Smoothness large Head Size level 110 normal case find beneficial effect minimize quality parameter interaction Pitch similar observed analysis high pitch well small head size worst large head size Discussion clear result work differential appropriateness voice vary voice output contexts factor solution appropriateness judgment indicate listener respond different communicative goal imply scenario description interpretation factor information provision entertainment feedback intuitive appeal lending face validity analytic finding contrast appropriateness especially apparent result individual voice information vs feedback factor voice low score information factor Head Size J10 Pitch 90 Hz Richness Smoothness high score feedback factor order advantage finding understand perceptual variable associate appropriateness judgment factor analysis perceptual rating suggest dimension    fullness clarity    sufficient describe perceptual space create test voice dimension consistent dimension recover Voiers 1964 study naturaJ voice similarity suggest listener similar perceptual criterion evaluate synthetic voice study voier find dimension dimension label roughness animation clear failure uncover analogous dimension restriction voice variation perceptual scale set possibility receive support find perceptual factor predict appropriateness judgment information factor poorly predict appropriateness entertainment feedback situation bipolar scale fail capture certain global perception important judge appropriateness relationship voice quality manipulation appropriateness judgment allqw characterization difference voice example information situation key quality appears perceive richness variation voice manipulation appear little effect acceptability voice situation contrast appropriateness entertainment situation associate quality especially Head Size Pitch focus have right sized voice medium low pitch large head finally feedback situation listener feel degree harshness important voice score voice smoothness richness contribution observation bear hypothesis voice Simpson Williams 1980 synthetic speech particularly successful noisy cockpit environment distinctiveness natural speech serve attention get function find result encourage goal design right voice different situation factor analytic study inherently constrain stimulus response measure offer subject important voice quality manipulation perceptual situation variable fail include current result consider partial mapping relationship kind variable rating task abstract know result report correspond environment real user interact reat voice output system future plan include demonstration pattern describe develop quality voice actual application April 1986 Acknowledgement thank Jack Carroll John Thomas comment early draft paper grateful John Checco provide considerable assistance programming necessary set experiment
38,1985,abstract percent progress indicato graphical technique allow user monitor progress processing task Progress indicator display type output device different kind program practical experience formal experiment progress indicator important useful user interface tool enhance attractiveness effectiveness program incorporate paper discuss progress indicator important include result formal experiment progress indicator experiment demonstrate people prefer progress indicator attempt replicate early finding people prefer constant variable response time general effect reverse progress indicator result statistically significant fact significant preference constant response time show contrary previously publish result CR Categories Subject Descriptors D22 Software Tools Techniques User interface 136 Computer Graphics Methodologies Techniques Interaction Techniques Ergonomics Additional Key Words Phrases Progress Indicators Window Managers User Interfaces l introduction Unfortunately computer program execute instantaneously fast user notice delay example slow process include compiler text formatter file loading floppy diskette slow device file transfer remote machine printer data base processing supposedly interactive computer system easy touse interface menus icon user face period computer finish processing request percent progress indicator technique graphically show long task complete operate like giant thermometer charity drive fill progress figure 1 Progress indicator user information quick glance estimate task complete task finish system currently present busy picture hourglass clock Buddha patience computation progress static indicate swiftly program progress completion program crash system UNIX Accent Rashid 1981 support multiprocessing mean computer perform task time multiprocesse couple window management system BLIT pike 1983 PERO Myers 1984 user encourage multiprocess ie run task time example user editing file have system compile file background Progress indicator case progress process user inform state entire environment UNDC trademark ATT Bell Laboratories Accent trademark Carnegie Mellon University PERO trademark PERQ Systems Corporation APRIL 1985 100 50 l       1 Figure 3 window Sapphire show graphical progress indicator title line textual progress indicator characten 0 figure 1 Percent thermometer indicate approximately 70 complete figure 4 style progress display hand clock face move clockwise completion sand hourglass move figure 2 icon sapphire window manager Myen 1984 progress indicator icon show 25 complete second show piece window process state information include progress indicator 75 99 complete typical implementation progress indicator require application program update explicitly mean program crash progress indicator cease update progress indicator tell user program run Progress indicator usually present graphically show numerical percentage number advantage user quickly easily assimilate graphical display textual Myers 1983 accurate value require second graphical display imply approximate estimate time available exact time rarely determine finally graphical picture display small space figure 2 interfere display screen 2 implement Progress Indicators Progress indicator display wide variety format depend display device case indication percent entire task complete example character terminal progress indicator appear series asterisk screen completion signify asterisk reach right margin figure 3 bitmap display find personal workstation progress indicator show grow bar figure 3 hour glass filling clock face hand move figure 4 clearly centralized routine display actual picture progress program uniform addition auxiliary routine example file variable unix PASCAL progress percent file read matter progress indicator display program need able calculate percentage information indicator clearly easy algorithm linearly process input complete luckily fairly large number operation fall class example include file transfer program loading compilation text processing etc account large proportion long program run system unfortunately nonlinear part example program compile refer program file import include process piping mechanism UNIX make difficult tell long input come program problem handle insure program pipeline processing input approximately rate base progress original datum producer file program create datum program run multiple pass datum progress indicator divide section pass progress approximation program able estimate long run base heuristic past experience addition system support hierarchy program example command file script useful present multiple progress indicator process example Sapphire window manager Myers 1984 progress indicator icon current program entire task figure 2 APRIL 1985 jf0 figure 5 busy bee move randomly screen system processing PERO 1983 ICalc11 figure 6 icon Sapphire progress indicator show random progress application compute appropriate indicator flicker program simply calculate long run system provide random progress show number way simply print dot move busy bee Figure 5 constantly change pattern Figure 6 tell user system processing request crash information available display percentage complete question have program percent progress indicator random progress annoying user simply have progress experience POS PERO 1983 suggest case Progress indicator new idea example Spence 1976 report graphical countdown clock figure 4 time leave complete request CAD CAM application file transfer Macterminal program Apple Macintosh Williams 1984 reason progress indicator rarely experience pero POS PERO 1983 Sapphire Myers 1984 system thoroughly integrate progress indicator user interface suggest progress indicator useful wide variety application clearly cost associate progress indicator algorithm design execution time appropriate try determine fact perceive useful user paper report result formal experiment show people fact prefer progress indicator 3 Esperiment 31 Hypotheses experiment design test hypothesis simply people preferred system progress indicator second progress indicator useful response time system variable constant early experiment Miller 1977 practical experience Carbonelle 1968 Weisberg 1984 show user prefer predictable constant response time variable time average time short variable case hypothesis experiment effect reverse have progress indicator 32 Method simplify computerized transportation management system prepare experiment perform simple pattern match datum base contain 100 travel entry task similar Miller 1977 experiment subject read instruction sheet explain task command available answer question Appendix computerized system require 14 query data base question piece paper answer write separate answer sheet computerized system run PERO personal workstation Rosen 1980 design easy use query subject fill form screen figure 7 hit key system match data base result print delay constant 10 second randomly varied uniform distribution 1 17 second empirical mean 8601 second delay progress indicator show complete query subject fill questionnaire gauge feeling system feature semantic differential scale attempt measure subject attitude system 10 item range 1 negative 9 positive example AnxiousRelaxed BoredExcited Appendix B aim measure aspect user feeling dimension choose intuitively subject repeat process different version system subject divide group determine version follow 1 constant time Progress Progress 2 variable time Progress Progress 3 Progress constant time variable 4 Progress constant time Variable group subdivide half get version half get version second system randomly assign subject group constraint number people group answer second set question subject answer questionnaire evaluate opinion second version finally subject answer different questionnaire ask subject explicitly compare system ask background information subject complete version questionnaire session average time 5 minute read instruction 10 minute version 5 minute questionnaire total 40 minute subject APRIL 1985     r 1 11 sr     ld 1command Delete previous character field lllPSI Delete entry field Erase field start Evaluate form 0 finish question llonth Jul Date Day Destination Person People Aecom    panye l 2 3 Progress Results z1 Robert frost Larry 11iller Kansas City Jul San Diego Jul ZZ Adaa Saith Abbi Wilson Alan SdMBrtz 3 Abby Wilson Atlanta Jul 18 Jane Fiero Sia farer Robert frost New Orleans Jul 21 Arnold Serkin 5 Abby Wilson Seattle Jul 12 David Siapson Jane Fiero 6 Larry 11iller San Diego Jul S David Siapson 7 Robert frost Atlanta Jul 9 David Siapson B Abby Wilson Atlanta Jul l Adaa Saith 9 Adaa Sith New Orleans Jul 15 Sarah Saith 10 Adaa Saith 11i Jul 31 David Siapson Adaa Saith Sia Farer t o Des lloine London Jul zJeu l Figure 7 screen form base query system experiment subject type field eg Month Person hit INS keyboard key query process APRIL 1985 1st VP CP VNP CNP NPC pc NPV PV 2nd VNP CNP VP CP NPV PV NPC pc Mean 1st 6250 5867 5917 5767 5233 6067 6367 6216 score 2nd 4317 5233 6067 5733 5033 5383 6683 5950 Table 1 Unnormalized mean score semantic differential negative 9positive 16 version column represent group 6 subject subject version entry pair version subject second Code PProgress indicator NPNo progress vvariable time cconstant time source df Sum Sauares Mean Souare F Value F Subject 47 107135729 2279484 578 00001 Var Const 1 653333 653333 166 02046 Prog 1 5400208 5400208 1370 OD006 Sec 1 4042604 4042604 1026 00025 vcpn 1 940104 940104 239 01296 error 44 173387so 394063 Table 2 Evaluation significance semantic differential score Mean Variability 1st VP CP VNP CNP NPC pc NPV PV 2nd VNP CNP VP CP NPV PV NPC pc Table 3 Unnormalized mean perceive variability response time lvery variable 9constant time 16 version Format Table 1 Code PProgress indicator NPNo progrea vvariable time cconstant time source df Sum Sauares Mean Sauare F Value pr F Subject 47 1971667 5507 145 01079 Var Const 1 350208 350208 1211 00011 Prog 1 75208 75208 20 01140 Sec 1 281667 281667 974 00032 VC0 PN 1 350417 35d417 1212 00011 Error 44 1272500 28920 Table 4 Evaluation significance subject rate variability perceive version system 33 Population subject test computer science graduate student fifth computer novice subject unpaid volunteer 34 Results subject trouble larn system version rate easy use base favorable comment subject fact error Table 1 give mean subject score semantic differential scale base different version datum feed SAS statistic program SAS 1984 generate datum Table 2 Table 2 demonstrate difference progress indicator versus progress indicator highly significant pr 00006 result comparison questionnaire 861 percent subject like progress indicator mean rate 294 1 mean useful 9 mean Useless Annoying significant result substantial difference subject version people rate high second interesting result statistically significant preference version constant response time version variable response time pr 02046 version progress indicator consider result significant pr 01497 figure 8 show average score variable constant time version progress progress sood 60 59 5 t prosress bad Variable Constant Figure 8 Graph mean score semantic differential progress versus progress variable versus constant time sixteen version sum group interesting constant time rate well high variable time progress affect reverse progress hypothesize affect unfortunately statistically significant Tables 3 4 result subject evaluation variableness version evaluate significant result high correlation have progress indicator correctly rate variability 35 Discussion Experimental result clearly experiment strongly support hypothesis user prefer progress indicator result statistically significant pr 00006 mean 6 chance 10000 effect happen random chance APRIL 1985 unfortunately hypothese progress indicator affect feeling variable response time variable response time affect feeling progress indicator support interesting note subject prefer constant time mean 573 variable time 541 progress bar prefer variable 598 constant 590 progress bar hypothesize Figure 8 difference statistically significant experiment fail duplicate result early experiment Millers 1977 say subject favor constant time variable time progress indicator observe subject perform experiment clear progress indicator present subject tend watch screen task progress indicator subject apparently get bored screen look room question instruction sheet answer appear screen subject notice peripheral vision look support datum Tables 3 4 subject rate variability constant variable version progress indicator significant difference progress indicator present correlation VC PN pr 00011 Table 4 call question general applicability early experiment variable time perceive bad constant time Jn Miller experiment example variability apparently rate character display entirely different situation test clearly degree variability low system constant high eg 1 second 1 hour unacceptable matter mean experiment investigate range variability acceptable progress indicator wait condition interesting approach try insure subject pay attention screen possibly make test time have faint signal answer ready have question display screen paper look interesting result subject overall low opinion second version version statistically significant pr 00025 suggest people get bored system doubt long response time annoyed having use experiment control affect bias normalize result 4 Interpretation Advantages Progress lndicaton section attempt propose explanation people prefer version progress indicator application typically start show progress indicator parse understand command progress indicator provide follow important message list Miller 1968 user know request listen b request accept c interpretation request d system busy try provide answer Progress bar important novice user likely believe computer operate quickly likely panic Foley 1974 think computer crash provide feedback computer work expert typically feel long task benefit progress indicator expert likely run multiple task parallel time valuable people find difficult track happen multiprocesse Progress indicator help user plan monitor task time effectively interesting experiment attempt measure affect progress indicator multiprocesse environment reason people prefer system progress indicator rarely like sit idle waste time wait time annoying example effect area computer eg wait hold phone people know long wait impossible schedule different task appropriate duration relax effectively tend raise level tension wait completion indication progress user know priori long task time productive manner lower user anxiety important benefit progress indicator alternative progress indicator actual number analog display actual time leave task complete estimate APRIL 1985 5 Conclusion Percent progress indicator appear important user interface tool help user number way help novice feel well system show command accept task progress successfully useful experienced user provide information allow estimate completion time plan time effectively especially important multiprocesse system window experimental evidence present demonstrate system progress indicator prefer user indicate benefit progress indicator probably sufficient warrant extra cost computation implementation require include future system Appendix question subject ask answer query system experiment include want Fresno December want Santa Barbara August 8 request trip Oakland data base List date travel request William Powers request Ned Maxwell travel people accompany Scott Derry Oakland trip request month Walter Sedlak Rosa Velasco William Powers book trip Appendix B follow semantic differential scale questionnaire version program feel anxious 1234 567 89 Impatient 1 2 3 4 5 6 7 8 9 Annoyed 1234 56789 tired 1234 56789 Uncomfortable 1 2 3 4 5 6 7 8 9 Helpless 1234 5678 9 Bored 1234 56789 Tense 1 2 3 4 6 7 8 9 Confused 1234 56789 Happy Relaxed Patient Calm Energetic comfortable powerful Excited Ease Confident acknowledgement especially like thank William Buxton extensive help prepare paper experiment like thank volunteer participate elJCri    ment help support paper like thank wife Bernita Myers Neville Moray Alain Fournier University Toronto PERO Systems Corporation research describe paper partially fund National Science Engineering Research Council NSERC Canada References Carbonelle Jaime Elkind Jerome Nickerson Raymond S 1968 Psychological Importance Time Time Sharing System Human Factors 102 April 1968 135142 Foley James D 1974 Art Natural Graphic Man Machine Conversation Proceedings ieee 624 April 1974 462471 Miller Lawrence H 1977 Stucy Man Machine Interaction Proceedings National Computer Confere11ce 46 AFIPS Press 1977 409421 Miller Robert B 1968 Response Time Man Computer Conversational Transactions Proceedings fall Joint Computer Conference 33part 1 AFIPS Press 1968 267277 Myers Brad 1983 Incense System Displaying Data Structures Computer Graphics SIG graph 83 Confere11ce Proceedings 173 July 1983 115125 Myers Brad 1984 User Interface Sapphire Screen Allocation Package provide Helpful Icons Rectangular Environments IEEE Computer Graphics Applications 4ll December 1984 1323 pero POS operating System Manual 1983 PERQ System Software
39,1989,ABSTRACT Developers User Interface Management Systems UIMS demonstrate separate application user interface support device independence customization interface produce UIMS typically craft designer expert human factor graphic art little attention pay capture knowledge expert interface automatically generate application style rule additional application paper consider toolkit style rule structure result interface advantage good human factor graphic art knowledge consistently style INTRODUCTION User interface management system UIMS traditionally separate application component application action dialog manager user interaction routine Structured set service routine application variety different dialog interaction routine require important shortcoming model interface designer expert human factor graphic art typically create interface directly code assemble interaction routine toolkit believe expertise designer encode style rule interface automatically efficiently generate vary user group hardware environment second interesting interface depend extensive knowledge application separate application interface remove knowledge highly interactive interface possible retain knowledge application datum type allow interface interact intelligently user remain separate application interface have abstract type knowledge addition reuse different concrete datum type show single tree view organization chart file directory document ROLES system development implement idea Interactive Transaction Systems project IBM Research structure application implement show figure 1 application expert define content ofan application independent style Content include datum type application table store data share application interface application expert specifie content frame flow control frame application action execute point dialog application programmer implement action call dialog dialog compiler merge information type table dialog file parse tree produce dialog compiler pass input style compiler Rules IDialog content Dialog compiler st IStyle compiler 1 Ye rule Dialog manager Actions Views Figure 1 Structure application figure 2 Screen display employee browser code style expert style compiler attach interaction technique view toolkit node parse tree current implementation style decision compile time base static attribute input file finally runtime dialog manager interpret fully attribute parse tree execute action call view manager display view code style programmer style expert concerned question view dialog block attribute value set view View attribute include font line style choice order middle name appear field role style expert decision specific application style expert write rule express regularity style give rule executable form apply different application create interface specific style rapidly automatically related work rulebase interface generation include APEX APT Perlmans layout axiom note separation ofcontent style refinement traditional separation interface application user interface management system Kamrans Abstract Interaction Handler early example idea implement style rule conventional imperative language refine interface design separate expert programmer role application style expert write exe cutable specification language design usable nonprogrammer Languages application style programmer remain imperative provide generality implement function need interface tools application EXPERTS programmer language application expert support separation content style provide set style independent tag describe component dialog language base analogy tag document formatter GML SCRIBE tag document structure hierarchy component chapter section paragraph footnote component associate format property contain separate style data base dialog describe hierarchy tag frame form list choice tag associate format routine executable rule write particular style 1 illustrate use dialog tag implement browser hierarchically structure employee datum base browser show general detailed view select employee style describe draw tree panel figure 2 1 dialog rule syntax reflect minor revision readability extension currently implement type datum typefullname structuredisjoint di fieldlast typestring di fieldmiddle typestring di fieldfirst typestring edata employee datum type datum typeemployee structuredisjoint di fieldname typefullname emphasisspecial di fieldserial typeinteger di fieldaddress typeusaddress di fieldmanager typeemployee edata figure 3 Employee data type dermition employee represent application instance datum type define figure 3 employee type subfield primitive user define type item employee information type field attribute describe nature datum data tag structure attribute indicate collection field disjoint ie collection independent information employee Dialog attribute structure emphasis security kind architecture provide information style rule select appropriate presentation data type field share datum application view group table show Figure 4 browser table contain single field instance employee type dialog segment show Figure 5 employee frame enclose frame frame call general contain set choice control organization chart list block contain item chart choice allow user display employee detail expand organization chart nod child quit detailedview frame contain list employee display detail node select main chart setname action execute Setname record node se    lectedname visit expand action command choice visit add record detail list select employee Similarly expand add record chart list person report se table namebrowser ti fieldperson typeemployee requiredye etable lected employee list update appropriate view automatically signal redraw group choice list block frame important dialog style processing dialog frame staticaly scope table create enter frame visible action frame child Frame nesting provide information style rule influence screen layout tools STYLE EXPERTS programmer Style rule represent graphic art decision choice background color human factor decision choice appropriate view give type datum view write undergo behavioral testing improve importantly understand condition condition style rule govern appropropriate use view library component example process recently build keyboard entry technique differ automatic completion input provide time perform input task entry technique compare selection technique cursor key simple entry technique offer little automatic completion require time selection technique frame refidemployee tableselectednamebrowser listnamedetail browser employee frame nest frame general detailed employee view frame refidgeneral listnamechartbrowser define valid command choice kindlandonlyl ci messagedetail actionvisitdetail ci messageexpand actionexpandchart ci messagequit pop echoice list show subfield person list listidchart fieldperson structureset li fieldname actionsetnameselectedname elist end offrame general eframe detailed list show subfield ofperson frame refiddetailed view list listiddetail    tructuredisjoint number2 li fieldperson areafit elist eframe end offrame employee eframe Figure 4 Table employee browser action Figure 5 Dialog tag employee browser turn slow highly aid entry technique result represent style rule state 1 mouse available 2 set valid input know use aid entry selection set input unknown use simple entry sharp contrast typical toolkit approach application toolkit typically application programmer interface designer control toolkit object believe developer ofUIMS unlikely application programmer decision addition factor role ofa single interface designer separaterole style programmer expert style programmer create library view style expert write rule automatically generate interface specific application view alternative automatically generate interface style rule support interface designer manually design panel direct manipulation direct manipulation panel design successful simple static panel dialog box menus system success generalize panel specification build example peridot difficult approach capture multiple rule designer apply produce panel final appearance rule condition apply panel Titles example default appear center field rule condition apply specific context title emphasize example appear italic accord attribute specify rule style workbench correctly infer generality rule understand italic apply emphasize field style expert specify rule condition believe workbench create interface important focus help style expert express condition style rule help design panel directly example STYLE Style rule recognize feature block dialog tag tag attribute value data type match view block choice block figure 5 draw menu cycle button command entry field application expert kind attribute indicate nature choice allow single response style expert write rule use information draw choice item ci block menu button figure 2 kind code allow multiple choice style use check box instead envt Background text envt II ILastname Firstname Middlename Figure 6 environment control view Views assign block indirectly environment environment view set style attribute appropriate view control appearance environment create general interface component title panel dialog box specific object nod diagram transistor wire circuit name unlike early user interface mangement system mean screen area control style mechanism application write directly user interaction application mediate style rule environment extend modify time style expert cover datum type device user group circumstance foresee developer Abstracting view associate attribute environment allow separation content style style expert programmer similar application expert style expert show figure 6 style programmer implement generic view control size position punctuation surround environment component name datum type view draw firstname mid    dlename lastname environment hide Style rule responsible bind particular type field name application middle environment name view isolate view knowledge implementation ofapplication datum type environment allow view tobe reuse different type application refine name structure show figure 7 use view bind lastname envi datum typecompound di fieldpaternal typestring di fieldmaternal typestring edata datum typefullname di fieldfirst typestring di fieldmiddle typestring di fieldlast typecompound edata Figure 7 refined data type general environment interface object define menu viewtable spaceasrequired positionleft define text viewstring capitalsfirstonly justificationleft fonttimesroman size10 define menuitem parenttext xoffset50 yoffset50 define title parenttext justificationcentere define panel viewtiledpanel gallery usedfor row object define gallery viewtable rowsl spaceequal positionbottom chart node link format group item tree define chart viewtree directionhorizontal hgutterioo vgutterioo spaceequal define node viewboxednode connectionscenter define link viewgraphic typeline widthl linestylesolid environment employee type define employee viewdrawemployee define viewpersonalname orderlastfirst fonthelvetica capitalsfirstonly define firstname viewstring define middlename viewstring define lastname viewstring sizel 1 andfinally environment address component define address viewstreetaddress define street viewstring define city viewstring capitalsfirstonly justifyleft linebreaktrue define zip viewstring justifyleft linebreaktrue figure 8 environment tree employee view ronment string view previously lastname environment draw table view element table bind string view string attribute set lastname environment inherit string view continue control format similarly tree create link figure 2 directly draw line node create instance oflink environment attribute start end point variety ofdifferent view include line raster graphic choose style expert render link environment style expert style programmer control link actually appear create employee browser show figure 2 style expert define environment write rule assign dialog block environment require tree employee view define figure 8 rule match example dialog figure 9 environment figure 8 common interface component Menus draw table view space child require style expert force table view divide space equally chil    1 TAGFRAME MATCH panel 2 tagchoice MATCH menu 3 TAGCl MATCH menuitem inputmessage 4 taglist s1ructureset TYPEemployee MATCH chart 5 PARENTENVTchart MATCH node 6 taglist s1ructuredisjoint MATCH gallery 7 TYPEemployee MATCH employee 8 TYPEfullname MATCH 9 FIELDfirst MATCH firstname 10 FIELDmiddle MATCH middlename 11 FIELDmiddle EMPHASISBACKGROUND MODIFY middlename charactersfirstonly 12 fieldlast MATCH lastname 13 TYPEusaddress MATCH address figure 9 rule matching environment dialog tag dren set space attribute equal asre    quire Titles draw centered inherit attribute text environment panel implement tile panel view arrange child completely fill alloted space overlap tiled panel view look position attribute child state preference leave right panel reconcile conflict child environment create additional knowledge require adequately interact application datum example tree view display organization chart format leave right layer tree start frame link draw graphic package single width solid line Names specific middle environment separately style draw right order style letter capitalize middle name follow appropriate punctuation rule figure 9 assign environment component dialog base tag name datum type attribute employee draw tree draw detail code list tag dialog application expert structure attribute indicate second group disjoint relate set style rule use additional information provide structure attribute render disjoint group collection unrelated view order group tree datum type employee rule4 decide tree view appropriate particular set structured list Rule 5 recognize individual element list instance browser table child chart environment match node environment node display rectangle surround content define connection point link employee name insert environment child node field browser table code listitem Ii tag rule 8 Chart environment Link environment r    Nodeenvlronment    envt k C J L J Figure 10 environment create node link organization chart dash box indicate border environment visible box match directly tag rule 6 7 similarly match gallery environment disjoint list employee child gallery draw detailed view employee type user select nod interest diagram Figure 10 show rule combine create tree style view node organization chart ITERATIVE DESIGN application tools implement prototype tool year Interactive Transaction Systems project prototype base DOS OS2TMJ Berkeley Unix TM prototype differ Unix version basis discussion number dialog implement OS2 version include overview project interactive workbench writing style rule list table pie menus style text view implement version table view extensively reuse implement wide variety interface object include menus form cycle button input technique include variable rate scroll automatic completion text input Unix version implement ANDREW toolkit x window system view implement version frame panel menus string tree specific employee address type require example paper view sufficient generate interface number demonstration application plan continue extensive application develop group external user workbench implement help application style expert application workbench contain syntax    oirecte editor dialog tag attribute variety editor control flow style workbench focus create modifying understand style rule particular interest explanation tool trace execution rule lead specific style decision time test usability tool application develop Studies tool usability particularly helpful application reuse interaction technique originally develop tool look forward describe activity future report acknowledgement thank Tom Cofino Sharon Greene Shirley Hsieh Petar Makara Uri Shani Ann Vosburgh contribution project comment paper
40,1987,abstract reference scale establish assist determination optimum text blink time portion video image text present CRT display system optimum text blink time consider time effectively catch hold view attention quicken understand message import experiment involve question psychology blink time conduct experiment examine subject preconceive notion optimum blink time ie imagine mind time specific text portion second experiment determine gap preconceive notion subject change concept optimum blink time base experience visual trial experiment apply scale blink time base experience gain second experiment new set subject order refine understand optimum interval portion text optimum blink time center 10 second adaptation video image presentation system effectiveness optimum text blink time psychological scale confirm RESUME Une echelle de reference ete etablie dan le daider determiner le temp optimum necessaire de clignotement dune portion de texte dune image video etant presente sur ecran cathodique dordinateur Le temp optimum de clignotement est considere ici comme etant le temp necessaire attirer effectivement et tenir attention de lobservateur de fa9on augmenter la vitesse de comprehension dun message re9ue Trois experience concernant la question de psychologie du temp de clignotement ont ete entreprise La premiere experience examine le notion preconyue de temp optimum de clignotement chez les observateur ie ce quil imaginent linterieur de leur propre cerveaux ce que ce temp auraient ete pour des party de texte specifique La deuxieme experience servi determiner la difference entre le notion preconiue et le changement des concept des observateur propos du temp de clignotement le tout base sur des experience dessais visuel La troisleme experience concerna lapplication dune echelle de temp de clignotement base sur les experience acquise au cours de la deuxleme experience une nouvelle serie dobservateur clan le de mieux raffiner notre comprehension de optimisation des interval pour les party de texte utilise 1c1 le temp optimum de clignotement etaient centre environ 10 seconde De plus traver une adaptation de la presentation du systeme dimage video lefficacite du texte et de lechelle psychologique ont ete confirmee keywords Text Blinking User Interface Video Image Presentation Psychological Scale S 1 introduction Presentation important way communicating bit information presentation important precisely communicate information sender intention receiver Williams 1984 Macllray Wymann 1984 Kasahara Miyashita 1986 Presentation material include text table graph picture pertinent information pass medium medium precisely presentation material effectively work accurate communication accomplish Feiner1985 important approach precise communication find method attract viewer information receiver attention devita1983 Howell1982 Kitakaze Kasahara Miyashita 1986 reason viewer attention quicken understand import research presentation text expression attract viewer attention video image presentation number method commonly employ attract viewer attention include change text color font underlining text blink text blink repeat sequence video image effective present state art text blink time decide presenter knowhow research psychological experiment conduct understanding blink time situation consider optimum report experiment investigate psychology blink time application result experiment video image presentation system 2 experiment 21 Experimental Objectives long interval blink time viewer unconsciously relax unlikely attention hold import text hand blink time short attention hold effectively viewer tend glance away reduce eye strain determine optimum blink time give text portion render complex fact gap exist person preconceive notion optimum interval refer conceptual optimum perceive optimum interval refer experimental optimum base actual visual trial objective experiment confirm existence gap develop scale determine actual optimum blink time experiment design identify subject conceptual optimum second design determine gap discover experimental optimum design establish scale aid determination optimum blink time visual presentation 22 experiment 1 determine Conceptual Optimum METHOD clerical employee expert use computer present document represent section company financial report write 12 line japanese character 19 character line figure 1 write explanation use text blink effectiveness read subject look financial report document instruct play role head company Management Department think blink presentation document audience company manager subject choose text portion want blink arid designate tt012ijmti 3500 ffifl400ffimmm h 1 5 Clftl 1 1 clftl c lHJU7J ti Cl mdtiA ffl 038 Ct 0 YiAVTrJ x7257rj7ffl17c 7j LQ t 7 v 1    1 1 rj x 71l tttlA ottt lrji7ffilclt    6 iavrorjiiti 5 ti3000ffi i75 03idt1Hmc l cg figure 1 Test material company finacial report consider mind appropriate blink time RESULT Figure 2 show distribution blink time accord number subject designate time conceptual optimum range 1 30 second average designate time 81 second standard deviation 7 5 second discussion dispersion conceptual optimum wide subject give exceptionally long time interview determine properly understand instruction establish great divergence suggest person conceptual optimum unlikely reliaqle guide establish actual optimum figure 2 blink time destribution accord number subject designate time SHORTER long Figure 3 Subject reaction scale change text blink time RESULT Figure 4 show blink time adjustment subject Times indicate zero point subject conceptual optimum take change subject arrive experimental optimum highly concentrated range 04 second 30 second Figure 5 show average standard deviation datum fig4 discussion widely disperse conceptual optimum tend overestimate gauge experimental optimum relative concentration experimental optimum noteworthy experiment clarify gap conceptual optimum experimental optimum 23 experiment 2 Determining Experimental Optimum METHOD subject original 42 select operate prototype visual display system system text string test document experiment 1 blink CRT display subject show display choose text portion blink rate designate conceptual optimum instruct adjust blink time feel effective point adjustment scale longershorter show figure 3 maximum allowable degree change half twice current blink time subject continue adjustment feel achieve optimum 01234 5 TRIAL CHANGES figure 4 Text blink time adjustment G    00 average standard deviation TRIAL CHANGES figure 5 average standard deviation text blink time slow SLIGHTLY slow good SLIGHTLY fast fast fast figure 6 Resultant reference scale 24 Experiment 3 establish Optimum Text Blinking Time Scale METHOD Fresh subject 17 clerical technical employee expert computer special knowledge text blink present display material experiment 2 experimenter free control text blink time subject give 7 step evaluation scale fast fast slightly fast good slightly slow slow slow indicate reaction seven different blink time subject test 50 presentation RESULT method successive categoriest apply datum gather produce psychological scale use determine optimum blink time optimum blink time 10 second indicate good psychological scale scale show figure 6 03 second designate fast 05 second fast 06 second slightly fast 15 second slightly slow 19 second slow 31 second slow t method successive category scale method arithmetical value rating level estimate interval psychological level M give MPiCi Pi rate category ci interval scaling value category Guilford discuss method detail discussion notice blink time decrease viewer sensitive small change interval result nonlinear nature scale apply effectively determination optimum blink time give text work standard 10 second adjust necessary jump magnitude indicate grade scale indicate 25 Summary apparent wide range people preconceive notion optimum blink time imagine large gap preconceive notion people experimentally perceive optimum blink time furthermore optimum blink time determine actual trial tend disperse far small range preconceive notion application method successive category produce nonlinear psychological scale standard optimum blink time 10 second use optimum blink time give text effectively determine 3 adapt experiment RESULTS video image presentation system optimum text blink time psychological scale adapt system make information presentation material adaptation use experimental optimum 10 second good viewer acceptance scale default value reason case presenter optimum blink time easily quickly 10 second adapted default value comparison input datum like second adaptation use psychological scale change scale set text blink time functiorl change text blink time require time effect vary factor content document number letter accord result experiment develop interface involve user time sense like long shorter change magnitude psychological scale adaptation information sender set text blink display communicate operator intention audience easily 4 conclusion optimum text blink time 10 second psychological scale obtain result psychological experiment Existence large dispersion establish text blink time use time concept gap conceptual optimum experimental optimum clear find user retention great text blink time short adaptation video image presentation system optimum text blink time psychological scale propose research plan establish design method user interface reference scale consider information sender intention receiver understand research support establishment carry ACKNOWLEDGMENT author like thank Mr M Managaki encouragement Mr Kino discussion suggestion like thank subject volunteer time
41,1989,abstract development interface design tool call direct dialogue protocol discuss tool base Katos 1986 method verbal data collection question ask protocol extension question ask method detail 1 experimental procedure atomic task facilitate quantization verbal data 2 intervention experimenter probe subject expectation prompt verbalization 3 technique answer subject query call sequential disclosure discuss application direct dialogue identify design choice build learnability usability product user interface introduction Cognitive Engineering hold promise design leamability usability product base understand design principle derive empirical datum industrial environment method empirical data collection yield relevant design information need complement engineering timeline commit action Takashi Kato IBM Tokyo Cognitive Engineering Research Laboratory propose technique call question ask protocol Kato 1986 experience meet need question ask protocol simple elegant method user ask learn interactive system prior instruction tutor assist oneto basis question answer user encounter problem interactive system query obtain information tutor primary datum interest query user course learn Kato argue qualitative analysis verbal datum shed light 1 problem user experience context 2 instructional information come need 3 feature system hard learn 4 user come understand misunderstand system purpose paper document experience question ask method offer support Katos finding detail extension Katos method 1 development atomic task 2 question ask tutor probe 3 technique answering query subject call sequential disclosure extension bring evolution question ask method interface design tool name direct dialogue protocol history Instructional Materials question ask method initially employ Tektronix define documentation requirement new product line 11000 series laboratory oscilloscope Knox Bailey 1987 product interface style radical departure traditional oscilloscope dedicate panel knob switch single oscilloscope function 11000 series interface feature purpose knob major menu button touch sensitive display screen function selection previous research find engineer expert interface style demonstrate impressive productivity gain 77 new interface Bailey Knox Lynch 1987 question ask method employ assist documentation design team structure content introductory tutorial procedure time efficient Consistent Katos description procedure ask experienced engineer particular product typical measurement expectation query pose subject assist define documentation need new user experience traditional oscilloscope interface participant query reveal misunderstanding interface control structure depart traditional style find clear question consider follow exchange clearly construe operational question subject subject center waveformin word tutor position waveform vertically touch vertical arrow icon assign vertical position control knob Contrast previous question follow exchange subject thing d like AC value waveform tutor question Subject Subject select Vertical Description menu want remove menu Tutor Pauses subject look display like information rid popup menu subject yes away tutor ask subject clarification need informational assistance find engineer uniformly ready admit need tendency subject population tum knob push button attempt figure operate oscilloscope question Kato argue qualitative analysis result datum pinpoint key instructional concept facilitate traditional oscilloscope user make transition new interface style figure 1 hypothetical interface style adjust waveform vertical size Verbal Data Comparative Analysis major extension question ask method development atomic task necessitated design team seek information easily understand interface style understand concept interface style consider hypothetical style exhibit figure 1 style example control structure change vertical size display waveform dedicated style vertical size knob attach specific channel waveform multiplexe style vertical size knob share possible waveform channel case user need assign knob channel waveform control press appropriate channel button virtual style generic control example knob assign vertical horizontal size share possible waveform channel style digital entry example vertical horizontal size manipulate adjust display screen vertical horizontal range correct channel current vertical range 10 volt user need enter range value 10 volt increase size display waveform note different concept control connect waveform easily understand interface style define meaning time user perform typical task control prior instruction Initially test concept appear tailormade question ask format qualitative assessment subject query identify style difficult understand ground research methodology experimental psychology caution confident qualitative analysis subject query provide insight uncertain make comparison interface style entirely straightforward consistent basis comparison need quantitative datum use conjunction qualitative datum quantitative comparison reveal particular interface style easily understand expect qualitative datum shed light particular interface design choice lead find difference quantitative measure easily understand leamability come answer separate design question question concerned ability classify experimental condition level independent variable source problem stimuli data collection actual oscilloscope competitive market impossible label product example specific interface style product reflect instance entire evolution instrumentation control fully dedicated knob switch virtual control require assignment functionality prior operation Atomic Task solution design problem provide discrete measure learnability order isolate interface style aggregate single oscilloscope develop concept atomic task conceive simple representative task span basic oscilloscope operation ie manipulation vertical horizontal trigger parameter atomic task define function execute single control traditional oscilloscope fully dedicated panel atomic task solve problem allow segregate multiplicity interface style single oscilloscope second give opportunity quantitatively measure learnability style operationalize learnability number path error eg turn wrong knob throw wrong switch subject number informational intervention tutor example assume different interface style figure 1 examination assume atomic task increase vertical size display waveform dedicated style path error consist turn wrong knob turn right knob wrong direction multiplexe style path error occur subject turn knob assign informational intervention occur subject need instruct enable knob act display waveform path error virtual style result improper assignment incorrectly turn knob path error digital entry style occur subject enter value great current vertical range decrease size display waveform learnability having operationalize number path error informational intervention atomic task successful generate quantitative data analyzable standard inferential statistic anticipate significant difference find explain qualitative analysis subject verbalization interplay quantitative qualitative analysis confident Katos assertion question ask method relevance user interface issue figure 2 Example virtual knob interface style question ask DIRECTED DIALOGUE second extension question ask method use probe tutor come qualitative analysis experiment discover occurrence path error unambiguous occasion underlie rationale erroneous behavior puzzle anticipate subject verbalization clarify misunderstanding query point relative operation attempt perform verbal record thought expect happen example particular implementation virtual style require subject assign functionality knob touch icon border touch sensitive display figure 2 simplified version style style assign vertical control SIZE knob subject need touch vertical arrow icon touch sensitive display pilot session subject confront atomic task increase vertical size display waveform appear try drag icon finger vertical dimension behavior repeat time follow turn SIZE knob result subject having previously try drag icon inadvertently assign vertical size function behavior occur verbalization want know subject aware assign knob want address expectation try drag icon expect happen lead particular expectation Probes Expectations need address issue relative subject expectation result second major change question ask method decide allow tutor ask question call question probe intend clarify ambiguous situation aware literature past experience collect verbal datum Bailey Kay 1984 run risk make subject defensive inducing rationalization probe behavior consequently careful avoid implication giving probe instead focusse expectation expect happen expect find collect subsequent datum interface style figure 2 addition experimenter probe follow exchange form session illustrate use probe kind datum effect session subject size position knob atomic task increase vertical size display waveform subject OK s arrow right lefthand displayOK welllet try Touches screen right icon touch arrow let direction Touches screen arov tutor expect Subject try increase uh decrease volt division Lets happen maybe way try drag icon upwards nt change incorporate probe subject expectation procedure learn arrow icon initially perceive independent control structure change position rescale size display waveform oppose assignment mechanism knob perform function find incorporate documentation product emphasize early component part control assignment mechanism feedback virtual knob interface style Sequentlal Dlsclosure final major extension question ask method technique tutor respond subject query technique sequential disclosure technique develop find complete answer subject query obscure identification key design feature enable insight subject apparent time question answer sequentially usually disclose component part interface style follow probe change subject understand 111100 mV Figure 3 Example multiplexe knob interface style example consider multiplexe interface style depict Figure 3 CH button assign vertical control knob right waveform associate channel current waveform control indicate led light leave ch assignment button current vertical size unit voltsdivision channel indicate column led button consequently channel 1 waveform square wave display 500 millivolt division channel 3 waveform sawtooth wave display 100 millivolt division CHI LED light position knob square wave SIZE knob vertically larger small follow transcript illustrate expectation subject relationship vertical control CH button Subject um push button time push go motion harul CHJ led column like 500 millivolt push button point CHJ button clearly subject recognize button mechanism knob assignment expectation press button available voltdivision setting column activate early use question ask method response tutor instruct subject multiplexing style find type direct response illuminate documentation informationit obscure rationale subject expectation fail uncover design feature enable subject discover relationship assignment button knob section transcript tutor response subject query show initiation process sequential disclosure tutor m go answer yes let approach like square wave channel 1 sawtooth channel 3 like position sawtooth square wave particular atomic task force subject knob assignment subject press ch3 button assign knob control sawtooth turn position knob clockwise section transcript subject turn correct knob correct direction assign knob channel 3 experimenter probe clarify subject expectation subject ok Turns POSJTJON knob clockwise square wave move display tutor OK let hold happen Subject OK move tutor want Subject want toto low point sawtooth tutor disclose additional information multiplexing concept subject try graphic support instructive tutor let attention thing want focus grey area point graphic area surrourule button knob becommunicate youthis grey area Subject UMI guess move finger grey graphic areathese point knob unity conjunction point row button l thinking tutor mean Subject ok conjunction s thing tutor discover grey graphic area communicate intend tutor call attention point tutor disclose additional information graphic information spatial nature follow direct operational concept led feedback stimulate insight Tutor s fine let like press channel 3 button Subject Presses ch3 button light leave ch3 button go light leave CHI button go Tutor Tell happen subject ok ok light channel 3 button light go mean POSffiON control Directing Dialogue example transcript benefit sequentially disclose information subject find orthogonal layout assignment button knob contradict operational relationship subject impression button independent control scale waveform perception strengthen continuity arrangement CH button led scale set led CH button find graphic support serve purpose connect button knob improve predominant discover key concept ch button lead active point time mean assignment mechanism likely easily discover new user press button turn knob early exploratory use product use probe technique sequential disclosure require tremendous discipline tutor general attitude tutor resist teach subject use system try understand specific expectation hold subject information require ascertain key concept enable insight manner tutor teacher director interactive dialogue Speeding Design Process successfully employ direct dialogue early phase product design provide design engineer critical timely information specific design choice product conceptual stage stimulus datum collection primitive industrial artist drawing product interface tutor provide necessary functional feedback high fidelity simulation run computer case direct dialogue useful yiele relevant design information short time result design alteration implement new draw simulation test case iteration continue goal reach atomic task complete path error intervention schedule tooling deadline arrive experience range interactive product find method testing direct dialogue actually speed design process bring clarify datum endless discussion product feature interface style SUMMARY extension KATOS PROCEDURE 1 Atomic Tasks simple task span operation system basic important cast language application oppose language operauon system control ie position waveform vertically opposed turn position knob right measure performance suite task eg number path error number experimenter intervention quantitative comparison alternative interface style 2 Probes tutor intervene subject verbalization behavior ambiguous probe subject expectation system operation order obtain verbal datum reveal current problem solve opposed reflective rationalization probe usually form question have minimal content avoid ask eg happen expect 3 Sequential Disclosure subject ask operation particular function disclose component operation sequentially technique answer subject query seek uncover design feature provide insight subject understand system operation look feature enable subject execute function assistance
42,1989,abstract paper describe use hypermedia system KMS collaborative work base experience KMS previous research ZOG system Carnegie Mellon University believe share database hypermedia system provide powerful foundation collaboration paper share database capability KMS plus particular aspect data model address fundamental issue face designer collaborative work system Collaborative Work Conceptual Data Model Hypermedia Hypertext 1 introduction past 7 year develop hypermedia system call KMS KMS design support people individual work collaborative work Collaboration KMS user take form share access database knowledge artifact article plan report memo group people work jointly brainstorm analyze idea manage project produce document sort instance simultaneously write large proposal group member like worker large construction site work different part building paper explore design issue feel developer collaborative work system address issue wrestle time process develop KMS section 2 give background information hypermedia system development KMS section 3 give nutshell description KMS emphasis data model datum model include aspect datum model uted direct commercial advantage acm copyright notice title publication date appear notice give copying permission Association Computing Machinery evolve convention enforce system section 4 present design issue issue describe approach take KMS address issue 2 BACKGROUND Definition ofHypermedia hypermedia hypertext system represent information small unit display separate window unit information contain text system vector graphic image sound clip animation term hypermedia user navigate hypermedia database select link connect unit information typically user create edit unit build information structure link unit Conklin provide thorough definition history hypertext proceeding recent conference hypertext history KMS KMS hypermedia system grow ZOG research project begin Carnegie Mellon University 1975 10 year ZOG group build series system explore characteristic large scale rapid response menu selection system ZOG system build 1980o1984 support management function board aircraft carder USS CARL vinson 1983 distribute version ZOG board vinson run network 28 PERQ workstation height project 15 people ZOG development group CMU ZOG group ZOG collaborative environment project management document production software engineering 1981 Knowledge Systems release commercial version ZOG call KMS Knowledge Management System author KMS aspect work include issue analysis document production software engineering communication product support administration marketing information management use special purpose software electronic mail conference bulletin board word processing estimate log 10000 person hour ZOG KMS Altogether create 50000 frame unit information Frame title Describes frame topic Tree item link frame low level hierarchy Command item provide navigation function utility Knowledge Systems World ksiworldl Welcome frame Knowledge Systems database feel free browse o Mail frame o Bulletin board o project task o KMS system design o KMS product document o MarketingSales o online demos o Old Version o proposal restructure Run backup large Save exit Reset Prev Home Goto help Disp Linear Print Frame Frameset plus number unique frame database Frame body expand topic frame Annotation item Begin note comment format keyword cross reference link frame Figure 1 Example KMS frame simplify version frame hierarchy represent article frame contain arrangement text graphic image item individual item link frame indicate small hollow circle action invoke program small solid circle 3 DESCRIPTION KMS KMS datum model KMS database consist set interlinked screen size workspace call frame Frames contain mixture arrangement text graphic image item link frame invoke program type frame Figure show example frame KMS database frame disk space permit distribute number server KMS database strong hierarchical structure kms database structure creator desire usually multilevel hierarchy act skeleton database level skeleton serve index entire database skeleton reach low level small hierarchy frame represent document project plan task relate group information Users freely supplement hierarchy link cross reference comment old version share information boilerplate language KMS user interface user navigate frame frame database point mouse cursor item link frame click left mouse button KMS access link frame display window Users invoke 95 KMS operation frequency single point click context mouse cursor instance space inside text item determine operation currently available mouse button aid user cursor image include vertical text label indicate button detail KMS user interface 4 ISSUES DESIGN COLLABORATIVE SYSTEMS general approach KMS take collaboration support general purpose share database approach correspond model collaboration share access common knowledge structure model propose Greif Sarin Jarrell Barrett section provide detail particular aspect KMS datum model support collaboration use framework issue design collaborative system state issue describe address issue design use KMS case mention enhancement KMS necessary address issue fully discuss KMS particular primary goal section examine particular design feature address certain collaborative work issue feature necessarily unique KMS share hypermedia system illustrate power hypermedia paradigm support collaboration hypermedia system collaborative work include Notecards Neptune Intermedia Augment system support individual work believe collaborative system successful people individual work produce document develop schedule plan manage personal information etc collaborate people comfortable individual work collaborative system individual work product share environmentfrom beginning contrast consider common situation have collaborative system people want communicate rest time use system integrate collaborative system instance people use electronic mail system communicate rarely use mail system create revise long document situation people face hurdle import work collaborative system order share work result collaboration KMS frame support wide variety information kms try provide environment accommodate large percentage work individual Frames general purpose workspace wide variety use furthermore database frame structure way user desire point early task hierarchically structured database experience people kms produce different type work product include proposal article online tutorial schedule issue analyse financial record technical manual software program people access work believe people need convenient access work order interact efficiently assume collaborative system support share access effort require reduce point people regularly access work kms support efficient browse primary way find information kms navigate browse frame KMS design fast display frame generally half second browse efficient incremental way learn content database People learn work driving street else neighborhood browse nt particularly effective people got lose process KMS underlie hierarchical structure database rapid display frame help people stay oriented browse easy create link rapid browse important helpful frame link provide convenient path database typically group people share KMS database build hierarchical global index common area group bulletin board frame share project proposal develop addition people frequently add shortcut database place direct link work colleague mail frame bulletin board global index add feature kmsthat help people create link quickly instance person copy frame rifle copy item automatically give link frame person travel database copy item attach cursor item anchor final destination serve link original frame additional method address issue try find particular piece information unfamiliar area share database browse efficient KMS need additional way user find exactly look large database instance need develop fast powerful text search facility need mechanism identifyingareas database change automatically notify user change Halasz discuss need feature plan implement indexing facility word frame commonly word index automatically system provide mutual intelligibility person gain access colleague work able sense finds strongly agree Trigg Suchman mutual intelligibility ability people understand work vital productive interaction goal people group share world model similar understanding knowledge group possess goal group work standard format KMS frame year develop convention frame format illustrate example frame figure 1 type frame wide variety task conventional format help impart homogeneity database easy people assimilate frame recognize see system support simultaneous access share database system degree simultaneous access depend grain size potential conflict word big chunk database lock edit piece information prevent edit rule small chunk low cost turn take people collaborate editing database small size KMS frame reduce probability conflict KMS unit conflict frame relatively small Frames fix small size approximately size workstation screen frame contain roughly page worth material typically contain paragraph KMS frame display edit simultaneously single workstation result information single person tie time limited conflict infrequent instance author paper simultaneous session person read modifying frame document 100 frame conflict rare discussion concurrency control KMS example author give reviewer link document draft continue work document author reviewer work simultaneously document small chance simultaneously want edit frame time encourage author reviewer early access paper active development system support annotation principal form collaboration comment work system convenient reviewer comment satisfy author need preserve integrity document KMS frame support nondisruptive annotation KMS frame size screen mean usually ample space place comment frame close referent read context KMS support distinct type item call annotation item prefaced annotation item ignore program format document frame remain visible screen relatively easy place comment frame people usually feel free comment people frame respond directly comment frame author revisit document frame find debate broken commentator author tend feel defensive people write frame comment wo nt intrude print version document Frames revise protect author document protect frame revision mean people author limited add annotation item frame change exist item add new non annotation item level protection useful author want people annotation want guarantee document ie format print version wo nt affect system support communication sense collaborative act act communication placing annotation document way communicate author add link global index people access work way communicate section refer particular kind communication people typically use electronic mail bulletin board collaborative work system support type communication KMS flame communication generality KMS frame allow serve mailbox bulletin board ad hoc discussion area example frame Figure 2 evolve group norm format frame norm person identify contribution date long comment place separate frame link main frame     o additional method address issue situation people share KMS database KMS need group level protection frame protection owner order support simultaneous online discussion KMS need ability automatically refresh someone screen frame view change need forge link KMS conventional electronic mail system people need continue system easily transfer information KMS 5 conclusion experience KMS collaboration convince share database approach powerful foundation collaboration early compare approach work construction site worker individual contribution global structure build Construction Site model collaboration take form develop large structure share database composite small structure addition provide share access database KMS support collaborative work aspect data model size generality frame ease make comment plus group norm format link frame strongly influence way KMS user collaborate recommend designer collaborative work system consider adopt share database approach recommend pay close attention datum model underlie system strongly influence system support collaborative work
43,1985,abstract GOMS theory stimulus response compatibility present apply remember computer command abbreviation abbreviation technique vowel deletion special character plus letter compare encode task significant difference find time type letter abbreviation time complete typing abbreviation difference analyze theory produce excellent quantitative fit datum r2 097 1 introduction Stimulus response compatibility SRC robust psychological phenomenon degree difficulty associate response dependent complexity relationship set stimulus correspond response complex relationship difficult response indice difficulty response time number error learn time preference SRC characterize Fitts Seeger 1953 know human operator situation ie elevator button elevator button SRC expect appear aspect human computer interaction HCI receive attention previous research SRC tend study motor response stimulus consist spatial pattern light Fitts Seeger 1953 Fitts Deininger 1954 Dunca1 1977 analogous task HCI use different arrangement cursor movement key different spatial relationship function key keyboard soft label screen cognitive area HCI SRC impact selection command name assignment symbolic code item datum base Landauer Dumais Gomez Furnas 1982 selection abbreviation technique command name paper examine possibility Abbreviations command name reduce typing load save space user task recall appropriate abbreviation know command want use abbreviation encode task study abbreviation technique primarily atheoretical endeavor Rogers Moeller 1984 researcher study spontaneously generate abbreviation rule base abbreviation conventional abbreviation look user preference error encode decode reaction time decode study significant difference measure different abbreviation technique Benbasat Dexter Masulis 1981 Benbasat Wand 1984 Ehrenreich Porcu 1982 Hodge Pennington 1973 Rogers Moeller 1984 Streeter Ackroff Taylor 1983 abbreviation technique specifcation mapping set stimulus set response difference indicate command abbreviation profit analysis term SRC S despite 20 year research SRC metric compatibility transcend particular experimental condition Welford 1980 instead know situation involve SRC lead practice attend complexity relationship stimulus response apply injunction simple well command abbreviation injunction take form APRIL 1985 great word abbreviation similarity easy abbreviation generate recall interpret Rogers Moeller 1984 abbreviation technique choose study vowel deletion abbreviation command vowel remove eg abbreviation delete dlt special character plus letter special character abbreviation letter command precede arbitrary special character similar abbreviation find screen editor ie escape key f forward word Emacs Qualitatively compare vowel    deletion special character term complexity relationship stimuli command response abbreviation vowel deletion relationship appe2rs relatively simple abbreviation figure command straightforward manner special character relationship complex arbitrary special character command figure command recently formulate quantitative theory SRC show fit result classic SRC experiment rosenbloom 1983 theory permit quantitative analysis complexity stimulus response relationship base supposition people perform reaction time task execute algorithm program develop task general proposal sort task involve cognitive skill card Moran Newell 1983 specifically computer text editing text base command language interaction show model base concept goal operator method selection rule call GOMS model provide excellent match behavior expert user analyze result current experiment theory permit go usual qualitative analysis SRC use response time index difficulty measure SRC literature theory term response time response time interest initial response time time initiate abbreviation give command measure time hit key typed response reflect time perform mapping stimulus response reflect SRC Execution time time initial response type letter abbreviation character abbreviation plan initial character type execution time include time perform mapping stimulus subsequent character response execution time reflect difficulty response compatibility SR mapping SRC initial response time plus execution time equal total performance time have possible measure complicate qualitative assessment SR relationship person remember vowel deletion abbreviation fast complete abbreviation slowly letter type experiment treat initial response time execution time 2 experiment experiment assess time respond command abbreviation present command depend abbreviation rule Vowel deletion special character rule examine control condition abbreviation maximally compatible task require participant type command response command Nonsense minimally compatible task require participant type nonsense syllable associate command 21 Materials command common use computer system range length letter Pairs command begin letter choose special character special character condition special character     choose far apart keyboard prohibit typing mistake require simultaneous use key Control key typed finger nonsense abbreviation letter nonsense syllable 0 meaningfulness Hilgard 1951 nonsense abbreviation begin letter nonsense syllable on1y associated command leter common eliminate bias particular command nonsense pair link command nonsense syllable participant random experimental session run experiment run IBM PCXT fully automate online instruction automatic datum collection APRIL 1985 22 participant participant 24 Carnegie Mellon University student take psychology course participant computer experience prior experiment 23 Procedure experimental session condition condition abbreviation condition abbreviation identical command condition rule base vowel deletion special character nonsense condition rule base condition half participant nonsense half participant see condition abbreviaton nonsense rule base condition section phase study learn testing study phase participant study list command set command begin letter associate abbreviation minute learn phase command abbreviation present screen participant judge pair correct recognition task attempt participant learn abbreviation practice recall Time recall reduce practice SRC effect great practice minimize Duncan 1977 dropout procedure command test person correctly identify proper abbreviation consecutive time mistake correct commandabbreviation pair display learning phase abbreviation condition assume participant need practice testing identity word testing phase single command appear screen person type abbreviation beneath task correspond real world situation user know command ie FORWARD letter remember abbreviation ie Control key f Emacs instruction work quickly possible make error participant tell slow find make error section mistake second chance provide type correct abbreviation second mistake correct commandabbreviation pair show command present seven time practice trial experimental trial presentation word appropriately randomize time near millisecond content key stroke phase record 3 Results Table 1 present initial response time datum non error trial ANOVA reveal significant difference word rule nonsense condition p 0001 marginally significant difference abbreviation technique p 007 significant interaction p 001 result suggest group participant treat control condition abbreviation nonsense difference occur vowel deletion special character condition T test confirm significant difference group abbreviation nonsense condition Table 1 AtJOVA Mean Initial Response Time msec corm ION Abbreviation Hu le base Nonsense Marginal Vowel Deletion RULE Special Charctter Marginal Effect df ondition Rule Condition Rule F ratio 7426 362 607 p 0000 0070 0005 MS error 10636 1 586 0869 APRIL 1985 table 2 ANOVA Mean Execution Time msec CONDITION Abbreviation Rule base Nonsense Vowel Deletion RULE Special Character Marginal 1384 1244 1314 1394 369 882 1005 727 866 Marginal 1261 780 1021 effect df Condition Rule Condition x rule F ratio 1355 752 1189 p 0000 0012 0000 MS error 1550 4 157 1 361 significant difference vowel deletion special character condition p d01 datum group merge control condition condition order follow abbreviation fast 842 msec vowel deletion 30 slow 1091 msec special character 120 slow 1823 msec nonsense slow 160 slow 2172 msec orde ing line qualitative analysis SR relationship section 1 ANOVA execution time show Table 2 significant effect rule p 005 condition p 001 significant condition rule interaction p 001 t test group participant treat control condition execution time order special character fast 369 msec nonsense 135 slow 866 msec abbreviation 256 slow 1314 msec vowel deletion slow 278 slow 1394 msec number error learning phase rule base nonsense condition collect vowel deletion mean 21 sd 20 special character mean 194 sd 160 nonsense mean 226 sd 187 ANOVA reveal significant difference condition F 724 p 005 t test difference vowel deletion condition condition t 372 p 001 special character nonsense condition datum report completeness theory account error behavior discuss 4 discussion 41 GOMS Theory SRC 1 difference initial response time result different abbreviation technique indicate abbreviation encode task subject SRC difference execution time indicate response difficult character recall figure GOMS theory SRC allow quantitative calculation initial response time execution time total performance time accord model people perform reaction time task execute algorithm develop task task algorithm write predict response time calculate algorithm language ARTLess embody psychological assumption present example detail rosenbloom 1983 Algorithms develop task examine behavior people perform task abstract analysis analogous develop algorithm computer program figure 1 algorithm write special character encoding task read command computer screen represent L1 result operator stimulus operate constant Command assign variable Stimulus algorithm participant separate command distinct group 1in rosenbloom thesis theory call algorithmic theory SAC eliminate favor general GOMS theory APRIL 1985 figure 1 Algorithm Special Character Condition begin Lt Stimulus     StimulusCommand L2 Class     ValueStimulus Class L3 SUCCEEDED Class tClass L4 Special    Symbol 1 L5 SUCCEEDED class 2class L6 Special    Symbol 2 L7 ResponseSpecial LS Letter     LetterStimulus L9 ResponseFirst Letter correspond special character     L2 participant recall class command belong L3 person test class class 1 special character correspond class 1 remember L4 person test Class 2 LS second test necessary failure boolean operator ls Class 1 result variable class equal Class 2 absent altogether class absent algorithm fail person recall abbreviation Class Class 2 special character class 2 recall L6 special character type L7 letter command retrieve L8 type L9 algorithm write abstract task analysis prior run experimental session borne retrospective report half pilot participant expect people use algorithm type explicit task analysis emphasize variety method simple task algorithm write task response time compute counting operator algorithm pattern result assume operator equal length clearly indicate decomposition type operator map retrieval motor Mapping operator ie ls Class 1 Letter perform elementary step require figure abbreviation Retrieval operator ie Value perform retrieval arbitrary fact memory Motor operator ie Response perform typing response plausible way perform particular task algorithm absence datum relative frequency assume algorithm equally time population people perform task time compute algorithm average 42 Calculation Response Times set algorithm write model condition algorithm stimulus perceive word ie Stimulus operator operator abbreviation figure recall abbreviation type abbreviation condition algorithm word burst algorithm assume word learn sufficiently allow participant type continuous burst pause think spelling algorithm syllable burst algorithm assume participant type syllable burst pause think spelling syllable type burst continue pause syllable break word complete vowel deletion condition algorithm figure algorithm assume abbreviation figure examine letter syllable turn type consonant algorithm provide additional example ARTLess Figure 2 algorithm remember algorithm assume abbreviation learn recall directly abbreviation type continuous burst special character condition algorithm class algorithm figure 1 assume participant remember class command class stimulus belong algorithm search algorithm assume word compare command learn list match find special character associate command retrieve nonsense condition algorithm nonsense algorithm search algorithm special character condition word compare command learn list match find associate nonsense syllable APRIL 1985 figure 2 Algorithm Vowel Deletion Condition begin Stimulus     StimulusCommand Syllable     SyllableStimulus SUCCEEDED NullSyllable begin Letter     LetterSyllable SUCCEEDED NullLetter SUCCEEDED ConsonantLetter QueueLetterAbbreviation Letter     LetterSyllable SUCCEEDED NullLetter begin Letter    QueueAbbreviation SUCCEEDED NullLetter BEGIN ResponseLetter Letter QueueAbbreviation END Syllable    SyllableStimulus END END SUCCEEDED NullSyllable ResponseReturn Table 3 Average Number Operators Abbreviation Technique Abbreviation Technique Abbreviation Vowel Deletion Special Character Nonsense Average Operators Letter Initial Response Time Mapping Retrieval Motor Average Operators Letter Execution Time Mapping Retrieval Motor 671 521 1318 275 retrieve word burst class search nonsense algorithm write prior experimentation syllable burst remember algorithm write datum give evidence existence figure algorithm write experimentation modify syllable base word base pause syllable break find datum 43 Theoretical Observed Performance Table 3 give number different type operator algorithm initial response execution abbreviation multiple regression analysis perform number operator type independent variable response time dependent variable initial response time datum execution time datum regression maximum number independent datum point slope result line indicate lhat mapping operator take APRIL 1985 0 j 12 o Initial Response Time o execution Time o     4     s     1    2     1 6     2    o     24 Theoretical Response Times Figure 3 Theoretical vs Observed Response Times 60 msec retrieval operator take 1200 msec motor operator take 120 msec line fit datum r2 0974 p 0005 result plot theoretical vs observed initial response time execution time figure 3 intercept 000000 slope 099999 r2 0974 p 0001 5 Conclusions apply qualitative analysis SRC abbreviation encoding task allow state special character sr mapping complex vowel deletion sr mapping control condition GOMS theory allow statement complex mapping explain magnitude initial response time difference model allow analysis extend initial response time execution time total performance time explain magnitude difference extension important situation response differ complexity SR mapping explicative power GOMS theory superior qualitative analysis previously SRC phenomenon Applying SRC analysis study command abbreviation go purely empirical ordering abbreviation technique common previous research initial response time execution time explain point power theory mainly explicative algorithm develop empirical evidence predictive power follow HCI research continue explore field detailed task analyse experimentation experience allow write accurate algorithm prior data collection
44,1986,Abstract widely believe overlap window preferable tile nonoverlapping one little research support belief analysis basic characteristic windowe regime predict fact situation overlap window inferior tile experiment test prediction verify task user tile window yield fast performance result suggest need close study principle underlie windowe regime designer well understand tradeoff involve 1 introduction current trend use overlap window multi window system base assumption overlap window clearly beneficial user tile one little analysis experimentation window system card et al 1984 Cohen et al 1985 Bury et al 1985 lack information make difficult understand relative value different window mangagement system paper present simple analysis windowe regime result experiment test prediction derive analysis 2 analyi windowe regime fundamental characteristic multi window system 1 mechanism window location size 2 effect manipulate window window 3 degree user system control parameter define tile window 0075 system open window fully visible window allow overlap system attempt manage window location size effect maximize use screen space keep window content visible system typically determine location size window location andor size window change window relocate resize need obscure window size decrease increase number window user content newly open window decrease size mean tile system limit number window open simultaneously example tile window system include Star system Smith et al 1982ab Cedar system Teitelman 1984 Andrew system ITC 1984 MicroSoft windows Lemmons 1983b define overlap window system user manage window location size way desire user control use screen space visibility window content location andor size window change window obscure location size change window overlap user choose screen worth content newly open window example overlap window system include programming environment eg Smalltalk Tesler 1981 lnterlisp 0 Sheil 1983 VisiOn system Lemmons 1983a WHIM Goodfellow 1985 User requirement multi window system characterize ability window conform content maximize visibility content ability system relieve user having manage size location window overlap window system maximize user requirement overlap system user April 1986 control move resizing overlap window screen system typically little aid user window management tile window system maximize second user requirement tile system attempt satisfy conformance requirement available screen space window change size location window open close Tiled system typically little conform window content default shape number open window increase size window decreases1 3 prediction analysis predict situation window system preferable tiled system aid user content window basically conform define arrangement window size placement b user wish distracted manage window overlap system aid user content window conform predetermine window arrangement b user wish control window environment completely task expect tile window system aid user performance require content window maximum visibility default window location size figure 1 user need additional window management proceed directly task perform task overlap system require user manipulate window state similar automatically provide tiled system figure 1 task suitable tile window conversely task expect overlap system aid user performance involve window content conform regular pattern figure 2 order obtain 1 note system maximize requirement unusable maximize prescient degree unattainable current technique maximum visibility content user arrange window irregular manner utilize ability manage overlap window    figure 2 task suitable overlap task require window manipulation order perform efficiently overlap window aid user unskille use window management mechanism inexpert user spend effort try master functionality overlap window scroll opening close window tile sytem 4 experiment order test prediction different window system preferable different task conduct experiment Xerox ViewPoint Office System direct descendant Star system ViewPoint system useful user specify window management tile overlap affect aspect system ViewPoint tile window system allow open window vertically half screen user open window open available space window open divide vertical space equally window screen figure 3 user control height window window leave right half screen general window close remain open window attempt fill vacate space user manipulate window change length position vertical column open additional window cause system override change subsequent opportunity occur satisfy user specify constraint window management system attempt ViewPoint overlap window system provide user control tor move window resizing window width height place window April 1986 figure 3 Default tile location write piece paper variation task create call regular task text graphic object arrange rectangular region upper left document page figure 5 task satisfied predict condition optimal tile task subject view entire content document tile window leave screen right fact text graphic object see default window location size leave page right solve task ViewPoint tile window require window operation move window right screen scroll window slightly window Initially window open page location offset default window opening show figure 4 user choose manipulate size location window system remember subsequently close reopen window affect position shape File File B 6 File C File D Figure 5 Files regular task figure 4 Default overlap location subject 22 subject coworker author Xerox Office Systems Division consist programmer secretary project planner twenty thirty fortie thirteen female ViewPoint degree subject minimum experience tile overlap multi window system subject perform experimental task include final datum tile irregular condition frustrated finish task accidentally give mislead incorrect instruction Tasks basic form th experimental task look ViewPoint document file contain text graphic matching graphic object brief paragraph describe search required subject answer variation task call irregular task text graphic object arrange irregular manner document figure 6 task satisfied predict condition optimal overlapping task content conform tile window size shape subject File File B File C File D figure 6 Files Irregular task April 1986 information window overlap efficient method solve irregular task tile window require moderate scrolling opening close different window prediction user work tile window time solve regular task system care manage window time solve irregular task tile window accomodate irregular content Procedure Subjects test individually condition tile overlap window perform Regular Irregular task2 subject tell experiment observe people solve simple task ViewPoint experimenter review command subject use include window manipulation command indicate understand task instruction subject perform task time stopwatche experimenter subject perform task experimenter note frequency window operation error information collect frequency subject tile overlap window system available Xerox Results individual subject time complete task plot Figure 7 see moderate variability subject perform regular task median time group overlap window 30 long 249 sec vs 185 p 05 wilcoxon test tile window case hard irregular task subject exhibit variability fact distribution subject overlap window bimodal call group Fast slow group fast group take time perform task subject tile window 274 sec vs 419 p 05 Wilcoxon test Slow group take time 546 sec vs 419 p 05 Wilcoxon test fast group programmer thoroughly verse use overlap window slow group nonprogrammer familiar overlap window appear level expertise distinguish groups3 wide range variability suggest distinction occur subject tile windows4 observe distinction 2 run subiect task d1fferental transfer effect nmdere second observation unusable 3 expertise number factor example programmer typically spend hour day work overlap window 1n Xerox Mesa programming environment 4 Recall sub1ect 1n tile irregular condition discard datum unable complete task fast slow group regular task condition small sample case difference small number window operation condition give figure 8 see distribution roughly task completion time measure overall correlation 867 p 001 reliable correlation individual condition possibly small sample size subject overlap window solve regular task perform roughly twice window operation tile window result clear irregular task difference fast slow user overlap window fast subject fewest operation contrast number window operation tile Irregular subject span entire range group Overlapping Irregular condition use overlap window arrange document content visible irregular task expect user tile window perform operation overlap window user fact tile subject few window operation overlap subject give support hypothesis expert inexpert user tile window fact tile irregular subject fast few operation condition discussion result confirm task require little window manipulation carry quickly tile window task require window manipulation carry quickly overlap window general conclusion qualified consideration user expertise w look user inexpert overlap window clear tile window well kind task advantage overlap window available fair degree practice furthermore expertise important use tile window suggest data window operation expert user tile window able solve irregular task fast expert user overlap window mean give level expertise tile window well situation want draw strong conclusion limit datum certainly worth examination note paradoxically subject preferred overlap window 5 conclusion characterize basic user requirement multi window system 1 window conform content 2 system relieve user window management note April 1986 Time Complete second 150 ii tile overlap Regular Task tile Overlapping Irregular Task Figure 7 Individual Median Completion Times Condition Number Window Operations tile Overlapping Regular Task L Tiled Overlapping Irregular Task Figure 8 Individual Median Number Window Operations Condition overlap window system emphasize characteristic tile window system second analysis predict find situation window management system yield fast performance experimental result report support analysis prediction experiment look task window system provide additional information access multiple source information seven function card et al 1984 mention multi window system furthermore examine possible implementation window management clearly limited exploration design space begin conclusion work advocate tile overlap window emphasize importance exploration effective window design require complete model give window management system preferable acknowledgement thank Stuart Card comment discussion Rachel Rutherford editorial suggestion colleague willing subject
45,1989,abstract study conduct provide evidence nature visual search process menus derive design principle menu base natural language mbnl interface database effect window size window activity query length investigate find long query perform fast single active window multiple active window rate natural Query time increase query length eye fixation frequency fixation duration dwell time Errors likely occur long query fixation duration varied window size visual behavior depend area view interaction window activity query length contrast previous study find menu scan randomly scanpath deterministic multiple active window unconstrained query length increase User interface design recommendation derive finding introduction Menu base natural language MBNL provide form constrain natural language human computer dialogue mbnl interface word phrase display menu item parse window user construct natural language sentence select item sentence complete send underlying application program execution work area show promising result coverage limitation system apparent restricted language pointing device 3te direct commercial advantage acm copyright notice title publication date appear notice give copy permission te Association Computing Machinery copy othe1se republish require fee andor specific permission require interaction typing eliminate user guarantee semantically syntactically correct query command Users experience navigation difficulty excessive menu depth lack familiarity upper level menu item have mental model system discrepant designer menu base system effective careful design fast display rate response time provision take shortcut deep menu level Card find alphabetically arrange command menu search fast menu command option group functionally Card argue alphabetically arrange menu permit fast visual search argue menu search randomly theorize user scan menus perceptual chunk require variable number eye movement depend menu organization difference search time observed conclusion provide basis assertion intra frame search randomly systematic eye movement study command menu provide high degree practice highly restrict scanning option    occur involve random search subset option MacGregor Lee Lam argue Cards evidence random visual search inconclusive consistent sequential search random search Lee argue search process database menu differ search process command menus sequential self terminate exhaustive present study conduct provide evidence nature visual search process menus establish design guideline MBNL interface Users perform database retrieval query develop select menu item MBNL parse window effect window size window activity query length investigate Window size manipulate eighth fourth half item window visible time window activity manipulate single window active multiple window active cursor enter active window Query length manipulate require user select menu item METHOD Experimental Design include global fixation measure fixation dwell sequence FDS measure global measure include fixation frequency duration rate FDS measure include fixation frequency fixation duration dwell time relative dwell time respective area interest window interface area Dwell time equal sum duration spatially temporally contiguous fixation area relative dwell time equal ratio dwell time area total dwell time area experiment conduct 3 x 2 x 3 mixed factor design Window size treat subject variable level represent window size allow sixteen menu item visible thirty item menu figure 1 Window activity treat subject variable level represent single multiple active window single active window user constrain make selection currently active window window menu selection multiple active window user menu selection active window finally query length treat subject variable level represent item query dependent measure include query performance time error frequency subjective evaluation measure visual performance visual performance measure order conditional transition probability area screen compute conditional information probability matrix determine provide measure statistical dependency spatial pattern fixation statistically dependent case transition area uniquely area instance minimum information transition probability matrix transition area occur stratified random fashion probability fixating area statistically independent fixation precede area scanpath completely random transition completely unconstrained maximum information transition probability matrix large information metric statistical dependency scan small information metric great statistical dependency scan information Mazda 323 Mercedes Benz 190 Audi SOOOS Buick Century Buick Electra Buick LeSabre Buick Regal Buick Riveria Chevrolet Caprice Chevrolet Celebrity Chrysler Fifth Avenue Chrysler LeBaron Chrysler New Yorker Dodge Aries Dodge Diplomat Dodge Lancer Dodge600 Ford LTD Crown Victoria Page Fl Page F2 Chevrolet Chevette Chevrolet Nova Chevrolet Spectrum Chevrolet Sprint Dodge Charger Dodge Colt Dodge Omni Ford Escort Honda Civic Honda Prelude Si Hyundai Excel Isuzu Mark MazdaGLC Mazda323 Mercury Lynx Mitsubishi Tredia F3 Restart F4 Acura Legend Audi4000S bmw318i Buick Skyhawk Buick Skylark Buick Somerset Cadillac Cimmaron Chevrolet Cavalier Dodge Conquest Ford Tempo Honda Accord Isuzu Impulse Mazda626 Mercedes Benz 190 Mercury Topaz Mitsubishi Cordia execute FlO Figure 1 sixteen item window size Menus page leave sixteen item view window subject 36 subject experiment subject pay 20 24 female 12 male range age 21 51 median age 30 subject average 93 month computer relate experience mainly data entry word process Materials Query Instructions subject give set 24 query 8 query query length query state recursive form find information car car car specific car make model specify rating rank form subjective evaluation obtain point bipolar rating scale rank form request rank order preference interface Software MBNL interface develop NaturaILinkTM combine semantic grammar analysis interactive menu base system Equipment Computer Subjects Texas Instruments Business Pro 8 mhz clock speed 640 k memory 20 megabyte hard disk monochrome graphic board monitor Eyetracker Eye point gaze datum collect Applied Science Laboratory 1998 Eye View Monitor system illuminate leave eye collimate near infrared light produce backlighted bright pupil corneal reflection system compute vector distance center feature determine direction gaze magnetic head tracker enable system track eye head movement cubic foot Point gaze datum collect 60 hz accurate deg radius x y eye coordinate datum smooth fitting degree square polynomial slide window datum point integer convolution technique Eye fixation identify filter datum deg 100 ms operational definition fixation identify point gaze remain deg deg area 100 ms Procedure subject inform go find information car state aloud consider purchase give practice trial interface set query perform subject give rating scale evaluate interface 20 minute break subject give practice trial alternate interface set query perform subject give rating scale evaluate interface finally ask rank order interface preference RESULTS Query Performance Times Query performance time derive timestampe keystroke datum analyze 3 x 2 x 3 mixed design analysis variance ANOVA Newman Keuls test simple effect F test perform case significant main effect interaction p 001 main effect window activity significant fl33 517 p 00296 query perform fast single active window 2049 s multiple active window 2376 s main effect query length significant f266 32273 p 00001 item query perform fast 1083 s item query 2117 s perform fast item query 3436 s interaction window activity query length F266 364 p 00317 item query perform fast single active window 1925 s multiple active window 2310 s Likewise item query perform fast single active window 3170 s multiple active window 3702 s Error Frequencies Log linear analysis show model include query length give good fit error frequency datum Chi Square goodness fit test show error query length fact uniformly distribute Chi Sq 25551 df 2 p 0001 Pairwise Chi Square test show error uniformly distribute    item query Chi Sq 0857 df 1 p 0335 uniformly distribute    item query Chi Sq 19514 df 1 p 0001    item query Chi Sq 12800 df 1 p 0001 Subjective Evaluations Rank order preference Rank order preference window activity pool group analyze binomial test result fail reach significance p 01336 rank order preference break window size group show 75 sixteen item window user prefer multiple active window p 01460 58    item window user prefer p 07744 rating scale rating scale datum analyze window activity Friedman Way ANOVA find multiple active window rate natural single active window Chi Sq 400 df 1 p 00455 Vlsual Performance 3 x 2 x 3 mixed design multivariate analysis variance MANOVA perform global fixation measure correspond 3 x 2 x 3 anova perform case significant multivariate result fixation dwell sequence measure analyze mean 3 x 2 x 3 x 6 mixed design MANOVA additional level subject factor represent area interest screen correspond 3 x 2 x 3 X 6 anova perform case significant multivariate result information metric extract conditional transition probability matrix dependent measure 3 x 2 x 3 mixed design ANOVA Newman Keuls test simple effect F test perform respectively case significant univariate main effect interaction p 001 fixation measure multivariate main effect window size significant f660 224 p 00513 Univariate test show mean fixation duration differ window size f233 418 p 00242 long item window 401 ms sixteen    335 ms item 330 ms window multivariate main effect query length significant F6128 425 p 00001 Univariate test show mean fixation frequency differ query length F266 23364 p 00001 few fixation item query n 17 item query n 35 few item query item query n 59 Mean fixation duration differ query length F266 783 p 00009 short item query 343 ms item 358 ms item query 364 ms fixation dwell sequence measure multivariate main effect window size significant F860 258 p 00170 Univariate test show mean fixation duration differ window size f233 452 p 00184 long item window 344 ms    285 ms sixteen item window 281 ms multivariate main effect query length significant f8126 4516 p 00001 Univariate test show mean dwell time differ query length F266 17311 p 00001 mean relative dwell time f266 5762 p 00001 mean fixation frequency F266 18453 p 00001 mean fixation duration F266 4948 p 00001 Mean dwell time short item query 1188 s item query 2266 s short item query item query 3623 s conversely mean relative dwell time great item query 1933 item query 1805 great item query item query 1721 mean fixation frequency item query n 36 item query n 65 item query item query n 101 finally mean fixation duration short item query 250 ms    319 ms item query 341 ms multivariate way interaction window activity area interest significant F20538 204 p 00051 Univariate test show mean dwell time differ function interaction F5165 377 p 00030 mean relative dwell time f5165 2511 p 00294 Mean dwell time middle parse window long multiple active window 325 s single active window 260 s mean relative dwell time great area single active window 4083 multiple active window 3772 Conditional information metric significant main effect query length F266 30919 p 00001 scan pattern statistically dependent item query 0915 bit item query 1149 bit statistically dependent item query item query 1340 bit significant interaction window activity query length F266 483 p 00111 scanpath statistically dependent single active window multiple active window item query 1124 vs 1175 bit item query 1311 vs 1370 bit Tables 1 2 observe amount information expect amount information assume stratified random sampling effect query length interaction window activity query length expect information equal 2585 bit completely random scanning case observe information expect scan pattern statistically dependent predict completely random sampling stratified random sampling model TABLE 1 Observed expect Conditional Information Metrics Query Length Query Length Observed 0915 1149 1340 expect 1361 1733 1971 NOTE information metric give bit TABLE 2 Observed expect Information Metrics Window Activity Query Length Interaction Single Active Wdws Multiple Active Wdws Pk Observed expect Observed expect 0924 1378 0906 1345 1124 1705 1175 1762 1311 1940 1369 2002 note information metric give bit discussion conclusion multiple active window rate natural single active window overall use appear facilitate user acceptance query performance slow multiple active window effect exaggerate long query Dwell time tend long certain area screen multiple active window furthermore subject engage statistically dependent scan multiple active window reflect relatively great scanpath uncertainty Overall appear search strategy efficient multiple active window single multiple active window present tradeoff address context mbnl system design general use multiple active window facilitate user acceptance mbnl system time critical condition use single active window advisable significant effect window size Mean fixation duration long item window window size appear subject take long reach decision match target menu item case subject mentally compare target item menu item fixating produce long fixation duration firm design recommendation offer window size small window contain large number scrollable item probably avoid appear increase decision making time Query performance time fixation frequency dwell time relative dwell time increase query length fixation duration long    item query item query item query produce error item query furthermore query length increase spatial pattern fixation statistically dependent distribute stratified random fashion query length increase scanpath uncertainty increase presumably increase stochastic nature scan increase query length reflect increase uncertainty associate search large set target menu item multiple active window effect exaggerate great extent possible query length decrease particularly multiple active window determine frequency menu item include query different length user testing prototype system feasible meaningful join menu item frequently include long query long menu item result redundancy create content menus decrease number selection require build long query final point theoretical interest fact scan pattern describe purely random visual scan pattern statistically dependent predict stratified random sampling model menu scan purely deterministic menu scan large extent systematic pattern eye movement appear menu scanning represent reasonably order Markov process acknowledgement author like thank Dr Gerald Birdwell Dr William Muto User Systems Engineering Center TI support dissertation research project Appreciation extend Dr Glynn Coates Old Dominion University supervision
46,1986,ABSTRACT Computer base voice messaging system send receive confidential message touchtone telephone Auditory prompt guide user series menu list option user proceed session report describe voice message system enhance redesign base think aloud protocol customer site interview usage statistic describe summary pattern behavior goal human factor effort optimize system use evaluation length wording phrase auditory prompt ease accessibility provide menu structure lead specific enhancement redesign Feedback help define audio helpother option system 1 provide context sensitive assistance 2 document infrequently option enable streamline routine transaction introduction Telephone communication frequently hamper people available phone usually information recipient learn receptionist phone answer machine caller number voice message system know voice store forward system aileviate problem communication voice message user specific phone extension ie access code enter user ID password phone key pad guide series option voice prompt user review accumulate message create message user familiar system frequently preempt prompt example experience user rapidly press sequence 4 key hearing promptssoo75 unlike answer machine caller inay record message minute long user send immediate response single key press user distribute ssme message multiple recipient distribution list forward message party optional feature voice message system automatic forward user phone incoming call forward system Callers prompt leave message voice design user interface system dependent number characteristic need user Completeness prompt Users voice message system expect need training use complex capability add development prompt structure increasingly challenge user sequence decision base audio feedback information decision available appropriate point example novice user decide save message ve hear prompt save message imnediately available Efficiency prompt frequent user voice message system expect efficiency user want hear information help achieve goal screen base system user option scan relevant information eg letter key word temporally present voice interface scan usually possible evaluated scan mechanism eg scan select incoming message confirm standard prompt provide information efficiently possible efficiency navigation frequent user voice system consistency path voice menu user important mtb require minimal key stroke mini 1 nunr decision eg user require irrelevant menu reach function Mapping usage exist habit user establish protod phone use example expect insert delimiter telephone message need identify advantage automatic response Novice expert difference need novice expert user different novice knowledge procedural detail navigate system prompt provide specific instruction guide step expert familiar system structure need simple confirmation frequently function frequent function like look user ID audio directoryexpert need easily obtain instruction 1981 Wan introduce Digital Voice Exchange DVX h voice message system support large number user 1985 multifaceted human factor evaluation carry support development advanced feature overall system restructuring evaluation include 3 major component 1 think aloud protocol 5 novice 5 intermediate 5 expert user evaluate iterative design procedure describe Lewis 1982 present user modify prompt menu structure user describe reaction confusion generate response eg press 1 key 2 Interviews 10 customer site user interface need specific company System administrator ask general system usage user error confusion site implementation issue User ID Password assignment 3 Usage statistic LO customer site show relative frequency feature use case powerful function infrequently actively encourage use make option prominent menu structure provide well documentation exemplify use Gould Boies 1983 1984 report design consideration development ibms voice message system Ehrlich Akiba Munson 1983 discuss specific implementation condition customer site encourage support successful use system study document additional insight gain design process surround recently develop product procedure think aloud protocol Preliminary prompt design facilitate user transaction example new prompt reflect system restructuring relegate frequently function OTHEROPTIONS facility Wang employee vary experience exist system participate protocol 5 novice 5 intermediate 5 experienced user user give follow prespecifie set goal accomplish system Logon send message look number user directory Listen reply forward message new prompt read researcher participant respond telephone key press user question comment record Design change subject test iteratively approach acceptable design Interviews conduct telephone interview 10 customer site site product year instal month prior interview case interview hold system administrator instance system administrator manager interview Discussion topic cover user interface issue customer procedure system implementation topic discuss Assignment Access Codes Assignment User IDS Passwords Menu Structure Key Sequence Procedures Message Saving Auditory Prompt Wording Usage Statistics end interview request site send usage statistic describe global pattern behavior follow statistic collect Percentage Users Logon Daily Send Messages Reply message Forward message use Mailing Lists RESULTS summary result protocol interview statistic EoLlo type data Listed consequence andor implication design example user think aloud protocol Rephrasing Prompts Conciseness variable information present phrase eg number message mailbox place relevant information begin phrase user quickly preempt know contextual information ch186proceeding April 1986 3 message mailbox message mailbox Consequence experience user quickly adapt rephrase frequently preempt Phrase hear variable information add information novice user Users require enter delimiter key ID number password mahy report new user trouble locate key hello enter user identification number Press pound key end number hello enter user ID follow pound key slight pause pound key low right telephone key pad Consequence Novice user hesitate slightly able hear prompt pound key location 5 novice user locate pound key expert tend enter password hear prompt Options Facility Unprompted Features system contain hidden function prompt Press 4 play message 5 act message 6 goto message save message delete Press 4 play message 5 act 6 erase option playback press star key user press star key system respond playback press 7 rewind message 9 fast forward skip entire message press pound key Consequence experience user know feature exist quickly utilize discovery Options Facility infrequently feature order streamline user interaction system infrequently option list Options Users prompt specify future delivery date time send message future delivery seldom future delivery access OTHEROPTIONS facility Consequence user request send message future date difficulty find Options facility HELP Facility Additional Instruct ion Initially help facility add context sensitive help access star key point dialogue user show confusion Enter delivery date Press pound key end entry select today date press pound key Enter delivery date follow pound key help press star key user enter star key system respond enter July fourteenth press zero seven Consequence Users quickly correctly enter date hearing help message user continually access new infrequently feature HELP facility provide user information request consistency design function user key press effect independent specific context example key allow user backup fast forward listen message allow user backup fast forward listen content help message backup fast forward function available message playback Backup fast forward function available message playback user directory playback mailing list playback RELP Options prompt Consequence fast forwarding message playback experience user spontaneously feature listen help message Interviews interview provide confirmation interface enhancement test think aloud protocol new user interface issue discover site implementation issue key sequence procedure administrator report type user error result system comply user expectation user hang record message message send system require user press 5 key send user disconnect recording message system send message Cl l186proceeding April 1986 Design implication try match traditional association consequence commonly system eg answer machine forwarding system Location infrequent option site report user save message infrequently mention problem overutilization disc space save message accessible indirectly ie Act Message prompt Saving message remain accessible indirectly currently Options choice Design Implications voice digitization 28kbps storage intensive frequent save message encourage Key sequence match frequency use placement Save message option similar infrequently option site implementation Issues Access code Access code allow user logon DVX Sites vary widely simple easy remember access code site 4 digit extension local access call outside user precede extension area code local exchange require easy remember 5555 extension hard remember 11 digit string little repetitive pattern digit implementation Implications Sites easy remember code play active role choose access number customer claim give extension group ie telecoasnunication PBX group etc implementation recommendation system support assign variable length IDS require user enter delimiter pound key signal end ID entry site User IDS consist constant number digit preferable mandate use delimiter majority case Usage Statistics Usage statistic describe global pattern user behavior figure 1 show usage statistic 10 customer site percentage represent daily average Data collect 3 day non holiday midweek period site J automatic forward interestingly different usage pattern site likely use system answer machine log listen message create message logon message creation forwarding record system statistic usage pattern different statistic include range report aany authorize user log daily authorize user system recognize User ID password total number authorize user proportion log time sample percentage user log daily range 31 70 depend particular customer site total number logon include people log usually time great indicate user time day message create ratio number message create number user log day sample range 50 103 datum suggest user create message day encourage site specifically request easily remember extension access code use reply send thirty 65 message receive reply User ID end password site assign User IDS constant number digit 10 site User IDS consist 4 digit cosmmn practice assign telephone extension User ID share extension reason duplication ie remote site user field sale personnel etc site differ widely ID assignment method include allow user choose ID inverse extension replace digit number zero 8000 series number Implementaticm Implication User id strong usage pattern function underutilize Forwarding Messages 3 9 message forward party forwarding message powerful way redirect share information reach indirectly Act message prompt Menu restructuring test protocol allow user access directly provide appropriate scenario train documentation result increase use pramword rhould eaoy remember werm extension ID user choose number site allawad wer choose id password report few instance user call system admiai8trator8 forgot intorrtion show figure 1 collect data average number recipient message enter multiple recipient statistic indicate message 81 89 recipient 5 18 ch186proceeding April 1986 STATISTICS Authorized Users 55 total user create 100 authorized user log Replies 65 Total create forwards 7 Total create Total Calls 2006 total number Authorized 1200 Users customersite 31 43 22 70 34 24 57 61 61 103 55 50 51 44 30 46 33 46 9 3 6 3 4 32 53 25 55 15 33 60 3 14 6 0 4 blank entry indicate datum available figure 1 Usage Statistics Voice Messaging System 10 Customer Sites Al figure base daily average collect 3 day non holiday midweek period recipient 0 4 recipient large number recipient range 10 16 Mailing list Mailing list allow user distribute message multiple recipient single phone alleviate telephone tag increase power system system administrator act user request add edit delete mailing list result mailing list frequently site interview administrator report 0 50 user mailing list Recorrmended mailing list enhancement ability create edit share erase mailing list directly telephone conclusion type datum collect protocol interview usage statistic provide different perspective design user interface think aloud protocol reveal microlevel cognitive decision user encounter way specific goal protocol datum substantial impact design prompt menu structure customer interview frequent user illuminate problem system design evident hour use customer leave partial design responsibility implementation interview uncover salient problem user interface eg require explicit action send message record general complaint prompt length difficult interpret specific cosrnent protocol Comments relative frequency feature eg save message confirm appropriateness relatively subordinate position menu structure aspect interface design leave customer access code id password show wide variability equally variable ease use confirm guideline user define feature contribute successful use system Usage statistic provide broad framework helped prioritize access route require particular function point need additional feature usage statistic indicate customer actively successfully product user log sample period statistic show high percentage message create reply CH186Proceedinns Amil 1986 statistic indicate user log system time day instance user log message mailbox confirm message waiting indication signal light handset distinctive dial tone important user ultimately voice message system integrate general office automation terminal arrival voice message alert user terminal implement Results effect result study receive software engineering design team incorporate change system release gradual basis example initial implementation stage rephrase prompt change menu structure rephrasing result positive user feedback installation broadcast Evaluation Mailbox number Wang user comment new prompt 30 user leave message state preferred new prompt user feel provide fast access message user indicate overall system response time improve prompt wording change second implementation stage include addition HELP Options facility presently new menu structure code release later year plan regather system statistic help evaluate effectof change eg infrequently function forward message mailing list usage increase source datum lead enhancement change user interface allow full usage quick transaction functionality add future ease use critical design consistent flexible logical interface add functionality add unnecessary complexity acknowledgment thank Jonathan Grudin helpful comment
47,1989,abstract paper describe practical synthetic visual environment use CAD teleoperation instead expensive head mount display system use standard display compute smooth shaded image ATT Pixel Machine interface use VIaL DataGlove track hand bring synthetic world space hand Hand gesturing implement virtual control panel 3d modeling task simple speech recognition add markedly improve interface outline extension need kind interface teleoperation introduction synthetic environment serve tool depict computer simulation real view touch Work area date Ivan Sutherland write display connect digital computer give chance gain familiarity concept realize physical world look glass mathematical wonder land 1968 Sutherland demonstrate head mount display system design represent synthetic object user visual space head tracking update computer generate view sophisticated head mount display system currently develop training fighter pilot cockpit simulation high end system costly commercial use demonstrate difficult implement practical system uted direct commercial advantage acm copyright notice title publication date appear notice give copying permission Association Computing Machinery user visual perception important interactive part synthetic environment consider Mechanical system Vickers Clark hand hold wand button implement dimensional locator picking device teleoperation system development NASA Ames incorporate wide angle stereoscopic head mount display glove device dimensional interaction speech recognition 3d sound cue speech synthesis gesture tracking device image generation hardware detailed discussion synthetic environment find PRACTICAL SYSTEM far synthetic environment computer aid design partially high cost system particularly dwell visual perception synthetic environment system focus interact synthetic environment use standard stationary display user remain seat stationary display tolerate slow update rate compute high quality image instead bring synthetic object user visual space use VPL DataGlove hand space user reach surrounding computer model hand reach synthetic world way hand direct dimensional interaction computer model Speech recognition complement hand tracking help navigate system system design vehicle experiment natural dimensional interface computer interface user talk gesture provide opportunity efficiently control solid modeling technique allow designer sculpt mathematically technique similar sculpt real clay kind interface teleoperation system later section briefly address system potential teleoperation    Sun 3260 ATT VR1 Voice Recog Data Clove Tracking sensor parallel interface ATT PXM964 Wooden Table Display Sync controller Tektronix SGS610 polarize shutter polarizing figure 1 Synthetic Visual SYSTEM OVERVIEW component system shelf alternative find main cpu system Sun workstation 3260 refer block diagram figure 1 ATT Pixel Machine PXM render smooth shade image update second adequate speed type interaction update second preferred VPL DataGlove ii hand tracking incorporate Polhemus electro magnetic track sensor attach backhand glove sensing position orientation Fiber optic sensor    mount glove    measure bend individual finger joint Data glove drive computer model human hand accuracy glove ideal cor0pensate calibration procedure geometric constraint mechanism voice recognition hardware ATT VR1 distinguish 40 second long phrase adequate experimentation production CAD system need use syntactic analysis translate phrase group large functional range Environment Hardware Stereoscopic display capability add Tektronix SGS610 stereo graphic system use polarize shutter mount display velcro shutter polarization alternate frame leave right eye view user wear cordless glass fix polarization host software write c provide object orient program implement bulk interface hand model glove speech interface graphical button menus surface representation system give constant visual feedback hand render efficiency smooth shaded sphere use smooth shaded surface render helpful user system sit chair work small table locate display image display depict table control panel add graphical button figure 2 show detailed view hand operate virtual control panel control panel provide help user navigate model system button press table act natural source tactile feedback response button press button light new button appear menu invoke figure 3 show menu b spline curve figure 2 Detail virtual control panel GESTURE SPEECH INTERFACE Computer Hand Model DataGlove control simple computer model hand hand model build thumb finger component parameterize leave right hand DataGlove measure joint near finger tip approximate ratio PIP joint bone length joint angle limitation take hand model provide adequate visual feedback show hand relationship synthetic world tactile feedback impractical try wrap finger object real world CAD application decide use conventional approach start implement capability dimensional locator pick wand Viekers Clark index finger tip like stylus locate thumb gesture voice command initiate pick method perform follow task operate virtual control panel Selecting object geometric feature translation rotation scaling object perturbing control point bicubic patch define space curve sweep surface gesture combine Speech simple gesture vocabulary choose system basic assumption gesture versus speech assume pose recognition single hand efficient speech normal discourse people tend use hand gesture augment speech description easily gesture speak dimensional shape information figure 3 Selecting menu b spline efficiently describe hand assume spoken vocabulary standard interpretation hand gesture final assumption hand gesturing speech complement have mean expression interface rich interface final assumption support experience system voice recognition add design interface mind gesture limit small vocabulary consistent entire system thumb index finger gesture control panel speech command invoke system command Plck Clutch Throttle Gestures gesture system actually limited thumb abduction sensor thumb implement type gesture figure 4 pick gesture thumb draw index finger radial adduction gesture select object menu item control point etc thumb gesture enable disable mechanism clutching gesture Clutching allow user specify incremental transformation eliminate need uncomfortable contortion arm Throttlingis variation clutching gesture thumb abduction angle scale editing function thumb abduction angle large function deactivate clutching gesture Natural Gesturing Interface teleoperation 3d sculpt like harness dexterity hand manipulate object real world Figure 4 Thumb AbductionAdduction Gestures flexible gesture system need account pattern digit motion hand finger tip space require accurate track device DataGlove interference detection use hand model directly sculpt surface grab object remote site time deliver tactile feedback modeling dimension Geomslrl Constraint4 system implement modeling technique common modeling system simple geometric constraint illustrate advantage gesture combine speech offer insight technique implement system intend testbe experiment direct dimensional interaction technique Mechanical CAD application benefit well method available dimension 3d model eventually investigate mechanism allow user establish euclidean property geometric feature coplanar colinear etc approach term variational geometry dimensional technique variational geometry report dimensional version describe ideal constraint mechanism Biers snap drag system extend 3D Placement Synthetic object translate rotate scale relative index finger position hand rotation transformation task invoke say translate rotate scale control clutching throttling gesture exit say ok name new transformation default transformation occur user reference frame combination principle axis constraint adequate quickly adjust view sufficient precisely arrange docking object well control world coordinate frame use visual feedback judge result address implement method describe Bier skitter jack Modeling Surfaces initial experiment implement simple technique model bicubic patch type representation widely offer good test case gesture speech interface software use uniform b spline represent surface technique general representation include discrete b spline NURBS Curve DefinBion Curves generate surface system use table index finger voice command define b spline curve operation snap grid toggle say grid index finger drag cursor thumb clutched control polygon sketch correspond b spline curve generate Speech create control point    ok automatically close control polygon    close stop operation    quit say close quit automatically add curve menu Free Form Surfaces number way generate free form surface method work system include rotationally sweep surface Surfaces sweep b spline path Offset curve slab move control point reshape surface Swept cylinder nt require glove interface arbitrary rotation axis 3d need rotational sweep easily accomplished step select curve position rotation axis specify rotation distance degree positioning rotation axis perform like object transformation task axis constrained lie table sweeping offset curve arbitrary path glove offer advantage surface sweeping task hand drag curve space voice command ok fix new control curve control curve establish surface generate rubber band hand drag curve template unfortunately method result contortion arm simultaneous view difficult judge position template line sight easy generate sweep surface b spline establish path operation require step b spline select menu designate sweep path say path template curve select menu finally speech command sweep generate surface curve Suface Refinement Clark describe dimensional positioning device b spline control point word user sensation stretch flexible sheet material way sheet retain original derivative continuity implement similar operation having benefit improve track device well fast visual feedback similar technique adaptive refinement control point perturbation describe glove single control point control point select say point locating point finger tip thumb picking gesture say point drag initiate task use hand motion select control point render surface control point move well able understand surface actually change default thumb clutching enable disable point drag say throttle switch thumb gesture semantic throttle instead clutch default motion control point constrain surface normal vector constraint toggle say vector surface refinement example show gain have speech recognition convenient switch different constraint thumb gesture semantic distraction example show sensible partitioning voice gesture semantic voice navigate system hand provide shape information hierarchical refinement method Forsey Bartels adaptive subdivision create varying level detail movement control point course representation propagate influence control point refined subregion focus instead multiple control point single level refinement move simultaneously user provide menu dimensional Figure 5 Filtered Perturbation Control Points filter single control point choose filter center control point surround control point assign appropriate value filter scaling motion index finger perturb variety size shape filtering motion control point figure 5 show surface push 3x5 motion filter future work TELEOPERATION teleoperation face different set problem CAD need establish early describe natural gesture interface accurate noise free hand tracking device require teleoperation constraint mechanism counter track inaccuracy complete model site force accept tracking error implement loose coupling hand motion manipulator control manipulation task stereopsis important particularly grasp object require coordinated pair video camera remote site special hardware synchronize camera alternate frame task like stack insertion helpful use multiple view remote site tactile feedback critical user want reach remote site establish grasp manipulator CAD domain difficult tractable problem teleoperation tactile feedback difficult deliver add mechanism extract computer representation remote site Stereo image site augment depth information range datum compute measured information occlude face surface environment chance store correspond computer model make problem tractable CAD domain Force feedback hand arm hard achieve mechanical system available integrated glove allow free hand motion force deliver arm individual digit hand conclusion present prototype synthetic environment testbe experiment hand gesture speech interface main feature system include realistic visual feedback direct 3d interaction speech recognition implement simple modeling technique demonstrate dimensional problem well handle tool bring problem close user space perception enhance natural mean communication exist user computer system early stage development demonstrate practical synthetic visual environment improve way interact 3d modeling system experience interactive modeling task speech recognition add Hand gesture adequate navigate system virtual control panel dramatic improvement interface speech recognition add future direction work include teleoperation CAD application plan explore alternative gesture scheme alternative role speech recognition acknowledgment wish thank Art Schmidt Bob Castor voice recognition hardware Behzad Shahraray suggest filter point drag
48,1989,abstract model human interaction computer display statistical graphic develop test experiment examine user speed accuracy identification comparison question 17 graph type result indicate response time accuracy influence perceptual informational complexity graph relation figure axis Model 1 physical element graph point line area Model 2 data ink ratio data density Model 3 discussion focus development single integrate model interaction graphic Cognitive Models Performance Models introduction develop performance model cognitive model conduct research test model understand effect computer graphic user pace recent rapid expansion graphic capability paper describe initial step undertake Human Computer Interaction Laboratory HCIL NASAs Johnson Space Center develop test model user interaction graphic particularly statistical graph focus initial effort develop model relate statistical graph reason 1 recent concept statistician design provide guidance develop statistical graph specifically work Bertin Tufte serve potential user model 2 statistical graph play important role key area human computer interface user computer dialogue eg direct manipulation interface review task specific tool present information eg statistical graphic package 3 computer display graph crucial variety task Space Station Freedom future advanced spacecraft model mention Cleveland McGill address detail propose different variable basic feature statistical graph model base Bertins work focus construct 1 implantation ie variation spatial dimension graphic plane point line area 2 elevation ie variation graphical element quality size value texture color orientation shape 3 imposition ie information represent statistical graph network geographic map symbol Tufte provide set guideline concept construct graph map user model develop base Tuftes influential concept data ink data density Tufte describe data ink non erasable core graphic 2 p93 provide measure data ink ratio proportion graphic ink devoted nonredundant display data information 2 p93 Data density ratio number datum point area graphic tufte guideline maximize data ink ratio reason data density Bertins Tuftes idea feature datum graph derive experience statistician experimental evidence contrast recent research laboratory multivariate statistical technique empirical investigation basic feature datum graph research indicate factor underlie people similarity judgment statistical graph 1 perceptual complexity 2 axis require interpret data relation figure axe 3 informational complexity ie number data dimension primary purpose present experiment examine effect user performance computer display statistical graph feature identify multivariate technique lab focus people speed accuracy addition interested variable effect conditional user specific task ask subject type question 1 identify specific value associate variable specific variable associate value 2 compare value variable graph sophisticated task eg predict trend determine central tendency survey human factor engineer Johnson Space Center suggest graph frequently identification comparison account 42 user interaction graph sample experimental design permit provide empirical test effect Bertins implantation concept Tuftes data ink data density concept METHOD Subjects Thirty engineer scientist Lockheed ESC NASA JSC participate Stimuli Seventeen type graph stimulus graph 1 type scatter plot range graph density graph 2 type simple line graph line graph fill line graph 3 type bar graph bar graph check bar graph check bar graph line segmented stack bar graph column graph 4 miscellaneous graph ray graph surface graph texture surface graph star graph dot graph 3 D graph pie graph stick figure graph example unusual graph 17 graph type previous multivariate research feature datum graph describe consequently factor loading ie factor score factor derive experiment know graph Experimental Design Subjects receive 4 trial 17 graph total 68 trial identification trial subject ask identify value variable eg value Variable identify variable associate value eg variable value 15 trial subject compare value variable eg variable great value B C subject graph type contain different data question procedure stimulus present Macintosh Plus computer subject receive identical spoken computer display instruction describe 1 general objective experiment 2 stimulus 3 overall procedure 4 specific procedure trial subject tell speed accuracy record answer question quickly accurately possible subject familiarize graph view long want time experimenter explain information represent graph information obtain graph subject allow ask question graph period subject complete practice trial familiarize procedure subjectreceive experimental trial different random order subject initiate start trial select soft button label ready question display ready button subject read question select button statistical graph display subject answer question select alternative display graph Sixteen subject type response datum field response question display automatically end 68 trial subject debriefed RESULTS Analysis Multivariate Model Multiple regression analyse perform predictor variable factor derive previous research perceptual complexity figure axis relation informational complexity    interaction factor type question Identification Comparison criterion variable response time accuracy figure 1 show relation factor response time accuracy respond Identification Comparison question graph individual datum point graph function factor score good fitting regression line type question Increased Perceptual Complexity result increase response time decrease accuracy es130 1092 response time 172 accuracy 12s05 contrast great role axis helping interpret datum fast response time f130 228 i05 general increase Informational Complexity produce increase response time e130 1951205 increase accuracy f130 409 051206 see figure 1 relation factor response time accuracy conditional type question perceptual informational complexity response time increase fast increase complexity Identification question Comparison question Fsl30 471 121 respectively Its05 subject accuracy sensitive variation Informational Complexity Identification question f130 342 p05 sensitive change Perceptual Complexity Comparison question f130 131 i05 response time decrease rapidly Identification Comparison question reliance axis increase E130 116 1205 Variation importance axis different effect accuracy depend     5 l o 4 m u 038 3m11 3snods31l 101111100lnicifid      9o ii 4     p ue     u Jm m W o 5 mmm u o m mr o o o o o e ols ILL ISNOdSIEI IOINEIO0 1n30i13d question answer increase importance axis result increase accuracy Identification question decrease accuracy Comparison question e130 170 I205 Analysis Model Based Bertlns Implantation Concept 17 graph experiment categorize accord primary perceptual element suggest Bertins implantation construct point line area primary perceptual element density range dot graph point line ray surface stick figure segment bar 3 d graph base primarily line bar check bar check bar line column fill line texture surface pie star graph consist principally planar area figure 2 show response time accuracy Identification Comparison question graph type classify accord Bertins implantation category point line area general response fast accuracy great graph consist primarily planar area fs2 60 622 304 respectively 12s05 response time accuracy datum give implantation class conditional type question fs260 164 921 response time accuracy respectively IZS05 Figure 2 show subject performance change systematically implantation class change point line area Comparison question contrast change performance regular identification question individual analysis indicate point base graph response time fast f130 42 accuracy great f130 446 identification comparison question i2s05 contrast line base area base graph generally fast accurate comparison identification question es130 432 142 response time accuracy respectively line base graph fs130 249 659 response time accuracy respectively area base graph I2s05 Analysis Tuftes Data Ink ratio Data Density Concepts data ink ratio computer display ratio number pixel display unique information total number pixel display information graph varied 02 bar graph fill line graph 75 stick figure chart natural break datum texture surface graph data ink ratio 14 segment bar graph data ink ratio 48 datum density varied 40 datum pointsin2 stick figure chart 436 datum pointsin2 range graph multiple regression model test effect performance data ink ratio data density consist subject response time accuracy criterion variable data ink ratio data density interaction variable question type predictor variable multiple regression analysis indicate data ink ratio increase data density increase response time increase type question fs130 1134 230 respectively ls05 question typl identification POINT BASED LINE BASED graph TYPE figure 2 Mean COMPARISON 111 area base POINT BASEDLINE BASED area base graph TYPE response time accuracy identification comparison question function implantation level figure 3 relation data ink data density response time differ significantly function type question general accuracy decrease datum ink ratio increase e130 138 905 relation largely performance Comparison question Data ink x question interaction f130 656 Ii05 Similarly accuracy decrease datum density index increase F130 1154 I05 great effect identification question specific comparison demonstrate relation data ink response time accuracy clearly surface graph data ink ratio69 texture surface graph data ink ratio 14 differ presence additional ink provide visual texture provide information redundant variable label accord Tufte mean response time textured surface graph surface graph 788 vs 884 accuracy great 66 vs 56 question type identification comparison    1 discussion data experiment present provide support variable model affect user performance variable model implantation perceptual complexity relation figure axis informational complexity data ink data density combine model human interaction statistical graph primitive performance model response time base datum Response time    aperceptual complexity binformation complexity     cimplantation level     dneed axis edata ink fdata density parameter ab d great identification question Comparison question similarly datum suggest second primitive model accuracy     aperceptual complexity binformation complexity cimplantation level dneed axis     edata ink     f data density parameter b d great identification question d parameter negative Comparison question e f parameter great absolute value Comparison question model implantation level assume scale point physically simple element 1 scale line 2 area 3     n LOW 15 high 45 LOW 15 high 45 DATA INK RATIO DATA INK RATIO 100      iz     LOW 75 HIGH 100 LOW 75 HIGH 100 DATA DENSITY DATA DENSITY Figure 3 Mean response time accuracy Identification Comparison question low high datum ink ratio low high datum density Prolegomenon cognitive model user Interactions statistical graph currently develop cognitive model integrate variable examine experiment datum experimentprovide boundary cognitive model user interaction statistical datum graph 1 general subject respond fast accurately Comparison Identification question finding suggest subject comparative judgment graph identify value variable compare 2 variable investigate significantly related response time accuracy 3 relation variable user performance conditional type question Informational Complexity generally especially strong effect performance identification question implantation level data ink ratio appear great effect Comparison question variable Perceptual Complexity figure axis relation data density conditionality depend performancemeasure speed accuracy basic assumption develop cognitive model general purpose information processing component produce effect observe experiment invoke special purpose cognitive process account effect variable general component control 1 sensory process eg feature detection pattern recognition play role accounting effect implantation perceptual density 2 perceptual process example organization eg proximity similarity continuation symmetry closure eg 8 dimensional integrality help account finding area point line produce fast accurate performancea help explain effect perceptual density datum ink figure axis relation 3 cognitive process include attention reading process judgmental inferential process arithmetic operation important explain informational complexitydata ink data density affectperformance short term goal modelling effort elicit hypothese additional research human interaction computer graphic longterm goal effort improve understand human interaction computer graphic ultimately design graphic
49,1987,abstract database 150 interaction conduct electronic mail analyze database construct online tool user advisor interaction regard model intelligent help dialog pose query provide response accomplish shot type question user ask advisory strategy employ incomplete query followup question describe goal understand new online tool advise implication model shoot intelligent help dialog nous avon analyse une base de donnees de 150 conversation menee par courrier electronique La base de donnee ete con9ue comme un outil en ligne pour utilisateur et conseiller Cependant es conversation peuvent egalement tre consideree comme des modele de dialogue dassistance intelligente oil es question et es reponse sont formulee en une seule tentative nous examinon es type de question posee par es utilisateur et es strategy quemploient es conseiller face des question incomplete lorsquil nont pas la possibilite dun dialogue clarificateur La recherche pour de comprendre ce nouvel outil de conseil et se implication en tant que modele des dialogue dassistance intelligente une seule tentative User assistance diverse grow area investigation reason need well advisory facility conventional approach limit Online help system access command name present screenful reference material fail confuse user traditional alternative human tutor consultant expensive option usability difficulty perission copy wthout fee material grant provide copy distribute direct commercial advantage acm copyright notice title publicaion date appear notice give copy perm1s1on Assoiation Computing Machinery copy republish require fee specific permission second reason availability new technological possibility example help dialog relevant user concern help integrate user application typical help index current system state need explicitly include command argument help intelligent indexing response knowledge typical user interaction competence recent activity particular user intelligent help clearly usable help paper attempt join motivation examine database advisory interaction clientuser query advisor response conduct electronic mail database assemble project assist human advisor handle routine user query rationale human advisor efficient traditional role wait walk help request improve establish traditional advisory channel time previous work regard advisory interaction special case model intelligent help simulation advisor play intelligent help application someday implement specific constraint model particularly interesting database collection shot intelligent help dialog user advisor state query response single dialog turn Method analysis base collection 150 shot advisory dialog user query advisor response dialog initial database PCINFO online information facility pc service use Watson Research Center consulting portion PCINFO user submit query electronic mail user prompt classify query keyword provide line summary addition state question generate response send user add PCINFO database accessible user advisor question keyword summary pcinfo database slightly edit example non pc question remove summary alter clearly identify correspond question case intervene contact advisor client appear database disturb coherence question answer pair analysis pcinfo database main part concerned specific consequence shoot advisory dialog analyze kind question client raise medium convenient ask followup question second examine strategy advisor respond question convenient ask additional detail background examine strategy advisor answer question state anticipate followup question problem finally discuss reason advisor give select certain strategy question pose user analyze principal question pose PCINFO exchange typically que    tion 40 150 case question ask Prior work indicate client use face face interaction question nonserious problem define solved look manual measure seriousness study reflective judgment advisor recent analysis face face advisory interaction develop analytical taxonomy user question category taxonomy distinguish request Single Piece Information eg memory requirement x request CllllSlS eg cause happen cause happen sense easily find manual frequently require diagnosis problem solve ignore minor category streamline discussion expect find few cause question electronic mail exchange face face dialog bear early indication electronic mail advisory interaction favor client query trend direction difference small 77 face face dialog request cause versus 66 electronic mail exchange case remain question primarily request Single Pieces Information difference media majority Causes question face face interaction pertain novel extensive problem eg debug program achieve special effect text formatter reflect fact interaction lengthy involve alternate speak turn contrast problem pose electronic mail involve fairly routine problem eg client problem follow document installation procedure shot constraint limit complexity query pose electronic mail utility client able clearly state concern single utterance advisor state response single utterance client advisor count followup exchange fundamental difference study face face interaction observe great verification followup exchange client assert presuppose claim solution source problem advisor verify Verification help advisor client converge understanding problem solve help advisor adjust advice provide face face dialog initial question verification question 26 30 dialog verification request 76 followup question ask type 20 150 electronic mail exchange contain request verification Advisory strategy incomplete query 60 case 150 advisor information client query answer question 18 remain case true solution advisor able provide direction refer case expert suggest possible source problem test help isolate source remain 72 case incomplete query result incomplete solution advisor take action client pose question shoot omit relevant background information detail advisor need form answer solution depend know certain goal client unexpresse variety approach deal incomplete query common strategy 1 Assumptions goal 25 case half single piece information question client ask piece advice specific request include case client ask advisor recommendation software use distinguish component describe piece software client specific dimension important make judgement awkward ask advisor inference user goal Goals infer case client literal question concerned availability particular program advisor understand underlying goal obtain function program provide case program available alternative offer similar vein client ask cause question ask action possible advisor go literal action specify question infer underlying goal provide solution meet goal exchange client ask store file name array instead print screen FILES BASIC advisor infer client want presume want list file open input informed client action possible specify command FILES command pipeline command save provide alternative approach meet underlie goal Shell dir FILES dir pipeline case describe advisor arrive single solution base assumption goal 24 case strategy 2 provide Alternative Solutiom 18 base multiple compete goal advisor see constraint acceptable particular solution select present client alternative case client describe thing want include print mailing label mention access Program ask perform task advisor reply use Program alternative 1 infer goal client state advisor point Program print label page suggest use Program B print label provide facility exist list name case alternative provide occur query contain insufficient specification client configuration advisor provide alternative base different assumption display concurrent DOS automatically active display press Ctrl Tab Numlock activate concurrent DOS case advisor strategy J Assume Configuration make assumption configuration context problem occur case provide example underline e editor control code example code Printer X approach deal limited information 6 case 4 avoid Problem remove need assumption gather information complete query case client simply say certain program work certain condition get description malfunction advisor tell client use program encounter situation useful create problem s problem worth final strategy 5 Point Reference Sources appear advisor specific query contain detail instance case advisor give client complete command enter command insufficient information fully specify option advice option include EXTRACT command refer page 6 18 information 6 case category count category 2 case 72 incomplete query doubly classify Advisory strategy preempt followup shoot situation advisor plan have followup interaction anticipate client want know advice present detail client want minimum necessary answer literal request fact exchange incorporate publicly available information source user advisor encourage advisor provide extra information 77 150 pcinfo interaction extra effort appear preempt followup remain 73 exchange include relatively straight forward answer require additional elaboration circumvention case solution find strategy 1 provide Explanation thing work go wrong 51 case 12 77 question explicitly ask explanation error advisor provide explanation base cause error cause system bug generally explanation identify source problem exception condition produce system error help client anticipate occur client wrong unaware system restriction requirement explanation go wrong system work likely provide explanation provide case client actively wrong cause error question Lotus Z Data menu WORKBENCH able LOTUS fine exit Data menu Main menu directly Install Menu fix prob    lem ANSWER Workbench 430 interface LOTUS suppose work follow 1 Workbench exit run LOTUSBAT file bat directory exit assure lot memory LOTUS worksheet 2 Lotus run 3 exit Lotus LOTUSBAT restart WORKBENCH return Data menu sound like run BATCH file change LOTUS routine DATA menu nt exit menus key line DATADEF read KEVIN q lotus13return nt read way identify problem read way Z register trademark    Lotus Development Corporation direct answer present end show bold strictly speak client need solve problem assume diagnosis correct present solution advisor present additional information describe way thing suppose work anticipating client want understand solution appropriate motivation include explanation addition expectation client ask explanation client well prepare work advisor diagnose problem propose solution work advisor describe process explain purpose followup question complicated head question advisor provide rationale exit assure lot memory leave assure client process serve useful function contribute opportunity wrong strategy 2 Provide Tutorial general step step procedure instruction function step 19 case include work explanation doubly classified tutorial address explicitly request question example appear client describe problem uploading file answer describe upload reverse operation download describe procedure respect lift cookbook documentation minimum require answer question show bold question nt upload E78copy system hang ANSWER problem thing PCVM bond E78copy work need use bond method uploading download work follow 1 sure bond virtual disk nt issue PCDISK create transfer 360 K document p 6 14 Bond Users Guide 2 let bond know want use disk SETDISK f transfer describe p 6 29    uploading file Copy file bond disk COPY C foobar F Issue PCDISK EXTRACT foo bar transfer refer pp 6s18 extract option delete file bond disk command    DEL Ffoobar DOWNLOAD file issue PCDISK INSERT foobar script transfer Options pp 6I22 issue COPY Ffoobarscr C Delete file bond disk DEL Ffoobarscr E78 try put 1 2 end command string final strategy illustrate example    finesse problem know detailed explanation provide    3 Point Reference source 25 case 13 include tutorial explanation Reference source client give insufficient information query information complete answer case advisor want preempt followup show user place detail obtain desire Selecting strategy characterize advisor strategy process strategy selection begin understand interview PCINFO advisor ask review advice give explain respond way directive prompt advisor able articulate circumstance govern choice strategy instance advisor discuss choose assume configuration provide alternative solution override consideration time pressure question answer advisor general goal produce satisfactory solution time choosing assume configuration justify reduced time research compose response assume use particular printer answer justify follow 1 people site printer 2 query contain reference support assumption person say m e editor fancy word processor chance have fancy printer reduce 3 client reuse example substitute appropriate code different printer knowledge site inference base information query fact solution reusable contribute advisor decision assume configuration example illustrate consideration choose tutorial advisor comment general tendency provide work explanation especially client wrong feel explanation help client understand solution case explanation available nt know happen know work nt understand s want extremely explicit action work 11 tutorial provide step function help user understand lieu provide understanding go wrong explanation general reason give provide tutorial specific description save time busy user save time advisor preempt followup question advisor say tutorial particularly appropriate novice word question complexity task decide provide tutorial client judge knowledgeable advi sor hurry advisor likely merely brief description couple pointer reference source person say write macro combine spreadsheet world d oh want here detail person need point right direction instance tutorial extra information provide advisor sure client ask case advisor lack knowledge program client ask provide sort answer useful advisor provide core dump tutorial information obtain online reference source hope contain client look instance advisor confuse wording question sure error provide tutorial answer exact question say nt know problem here think want component step encourage advisor describe reason choose certain strategy disparity say instance advisor ask answer question suggest use MYTE instead E78 suggest advisor respond provide alternative ie x situation choose MYTE Y choose E78 decision root experience client pick thing think people find important know lot people hit memory boundary hit memory boundary s good reason use E78 know lot people value download speed reason choose MYTE advisor say generally provide alternative alternative exist answer similar question knowledge client circumstance assumption client goal cause propose single solution program mention question possible solution follow question site x new user recommend easy use learn emulation program time provide alternative advisor mention program solution difference advisor know site x condition slow response time program advisor assume response time override consideration explicitly mention query advisor ask answer question site x constraint exist surprisingly give single solution provide alternative recommend E78 easy install likely problem advisor ask mention alternative question program MYTE person look ease use assume download speed advantage MYTE important try terminal go unlike question client give indication goal advisor infer possible goal important noted case identical question wording elicit different choice strategy different advisor second advisor choose different strategy ask easy use emulation program question unlike advisor assume state goal important provide alternative alternative satisfied ease use goal satisfied goal possibly important alternative provide reason wording question cause advisor guess client preliminary stage look solution stage advisor note job provide information user use basis investigation provide single recommendation second reason lack familiarity site advisor sure program suggest available site reason provide solution example suggest consideration govern strategy selection subtle expose interview Summary Discussion Intelligent help shoot electronic mail dialog distinctive property type query client submit tended complex raise face face advisory interaction planning fact followup question easy raise face face situation Advisors special planning shot dialog variety technique deal detail background information omit client query assumption provide alternative response cover case differentiate base query state suggest way circumvent problem avoid need know exactly advisor plan followup question client provide work explanation tutorial give pointer documentation client optionally gain explanation variety subtle consideration mediate choice strategy advisor able articulate consideration case small change advice request evoke different strategy case advisor answer question attend different consideration choose different strategy raise question research strategy selection advice give generally limitation interview method knowledge engineering hope description shoot advisory dialog useful way provide insight pcinfo client advisor fact system description tune extend system well address pattern eg add advisor advisory interface remind advisor strategy employ deal limited problem detail background information user query field experience system generally successful pattern current use basis instruct new user advisor second use guide development intelligent help system shoot dialog approach potentially interesting reduce alter burden dialog support intelligent help facility provide Understanding way shoot advisory dialog work strength weaknesse special requirement help understand tradeoff involve acknowledgement wish thank Henry Morse Dave Chess data study time take describe objective develop pcinfo system
